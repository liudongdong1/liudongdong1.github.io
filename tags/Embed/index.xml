<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Embed - 标签 - DAY By DAY</title><link>liudongdong1.github.io/tags/embed/</link><description>Embed - 标签 - DAY By DAY</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor><webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 16 Mar 2022 22:21:29 +0000</lastBuildDate><atom:link href="liudongdong1.github.io/tags/embed/" rel="self" type="application/rss+xml"/><item><title>Linux Operation</title><link>liudongdong1.github.io/linux%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/</link><pubDate>Wed, 16 Mar 2022 22:21:29 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/linux%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/</guid><description>&lt;div class="featured-image">
&lt;img src="https://gitee.com/github-25970295/blogImage/raw/master/img/petal-5044428.png" referrerpolicy="no-referrer">
&lt;/div>1. 内核划分 .1. 字符设备 文本控制台( /dev/console )和串口( /dev/ttyS0 及其友 )是字符设备的例子 .2.块设备 .3. 网络接口： 内核与网络设备驱动间的通讯与字符和块设备驱动所</description></item><item><title>Camera_串口</title><link>liudongdong1.github.io/camera_%E4%B8%B2%E5%8F%A3/</link><pubDate>Sun, 23 May 2021 21:11:26 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/camera_%E4%B8%B2%E5%8F%A3/</guid><description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201206180344948.png" referrerpolicy="no-referrer">
      </div>% create an arduino object. instead of &#34;/dev/cu.usbmodem1411&#39;,&#39;BaudRate&#34; % use your serail port name. You can check it in arduino -&gt; tools -&gt; port. % Write the name of your port before the command &#39;BaudRate&#39; in the % following string. ar = serial(&#39;/dev/cu.usbmodem1411&#39;,&#39;BaudRate&#39;,9600); % Check for the camera name with the command % webcamlist() in matlab. cameras= webcamlist(); % type &#34;cameras&#34; in the command window and see which camera correspond]]></description></item><item><title>WirePCB</title><link>liudongdong1.github.io/wirepcb/</link><pubDate>Sat, 27 Mar 2021 16:00:04 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/wirepcb/</guid><description>&lt;div class="featured-image">
&lt;img src="https://gitee.com/github-25970295/blogImage/raw/master/img/images.jpg" referrerpolicy="no-referrer">
&lt;/div>利用Multisim可以实现模拟，数字电路系统仿真，也可以实现PCB设计制作，一般使用Multisim进行电路仿真设计，将生成的网表修改后导</description></item><item><title>job投递相关</title><link>liudongdong1.github.io/job/</link><pubDate>Tue, 30 Jun 2020 16:00:04 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/job/</guid><description>&lt;div class="featured-image">
&lt;img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
&lt;/div>会议论文1：《RFID and Camera Fusion for Recognition of Human-object Interactions》，MobiCom21，CCF A， 学生一作 会议论文2：《An RFID and Computer Vision Fusion System for Book Inventory using</description></item><item><title>嵌入式学习路线</title><link>liudongdong1.github.io/temp-task/</link><pubDate>Tue, 30 Jun 2020 16:00:04 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/temp-task/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2023/04/09/20/04/flower-7912164__340.jpg" referrerpolicy="no-referrer">
&lt;/div>1. 技能要求 .1. 嵌入式硬件开发 熟悉电路等知识，非常熟悉各种常用元器件，掌握模拟电路和数字电路设计的开发能力 熟悉硬件开发模式和设计模式，熟悉各种芯</description></item><item><title>AI落地部署</title><link>liudongdong1.github.io/ai%E8%90%BD%E5%9C%B0%E9%83%A8%E7%BD%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/ai%E8%90%BD%E5%9C%B0%E9%83%A8%E7%BD%B2/</guid><description>针对不同平台对生成的模型进行转换，也就是俗称的parse、convert，即前端解释器 针对转化后的模型进行优化 在特定的平台(嵌入端或者服务端</description></item><item><title>OpenHarmony 临时学习记录</title><link>liudongdong1.github.io/openharmony%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/openharmony%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>&lt;div class="featured-image">
&lt;img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
&lt;/div>1. 系统架构 内核层 内核子系统：采用多内核（Linux内核或者LiteOS）设计，支持针对不同资源受限设备选用适合的OS内核。内核抽象层（KAL</description></item><item><title>TensorRT</title><link>liudongdong1.github.io/tensorrt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/tensorrt/</guid><description>ONNX parser: Takes a converted PyTorch trained model into the ONNX format as input and populates a network object in TensorRT. Builder: Takes a network in TensorRT and generates an engine that is optimized for the target platform. Engine: Takes input data, performs inferences, and emits inference output. Logger: Associated with the builder and engine to capture errors, warnings, and other information during the build and inference phases. Convert the</description></item><item><title>uboot启动流程</title><link>liudongdong1.github.io/uboot-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/uboot-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid><description>.text: “以下是代码段” .data: “以下是初始化数据段” .bss: “以下是未初始化数据段” .global: 定义一个全局符号，通常是为ld使用。 .abort: 停止汇编 .align absexpr1, absexpr2 : 以某种对齐方式,</description></item><item><title>单元电路</title><link>liudongdong1.github.io/%E5%8D%95%E5%85%83%E7%94%B5%E8%B7%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/%E5%8D%95%E5%85%83%E7%94%B5%E8%B7%AF/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2019/07/14/16/27/pen-4337521__340.jpg" referrerpolicy="no-referrer">
&lt;/div>1、直流稳压电源电路； 2、运算放大器电路； 3、信号产生电路； 4、信号处理电路； 5、传感器应用电路； 6、功率驱动电路； 7、电平转换电路； 8、显</description></item></channel></rss>