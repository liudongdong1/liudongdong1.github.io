<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>并发 - 标签 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/tags/%E5%B9%B6%E5%8F%91/</link>
    <description>并发 - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 31 Jul 2022 16:00:04 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/tags/%E5%B9%B6%E5%8F%91/" rel="self" type="application/rss+xml" /><item>
  <title>开源项目-Margo</title>
  <link>https://liudongdong1.github.io/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-margo/</link>
  <pubDate>Sun, 31 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-margo/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/Z6RA2GAS78.jpg" referrerpolicy="no-referrer">
      </div>Argobots pools with Margo RPCs #include &lt;assert.h&gt; #include &lt;stdio.h&gt; #include &lt;margo.h&gt; #include &lt;alpha-server.h&gt; static void finalize_xstream_cb(void* data); int main(int argc, char** argv) { margo_instance_id mid = margo_init(&#34;tcp&#34;, MARGO_SERVER_MODE, 0, 0); assert(mid); margo_set_log_level(mid, MARGO_LOG_INFO); hg_addr_t my_address; margo_addr_self(mid, &amp;my_address); char addr_str[128]; size_t addr_str_size = 128; margo_addr_to_string(mid, addr_str, &amp;addr_str_size, my_address); margo_addr_free(mid,my_address); margo_info(mid, &#34;Server running at address %s, with provider id 42&#34;, addr_str); ABT_pool pool; ABT_pool_create_basic( ABT_POOL_FIFO, ABT_POOL_ACCESS_SPSC, ABT_TRUE, &amp;pool); ABT_xstream xstream; ABT_xstream_create_basic( ABT_SCHED_DEFAULT,]]></description>
</item>
<item>
  <title>argobots</title>
  <link>https://liudongdong1.github.io/argobots/</link>
  <pubDate>Sat, 23 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/argobots/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/Y2AHVPYB51.jpg" referrerpolicy="no-referrer">
      </div>Condition Variable: a condition on which ULTs are waiting until it is signaled. Execution Stream (ES): a sequential instruction stream that contains one or more work units. Future: a mechanism for passing a value between work units, allowing a work unit to wait for a value that is set asynchronously. Handle: an opaque reference to an Argobots object. Mutex: a synchronization method to support mutual exclusion between work units. Object:]]></description>
</item>
</channel>
</rss>
