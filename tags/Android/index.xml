<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Android - 标签 - DAY By DAY</title>
    <link>liudongdong1.github.io/tags/android/</link>
    <description>Android - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 14 Dec 2022 21:31:56 &#43;0000</lastBuildDate><atom:link href="liudongdong1.github.io/tags/android/" rel="self" type="application/rss+xml" /><item>
  <title>database-objectbox</title>
  <link>liudongdong1.github.io/database-objectbox/</link>
  <pubDate>Wed, 14 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/database-objectbox/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>ObjectBox数据库是用于对象的超快速轻量级数据库，由greenrobot团队开发，与GreenDao，EventBus等师出同门。 1. 使]]></description>
</item>
<item>
  <title>Dagger2依赖注入</title>
  <link>liudongdong1.github.io/dagger%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</link>
  <pubDate>Tue, 13 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/dagger%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>依赖注入可以实现解耦，达到高内聚低耦合的目的，保证代码的健壮性、灵活性和可维护性。 1. 依赖注入方式 1、构造注入：通过构造函数传参给依赖的成员变]]></description>
</item>
<item>
  <title>database-greeDaos</title>
  <link>liudongdong1.github.io/database-greedaos/</link>
  <pubDate>Tue, 13 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/database-greedaos/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>for new apps we recommend ObjectBox, a new object-oriented database that is much faster than SQLite and easier to use. For existing apps based on greenDAO we offer DaoCompat for an easy switch (see also the announcement). 1. GreeDAO 一个将对象映射到SQLite数据库中的轻量且快速的ORM（ob]]></description>
</item>
<item>
  <title>picture_Glide</title>
  <link>liudongdong1.github.io/picture_glide/</link>
  <pubDate>Wed, 23 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/picture_glide/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>glide是google官方推荐的图片加载框架，github地址为bumptech/glide 。glide的强大在于它的生命周期管理(gli]]></description>
</item>
<item>
  <title>Mvp-arch</title>
  <link>liudongdong1.github.io/mvp-arch/</link>
  <pubDate>Mon, 21 Nov 2022 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/mvp-arch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/24/02/48/christmas-6820100__340.jpg" referrerpolicy="no-referrer">
      </div>Architecture Blueprint Project Structure data: It contains all the data accessing and manipulating components. di: Dependency providing classes using Dagger2. ui: View classes along with their corresponding Presenters. service: Services for the application. utils: Utility classes. 数据层面 通过AppDataManager 提供数据库，网络数据，本地P]]></description>
</item>
<item>
  <title>EventBus</title>
  <link>liudongdong1.github.io/eventbus/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/eventbus/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>Event： 事件，可以是任意类型的对象 Subscriber： 事件订阅者，在 EventBus 3.0 之前我们必须定义以onEvent开头的那几个方法，分别是 onEvent 、o]]></description>
</item>
<item>
  <title>network-retrofit</title>
  <link>liudongdong1.github.io/network-retrofit/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/network-retrofit/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>Retrofit是Square公司开发的一款针对Android和java的网络请求框架，遵循Restful设计风格，底层基于OkHttp。 支]]></description>
</item>
<item>
  <title>observer/observable</title>
  <link>liudongdong1.github.io/jdk-observer-observable/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/jdk-observer-observable/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>1. JDK-Observable 可观察对象类 public class Observable { private boolean changed = false; private Vector&lt;Observer&gt; obs; /** Construct an Observable with zero Observers. */ public Observable() { obs = new Vector&lt;&gt;(); } /** * Adds an observer to the set of observers for this object, provided * that it is not the same as some observer already in the set. * The order in which notifications]]></description>
</item>
<item>
  <title>OkHttp</title>
  <link>liudongdong1.github.io/network-okhttp/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/network-okhttp/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>OkHttp是一个优秀的网络请求框架,可能一说到网络请求框架,可能很多人都会想到volley,volley是一个Google提供的网络请求框]]></description>
</item>
<item>
  <title>Android_NDK开发教程</title>
  <link>liudongdong1.github.io/android_ndk%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</link>
  <pubDate>Fri, 21 Oct 2022 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/android_ndk%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</guid>
  <description><![CDATA[0. NDK 环境安装 https://blog.csdn.net/hello_1995/article/details/108858909 Tools-&gt;SDK Manager-&gt;Android SDK-&gt;SDK Tools，勾选 NDK 和 CMake 选中 Show Package Details 复选框，选中 NDK (Side by side) 复选框及其下方与您要安装的 NDK 版本对应的复选框。Android Studio 会将所]]></description>
</item>
</channel>
</rss>
