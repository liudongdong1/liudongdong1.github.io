<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Visualize - 标签 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/tags/visualize/</link>
    <description>Visualize - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 14 Jun 2021 21:31:56 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/tags/visualize/" rel="self" type="application/rss+xml" /><item>
  <title>FRFNTPTN</title>
  <link>https://liudongdong1.github.io/frfntptn/</link>
  <pubDate>Mon, 14 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/frfntptn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/UELPTNOKP4.jpg" referrerpolicy="no-referrer">
      </div>0. python统计函数 import numpy as np layerData = np.loadtxt(open(&#39;./data/layer_test_acc.csv&#39;, &#34;r&#34;), delimiter=&#34;,&#34;, skiprows=1,dtype=str) import seaborn as sns from sklearn.metrics import confusion_matrix import matplotlib.pyplot as plt sns.set() from sklearn.metrics import precision_score from sklearn.metrics import recall_score print(len(ground),len(predict)) C2= confusion_matrix(ground, predict, labels=[0,1]) #print(ground) #print(C2) #https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html result=C2.ravel() print(C2.ravel(),C2.ravel()/len(ground)) print(&#34;speed:{}- layer:{}- distance:{} -slop:{} -accuracy:{} -TN:{} -FP:{} -FN:{} -TP:{} -Pr:{} -Recal:{}&#34;.format(0.15,2,0.3,0,count/len(ground),result[0],result[1],result[2],result[3],precision_score(ground,predict),recall_score(ground,predict))) sns.heatmap(C2,annot=True) # f, (ax1,ax2) = plt.subplots(figsize =]]></description>
</item>
<item>
  <title>confusionmatrix</title>
  <link>https://liudongdong1.github.io/confusionmatrix/</link>
  <pubDate>Thu, 10 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/confusionmatrix/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/RP9VPMSKFG.jpg" referrerpolicy="no-referrer">
      </div>clc; clear; close all; classname = {&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;,&#39;g&#39;,&#39;h&#39;,&#39;i&#39;,&#39;j&#39;,&#39;k&#39;,&#39;l&#39;,&#39;m&#39;,&#39;n&#39;,&#39;o&#39;,&#39;p&#39;,&#39;q&#39;,&#39;r&#39;,&#39;s&#39;,&#39;t&#39;,&#39;u&#39;,&#39;v&#39;,&#39;w&#39;,&#39;x&#39;,&#39;y&#39;,&#39;z&#39;,&#39;\heartsuit&#39;,&#39;\Delta&#39;,&#39;&#39;}; num_class=29; %统计矩阵，每一行对应一个label， 每一列代表预测值 fuse_matrix=[ ]; fuse_matrix=fuse_matrix/60; imagesc(fuse_matrix) colormap(parula); colorbar; % % textStrings = num2str(fuse_matrix(:),&#39;%0.2f&#39;); % textStrings = strtrim(cellstr(textStrings)); % % for i = 1:length(textStrings) % if isequal(textStrings(i),{&#39;0.00&#39;}) % textStrings(i) = {&#39;&#39;}; % end % end % % [x,y]]]></description>
</item>
<item>
  <title>javaFx</title>
  <link>https://liudongdong1.github.io/javafx/</link>
  <pubDate>Wed, 24 Mar 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javafx/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210501110109.png" referrerpolicy="no-referrer">
      </div>JavaFX是用于构建富Internet应用程序的Java库。 使用此库编写的应用程序可以跨多个平台一致地运行。 使用JavaFX开发的应用程序]]></description>
</item>
<item>
  <title>DashBoard</title>
  <link>https://liudongdong1.github.io/dashboard/</link>
  <pubDate>Sun, 24 Jan 2021 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dashboard/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210501131847.png" referrerpolicy="no-referrer">
      </div>HTML 几种dashboard 页面记录： https://github1s.com/h2oai/wave https://github.com/CreativeIT/material-angular-dashboard https://github.com/akveo/ngx-admin flask+json: https://github.com/christabor/flask_jsondash]]></description>
</item>
<item>
  <title>pyQt</title>
  <link>https://liudongdong1.github.io/pyqt/</link>
  <pubDate>Fri, 22 Jan 2021 23:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pyqt/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/image-20210201072032331.png" referrerpolicy="no-referrer">
      </div>1. 安装 pip install PyQt5 pip install PyQt5-tools #安装测试 import sys from PyQt5 import QtWidgets, QtCore app = QtWidgets.QApplication(sys.argv) widget = QtWidgets.QWidget() widget.resize(400, 400) widget.setWindowTitle(&#39;Hello World&#39;) widget.show() 2. 界面设计 使用qt designer 或者使用vscode集成的qt designer 进行ui控件等布局，正对]]></description>
</item>
<item>
  <title>Wandb_intro</title>
  <link>https://liudongdong1.github.io/wandb_intro/</link>
  <pubDate>Sun, 13 Sep 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wandb_intro/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://images.unsplash.com/photo-1625111970819-5f32ac1885c3?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDN8NnNNVmpUTFNrZVF8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" referrerpolicy="no-referrer">
      </div>Use W&amp;B&rsquo;s lightweight, interoperable tools to quickly track experiments, version and iterate on datasets, evaluate model performance, reproduce models, visualize results and spot regressions, and share findings with colleagues. 0. Command setup wandb #pip install wandb #wandb login start a new run import wandb wandb.init(project=&#34;my-test-project&#34;) Track metrics wandb.log({&#39;accuracy&#39;: train_acc, &#39;loss&#39;: train_loss}) track hypermeters wandb.config.dropout = 0.2 1. experiment tracking wandb.init(): Initialize a new run at the top of your script.]]></description>
</item>
<item>
  <title>PygameRecord</title>
  <link>https://liudongdong1.github.io/pygamerecord/</link>
  <pubDate>Thu, 30 Jul 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pygamerecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/04/04/14/12/monitor-1307227__480.jpg" referrerpolicy="no-referrer">
      </div>pygame 是跨平台 Python 模块，专为电子游戏设计，包含图像、声音。创建在 SDL(Simple Direct Media Layer) 基础上，允许实时电子游戏研发而无需被低级语言、如 C 语言或是更低级的汇编语言]]></description>
</item>
<item>
  <title>VisualizationTool</title>
  <link>https://liudongdong1.github.io/visualizationtools/</link>
  <pubDate>Wed, 13 May 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/visualizationtools/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/24/12/17/rocks-6278936__340.jpg" referrerpolicy="no-referrer">
      </div>1. ipyvolume 3d plotting for Python in the Jupyter notebook based on IPython widgets using WebGL 2. bokeh Interactive Data Visualization in the browser, from Python Awesome dataviz JavaScript tools Charting libraries Charting libraries for graphs Maps d3 React Misc Android tools C++ tools Excel tools Golang tools iOS tools Python tools R tools Ruby tools Markup-based tools Other tools Resources Books Podcasts Twitter accounts Websites Contributing License JavaScript tools]]></description>
</item>
</channel>
</rss>
