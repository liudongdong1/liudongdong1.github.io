<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Shell - 标签 - DAY By DAY</title>
    <link>liudongdong1.github.io/tags/shell/</link>
    <description>Shell - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 20 Mar 2022 23:25:57 &#43;0000</lastBuildDate><atom:link href="liudongdong1.github.io/tags/shell/" rel="self" type="application/rss+xml" /><item>
  <title>shell_history</title>
  <link>liudongdong1.github.io/shell_history/</link>
  <pubDate>Sun, 20 Mar 2022 23:25:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_history/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/02/14/25/flower-7043267__340.jpg" referrerpolicy="no-referrer">
      </div>Linux 命令的历史记录，会持久化存储，默认位置是当前用户家目录的 .bash_history 文件。 当 Linux 系统启动一个 Shell 时，Shell 会从 .bash_history 文件中，读取历史记录，存储在相应内存]]></description>
</item>
<item>
  <title>shell_iotop</title>
  <link>liudongdong1.github.io/shell_iotop/</link>
  <pubDate>Sun, 20 Mar 2022 23:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_iotop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/07/09/21/24/mazarine-blue-butterfly-6400060__340.jpg" referrerpolicy="no-referrer">
      </div>iotop 命令 是一个用来监视磁盘 I/O 使用状况的 top 类工具。iotop 具有与 top 相似的 UI，其中包括 PID、用户、I/O、进程等相关信息。Linux 下的 IO 统]]></description>
</item>
<item>
  <title>shell_grep</title>
  <link>liudongdong1.github.io/shell_grep/</link>
  <pubDate>Sun, 20 Mar 2022 22:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_grep/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/15/00/40/lemonade-7014122__340.jpg" referrerpolicy="no-referrer">
      </div>grep 命令是一种强大的文本搜索工具，它能使用正则表达式，按照指定的模式去匹配，并把匹配的行打印出来。需要注意的是，grep 只支持匹配而不能替换匹]]></description>
</item>
<item>
  <title>shell_sed</title>
  <link>liudongdong1.github.io/shell_sed/</link>
  <pubDate>Sun, 20 Mar 2022 20:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_sed/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/05/08/16/06/dog-5146351__340.jpg" referrerpolicy="no-referrer">
      </div>sed 作为一种非交互式编辑器，它使用预先设定好的编辑指令对输入的文本进行编辑，完成之后输出编辑结果。 sed 从输入文件中读取内容，每次处理一行内容，并]]></description>
</item>
<item>
  <title>shell_find</title>
  <link>liudongdong1.github.io/shell_find/</link>
  <pubDate>Sat, 19 Mar 2022 22:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_find/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2014/09/07/21/34/child-438373__340.jpg" referrerpolicy="no-referrer">
      </div>查找系统中所有的大小超过 200M 文件，查看近 7 天系统中哪些文件被修改过，找出所有子目录中的可执行文件，这些任务需求 find 命令都可以轻松胜任。find 搜]]></description>
</item>
<item>
  <title>shell刷题</title>
  <link>liudongdong1.github.io/shell%E5%88%B7%E9%A2%98/</link>
  <pubDate>Sat, 19 Mar 2022 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell%E5%88%B7%E9%A2%98/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/22/03/22/passiflora-7027917__340.jpg" referrerpolicy="no-referrer">
      </div>grep、awk、sed ， 以及 cat、head、tail、less、more 命令 1. 统计文件行数 #解法1:awk awk &#39;{print NR}&#39;| tail -n1 #awk print NR 打印每一行的行]]></description>
</item>
<item>
  <title>shell_AWK</title>
  <link>liudongdong1.github.io/shell_awk/</link>
  <pubDate>Sat, 19 Mar 2022 20:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_awk/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/16/21/46/tea-6101059__340.jpg" referrerpolicy="no-referrer">
      </div>awk 是报表生成工具，同样是逐行取出文件，但是取出的目的是对内容进行二次加工，然后将有用的数据单独格式化输出、或进行归纳统计得到统计结果等。 awk -F:]]></description>
</item>
<item>
  <title>shell_kill</title>
  <link>liudongdong1.github.io/shell_kill/</link>
  <pubDate>Wed, 19 Jan 2022 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_kill/</guid>
  <description><![CDATA[Linux 中的 kill 命令用来终止指定的进程（terminate a process）的运行，是 Linux 下进程管理的常用命令。通常，终止一个前台进程可以使用 Ctrl+C 键，但]]></description>
</item>
<item>
  <title>shell_scriptRecord</title>
  <link>liudongdong1.github.io/shell_scriptrecord/</link>
  <pubDate>Mon, 20 Dec 2021 23:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/shell_scriptrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/22/17/25/stork-7029266__340.jpg" referrerpolicy="no-referrer">
      </div>1. 内存监控脚本 #!/bin/bash #memory use mem_war_file=/tmp/mem_war.txt mem_use=`free -m | grep Mem | awk &#39;{print $3}&#39;` mem_total=`free -m | grep Mem | awk &#39;{print $2}&#39;` mem_percent=$((mem_use*100/mem_total)) # echo &#34;$mem_percent&#34;% if (($mem_percent &gt; 80));then echo &#34;`date +%F-%H-%M` mem: ${mem_percent}%&#34; &gt;$mem_war_file echo &#34;`date +%F-%H-%M` mem: ${mem_percent}%&#34; | mail -s &#34;mem warning&#34; root fi #!/bin/bash ####################################################### #检测网卡流量，并按规定格]]></description>
</item>
<item>
  <title>jdk_tomcat</title>
  <link>liudongdong1.github.io/jdk_tomcat/</link>
  <pubDate>Sat, 15 Aug 2020 12:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>liudongdong1.github.io/jdk_tomcat/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/54R1KQELFW.jpg" referrerpolicy="no-referrer">
      </div>1. install jdk_tomcat #!/bin/bash base_dir=$(cd &#34;$(dirname &#34;$0&#34;)&#34;;pwd) JDK_FILE=$(ls | grep jdk-*-linux-*.tar.gz) TOMCAT_FILE=$(ls | grep apache-tomcat-*.tar.gz) #下载JDK download(){ os_version=`uname -a` echo $os_version architecture=&#34;64&#34; echo &#34;$os_version&#34; | grep -q &#34;$architecture&#34; if [ $? -eq 0 ] then # 不存在即去外网下载jdk文件 if [ ! -f &#34;$JDK_FILE&#34; ]; then echo &#34;您正]]></description>
</item>
</channel>
</rss>
