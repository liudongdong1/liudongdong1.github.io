<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Java - 标签 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/tags/java/</link>
    <description>Java - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 02 Dec 2022 09:00:00 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/tags/java/" rel="self" type="application/rss+xml" /><item>
  <title>Android_Universal_Image_Loader</title>
  <link>https://liudongdong1.github.io/android_universal_image_loader/</link>
  <pubDate>Fri, 02 Dec 2022 09:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/android_universal_image_loader/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/CJCMX14Z4F.jpg" referrerpolicy="no-referrer">
      </div>ImageLoader&ndash;对外接口 ImageLoader 单例建造者模式构建 public static void initImageLoader(Context context) { // This configuration tuning is custom. You can tune every option, you may tune some of them, // or you can create default configuration by // ImageLoaderConfiguration.createDefault(this); // method. ImageLoaderConfiguration.Builder config =]]></description>
</item>
<item>
  <title>EffectJava_Enum&amp;Annotate</title>
  <link>https://liudongdong1.github.io/effectjava_enumannotate/</link>
  <pubDate>Sat, 30 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectjava_enumannotate/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210521154948.png" referrerpolicy="no-referrer">
      </div>1. 使用枚举类型代替整型常量 它们是通过公共静态 final 属性为每个枚举常量导出一个实例的类。 由于没有可访问的构造方法，枚举类型实际上是 final 的。 由于客户既]]></description>
</item>
<item>
  <title>面经_JVM</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_jvm/</link>
  <pubDate>Mon, 21 Mar 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_jvm/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/04/20/15/04/hare-6194141__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 简述垃圾回收机制 在 JVM 中，有一个垃圾回收线程，它是低优先级的，在正常情况下是不会执行的，只有在虚拟机空闲或者当前堆内存不足时，才会触发执行，]]></description>
</item>
<item>
  <title>Android_性能优化汇总</title>
  <link>https://liudongdong1.github.io/android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
  <pubDate>Fri, 24 Dec 2021 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/16/15/35/technology-6801334__340.jpg" referrerpolicy="no-referrer">
      </div>性能问题排查： 1.数据埋点上报 2.使用控制台的NetWork、Performance等工具 3.webpack-bundle-analyzer]]></description>
</item>
<item>
  <title>WindowStructure</title>
  <link>https://liudongdong1.github.io/windowstructure/</link>
  <pubDate>Wed, 08 Dec 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/windowstructure/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/02/09/21/19/dog-walk-snow-6000001__340.jpg" referrerpolicy="no-referrer">
      </div>1. CircularFifoQueue 通过改变start 和end的索引位置，实现先进先出的操作，同时获取值的时候按照进入的顺序。 依赖包：implementation group: &lsquo;org.apache.commons&rsquo;, name: &lsquo;commons-collections4&rsquo;, version:]]></description>
</item>
<item>
  <title>保留俩位小数</title>
  <link>https://liudongdong1.github.io/%E4%BF%9D%E7%95%99%E4%BF%A9%E4%BD%8D%E5%B0%8F%E6%95%B0/</link>
  <pubDate>Sat, 04 Dec 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E4%BF%9D%E7%95%99%E4%BF%A9%E4%BD%8D%E5%B0%8F%E6%95%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/02/25/00/17/kitten-4018756__340.jpg" referrerpolicy="no-referrer">
      </div>1. BigDecimal public static String format1(double value) { BigDecimal bd = new BigDecimal(value); bd = bd.setScale(2, RoundingMode.HALF_UP); return bd.toString(); } 2. DecimalFormat public static String format2(double value) { DecimalFormat df = new DecimalFormat(&#34;0.00&#34;); df.setRoundingMode(RoundingMode.HALF_UP); return df.format(value); } 3. NumberFormat public static String format3(double value) { NumberFormat nf = NumberFormat.getNumberInstance(); nf.setMaximumFractionDigits(2); /* * setMinimumFraction]]></description>
</item>
<item>
  <title>Android_Test</title>
  <link>https://liudongdong1.github.io/android_test/</link>
  <pubDate>Fri, 03 Dec 2021 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_test/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/16/15/35/technology-6801334__340.jpg" referrerpolicy="no-referrer">
      </div>本地单元测试(Junit Test)， 本地单元测试是纯java代码的测试，只运行在本地电脑的JVM环境上，不依赖于Android框架的任何ap]]></description>
</item>
<item>
  <title>RandomFunction</title>
  <link>https://liudongdong1.github.io/randomfunction/</link>
  <pubDate>Fri, 03 Dec 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/randomfunction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/27/19/01/sheeps-6828766__340.jpg" referrerpolicy="no-referrer">
      </div>1. Random Random 使用的随机算法为 linear congruential pseudorandom number generator (LGC) 线性同余法伪随机数。在随机数生成时，随机算法的起源数字称为种子数（seed），在种子数的基础上进行一定的变]]></description>
</item>
<item>
  <title>Android_知识点todo</title>
  <link>https://liudongdong1.github.io/android%E7%9F%A5%E8%AF%86%E7%82%B9todo/</link>
  <pubDate>Wed, 24 Nov 2021 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android%E7%9F%A5%E8%AF%86%E7%82%B9todo/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/16/15/35/technology-6801334__340.jpg" referrerpolicy="no-referrer">
      </div>Binder死亡通知机制之linkToDeath：http://gityuan.com/2016/10/03/binder_linktode]]></description>
</item>
<item>
  <title>CommonMath</title>
  <link>https://liudongdong1.github.io/commonmath/</link>
  <pubDate>Wed, 10 Nov 2021 23:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/commonmath/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/25/19/22/animal-6655641__340.jpg" referrerpolicy="no-referrer">
      </div>The Apache Commons Math project is a library of lightweight, self-contained mathematics and statistics components addressing the most common practical problems not immediately available in the Java programming language or commons-lang. 官方案例文档 org.apache.commons.math4.stat - statistics, statistical tests org.apache.commons.math4.analysis - rootfinding, integration, interpolation, polynomials org.apache.commons.math4.random - random numbers, strings and data generation org.apache.commons.math4.special - special functions (Gamma, Beta) org.apache.commons.math4.linear - matrices, solving linear systems org.apache.commons.math4.util -]]></description>
</item>
</channel>
</rss>
