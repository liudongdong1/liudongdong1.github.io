<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>pytorch - 标签 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/tags/pytorch/</link>
    <description>pytorch - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 18 Jul 2021 15:56:09 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/tags/pytorch/" rel="self" type="application/rss+xml" /><item>
  <title>炼丹</title>
  <link>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9/</link>
  <pubDate>Sun, 18 Jul 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/wooden-spoon_8M7MVSJMUK.jpg" referrerpolicy="no-referrer">
      </div>1. 学习率 越大的batch-size使用越大的学习率。原理很简单，越大的batch-size意味着我们学习的时候，收敛方向的confidenc]]></description>
</item>
<item>
  <title>Pytorch_预训练模型</title>
  <link>https://liudongdong1.github.io/pytorch_%E9%A2%84%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/</link>
  <pubDate>Sun, 20 Jun 2021 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch_%E9%A2%84%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/keyboard-typing_UATQGKPFOH.jpg" referrerpolicy="no-referrer">
      </div>1. 模型下载 import re import os import glob import torch from torch.hub import download_url_to_file from torch.hub import urlparse import torchvision.models as models def download_model(url, dst_path): parts = urlparse(url) filename = os.path.basename(parts.path) HASH_REGEX = re.compile(r&#39;-([a-f0-9]*)\.&#39;) hash_prefix = HASH_REGEX.search(filename).group(1) if os.path.exists(os.path.join(dst_path, filename)): return filename download_url_to_file(url, os.path.join(dst_path, filename), hash_prefix, True) return filename def saveToFolder(path): #其他各种模型可以在这个目录下进]]></description>
</item>
<item>
  <title>Pytorch3D</title>
  <link>https://liudongdong1.github.io/pytorch3d/</link>
  <pubDate>Mon, 14 Jun 2021 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch3d/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/19/04/49/kid-6106557__340.jpg" referrerpolicy="no-referrer">
      </div>Chaton, Thomas, et al. &ldquo;Torch-Points3D: A Modular Multi-Task Frameworkfor Reproducible Deep Learning on 3D Point Clouds.&rdquo; arXiv preprint arXiv:2010.04642 (2020). [pdf] [code]]]></description>
</item>
<item>
  <title>PytorchGNN</title>
  <link>https://liudongdong1.github.io/pytorchgnn/</link>
  <pubDate>Mon, 14 Jun 2021 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorchgnn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/19/14/31/dandelion-6266230__340.jpg" referrerpolicy="no-referrer">
      </div>论文对GNN模型分类如下： 图卷积网络(Graph convolutional networks)和图注意力网络(graph attention networks)，因为涉及到传播步骤(pr]]></description>
</item>
<item>
  <title>Pytorch_LearningRate</title>
  <link>https://liudongdong1.github.io/pytorch_learningrate/</link>
  <pubDate>Sat, 22 May 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch_learningrate/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/EHPVKUCIR6.jpg" referrerpolicy="no-referrer">
      </div>a. 有序调整：等间隔调整(Step)，按需调整学习率(MultiStep)，指数衰减调整(Exponential)和 余弦退火CosineAnn]]></description>
</item>
<item>
  <title>AndroidPytorch</title>
  <link>https://liudongdong1.github.io/androidpytorch/</link>
  <pubDate>Fri, 21 May 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/androidpytorch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/19/05/12/maple-6808150__340.jpg" referrerpolicy="no-referrer">
      </div>1. 模型转化 import torch import torchvision from torch.utils.mobile_optimizer import optimize_for_mobile model = torchvision.models.mobilenet_v3_small(pretrained=True) #model.load_state_dict(torch.load(model_pth)) # 加载参数 model.eval() example = torch.rand(1, 3, 224, 224) traced_script_module = torch.jit.trace(model, example) # 模型转化 optimized_traced_model = optimize_for_mobile(traced_script_module) optimized_traced_model.save(&#34;model.pt&#34;) # 保存文件 optimized_traced_model._save_for_lite_interpreter(&#34;app/src/main/assets/model.pt&#34;) 2. Gradle 依赖 implementation &#39;org.pytorch:pytorch_android_lite:1.9.0&#39; implementation &#39;org.pytorch:pytorch_android_torchvision:1.9.0&#39; 3. 封装函数 public class MainActivity extends AppCompatActivity { @Override protected void]]></description>
</item>
<item>
  <title>pytorch_Tools</title>
  <link>https://liudongdong1.github.io/pytorch_tools/</link>
  <pubDate>Sat, 01 May 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch_tools/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210517232252.png" referrerpolicy="no-referrer">
      </div>1. Pytorch Lightning Pytorch Lightning是一款基于Pytorch的轻量级高级计算框架，相较于Pytorch而言最大特征是简洁易用，相当于Pytorch版本]]></description>
</item>
<item>
  <title>PytorchBasic</title>
  <link>https://liudongdong1.github.io/basic/</link>
  <pubDate>Sat, 01 May 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/basic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/18/19/56/keyboard-6105750__340.jpg" referrerpolicy="no-referrer">
      </div>autograd 包为张量上的所有操作提供了自动求导机制。它是一个在运行时定义(define-by-run）的框架，这意味着反向传播是根据代码如何运行来决定]]></description>
</item>
<item>
  <title>GraphPaper</title>
  <link>https://liudongdong1.github.io/graphpaper/</link>
  <pubDate>Tue, 06 Apr 2021 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/graphpaper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/15/03/35/chrysanthemum-6337374__340.jpg" referrerpolicy="no-referrer">
      </div>1. DDGK Al-Rfou R, Perozzi B, Zelle D. Ddgk: Learning graph representations for deep divergence graph kernels[C]//The World Wide Web Conference. 2019: 37-48. end-to-end supervised graph classification: learn a intermediate representation of an entire graph as precondition in order to solve the classification task; graph representation learning: feature engineering: graph&rsquo;s clustering coefficient, its motif distribution,its spectral decomposition , limited to composing only known graph encode algorithmic heuristics from graph isomorphism]]></description>
</item>
<item>
  <title>CharDataSimulation</title>
  <link>https://liudongdong1.github.io/chardatasimulation/</link>
  <pubDate>Sat, 23 Jan 2021 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/chardatasimulation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210501131735.png" referrerpolicy="no-referrer">
      </div>1. 图片生成 利用电脑中字体文件生成a-z 字符图片数据。 # 测试文件 from PIL import Image, ImageDraw, ImageFont, ImageFilter import random import matplotlib.pyplot as plt import numpy as np import os # 随机字母: def rndChar(): return chr(random.randint(65, 90)) # 随机颜色1: def rndColor():]]></description>
</item>
</channel>
</rss>
