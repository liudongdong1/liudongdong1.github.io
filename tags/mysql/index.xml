<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Mysql - 标签 - DAY By DAY</title><link>liudongdong1.github.io/tags/mysql/</link><description>Mysql - 标签 - DAY By DAY</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor><webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 30 Mar 2022 22:31:56 +0000</lastBuildDate><atom:link href="liudongdong1.github.io/tags/mysql/" rel="self" type="application/rss+xml"/><item><title>面经_数据库</title><link>liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Wed, 30 Mar 2022 22:31:56 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2022/01/25/12/53/tree-6966126__480.jpg" referrerpolicy="no-referrer">
&lt;/div>内存中，虽然 说存取速度快，但是会导致数据不能永久的保存 文件中，可以解决数据永久保存的问题, 速度比内存操作慢，频繁的 IO 操作，而且查询数据不方便</description></item><item><title>MongoDBRelative</title><link>liudongdong1.github.io/mongodbrelative/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/mongodbrelative/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
&lt;/div>MongoDB是面向文档的NoSQL数据库，用于大量数据存储。MongoDB是一个在2000年代中期问世的数据库。属于NoSQL数据库的类别</description></item><item><title>MySQLRelative</title><link>liudongdong1.github.io/mysqlrelative/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/mysqlrelative/</guid><description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/08/08/11/42/butterfly-4392802__340.jpg" referrerpolicy="no-referrer">
      </div>0. 执行过程 查询语句的执行流程如下：权限校验（如果命中缓存）&mdash;&gt;查询缓存&mdash;&gt;分析器&mdash;&gt;优]]></description></item><item><title>SpringJDBC</title><link>liudongdong1.github.io/springjdbc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/springjdbc/</guid><description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/06/01/09/05/facebook-793048__340.jpg" referrerpolicy="no-referrer">
      </div>dependency &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;/dependency&gt; application.yml spring: datasource: url: jdbc:mysql://127.0.0.1:3306/spring-boot-demo?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;serverTimezone=GMT%2B8 username: root password: 1234qwer driver-class-name: com.mysql.cj.jdbc.Driver type: com.zaxxer.hikari.HikariDataSource initialization-mode: always continue-on-error: true schema: - &#34;classpath:db/schema.sql&#34; data: - &#34;classpath:db/data.sql&#34; hikari: minimum-idle: 5 connection-test-query: SELECT 1 FROM DUAL maximum-pool-size: 20 auto-commit: true idle-timeout: 30000 pool-name: SpringBootDemoHikariCP max-lifetime: 60000 connection-timeout: 30000 UserService.java package com.ldd.service; import com.ldd.domain.User; import javax.sql.DataSource; import java.util.List; public interface UserService { /*Use]]></description></item><item><title>SpringMyBatis</title><link>liudongdong1.github.io/springmybatis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/springmybatis/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2020/11/27/11/55/cobweb-5781665__340.jpg" referrerpolicy="no-referrer">
&lt;/div>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。My</description></item><item><title>Tools</title><link>liudongdong1.github.io/tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/tools/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2022/02/23/18/11/drink-7031154__340.jpg" referrerpolicy="no-referrer">
&lt;/div>1. mysql .1. cmd 配置使用 MySQL Community Server 社区版本，开源免费，但不提供官方技术支持。 MySQL Enterprise Edition 企业版本，需付费，可以试用30天。 MySQL Cluster 集群版，开源免费。可将几个MyS</description></item><item><title>Transaction</title><link>liudongdong1.github.io/transaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/transaction/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2019/08/17/04/18/morning-4411421__340.jpg" referrerpolicy="no-referrer">
&lt;/div>1. 事务特性 你的程序是否支持事务首先取决于数据库 ，比如使用 MySQL 的话，如果你选择的是 innodb 引擎，那么恭喜你，是可以支持事务的。但是，如果你的 MySQL 数据库使</description></item></channel></rss>