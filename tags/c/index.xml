<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>C - 标签 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/tags/c/</link>
    <description>C - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 31 Jul 2022 16:00:04 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/tags/c/" rel="self" type="application/rss+xml" /><item>
  <title>开源项目-Margo</title>
  <link>https://liudongdong1.github.io/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-margo/</link>
  <pubDate>Sun, 31 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-margo/</guid>
  <description><![CDATA[Argobots pools with Margo RPCs #include &lt;assert.h&gt; #include &lt;stdio.h&gt; #include &lt;margo.h&gt; #include &lt;alpha-server.h&gt; static void finalize_xstream_cb(void* data); int main(int argc, char** argv) { margo_instance_id mid = margo_init(&#34;tcp&#34;, MARGO_SERVER_MODE, 0, 0); assert(mid); margo_set_log_level(mid, MARGO_LOG_INFO); hg_addr_t my_address; margo_addr_self(mid, &amp;my_address); char addr_str[128]; size_t addr_str_size = 128; margo_addr_to_string(mid, addr_str, &amp;addr_str_size, my_address); margo_addr_free(mid,my_address); margo_info(mid, &#34;Server running at address %s, with provider id 42&#34;, addr_str); ABT_pool pool; ABT_pool_create_basic( ABT_POOL_FIFO, ABT_POOL_ACCESS_SPSC, ABT_TRUE, &amp;pool); ABT_xstream xstream; ABT_xstream_create_basic( ABT_SCHED_DEFAULT,]]></description>
</item>
<item>
  <title>argobots</title>
  <link>https://liudongdong1.github.io/argobots/</link>
  <pubDate>Sat, 23 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/argobots/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>Condition Variable: a condition on which ULTs are waiting until it is signaled. Execution Stream (ES): a sequential instruction stream that contains one or more work units. Future: a mechanism for passing a value between work units, allowing a work unit to wait for a value that is set asynchronously. Handle: an opaque reference to an Argobots object. Mutex: a synchronization method to support mutual exclusion between work units. Object:]]></description>
</item>
<item>
  <title>argobots</title>
  <link>https://liudongdong1.github.io/argobots_paper/</link>
  <pubDate>Sat, 23 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/argobots_paper/</guid>
  <description><![CDATA[Paper: argobots SM1 in ES1 has one associated private pool, PM11, and SM2 in ES2 has two private pools, PM21 and PM22. PS is shared between ES1 and ES2, and thus both SM1 in ES1 and SM2 in ES2 can access the pool to push or pop work units. PE denotes an event pool. The event pool is meant for lightweight notification. It is periodically checked by a scheduler to]]></description>
</item>
<item>
  <title>Makefile</title>
  <link>https://liudongdong1.github.io/makefile/</link>
  <pubDate>Sat, 19 Mar 2022 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/makefile/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/08/15/50/common-poppy-7056018__340.jpg" referrerpolicy="no-referrer">
      </div>多个命令之间要使用分号隔开，Makefile 中的任何命令都要以 tab 键开始。多个命令行之间可以有空行和注释行，在执行规则时空行会被自动忽略。 当在]]></description>
</item>
<item>
  <title>GCC</title>
  <link>https://liudongdong1.github.io/gcc/</link>
  <pubDate>Tue, 19 Oct 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gcc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/23/12/26/tulips-7030616__340.jpg" referrerpolicy="no-referrer">
      </div>操作系统大致分为 2 大阵营，分别是 Windows 阵营和类 Unix 阵营（包括 Unix、Linux、Mac OS、安卓等）。通常情况下，Windows 系统下用户更习惯]]></description>
</item>
<item>
  <title>CPrimerPlus</title>
  <link>https://liudongdong1.github.io/cprimerplus/</link>
  <pubDate>Thu, 19 Aug 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cprimerplus/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>1. 编译过程 2. C语言关键字 auto extern short while break float signed _Alignas case for sizeof _Alignof char goto static _Atomic const if struct _Bool continue inline switch _Complex default int typedef _Generic do long union _Imaginary double register unsigned _Noreturn else restrict void _Static_assert enum return volatile _Thread_local 运算符 描述 实例 &amp; 按位与操作，]]></description>
</item>
<item>
  <title>GDB</title>
  <link>https://liudongdong1.github.io/gdb/</link>
  <pubDate>Thu, 19 Aug 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gdb/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/14/12/10/plane-7013022__340.jpg" referrerpolicy="no-referrer">
      </div>GNU symbolic debugger，简称「GDB 调试器」，是 Linux 平台下最常用的一款程序调试器。GDB 编译器通常以 gdb 命令的形式在终端（Shell）中使用，它有]]></description>
</item>
<item>
  <title>C编程规范</title>
  <link>https://liudongdong1.github.io/c%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/c%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/07/25/05/39/daylily-6490922__340.jpg" referrerpolicy="no-referrer">
      </div>开发人员对正确性、健壮性、可靠性、效率、易用性、可读性（可理解性）、可扩展性、 可复用性、兼容性、可移植性等质量属性了如指掌. 1. 文件结构 .1. 版本]]></description>
</item>
<item>
  <title>C陷阱和缺陷</title>
  <link>https://liudongdong1.github.io/c%E9%99%B7%E9%98%B1%E5%92%8C%E7%BC%BA%E9%99%B7/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/c%E9%99%B7%E9%98%B1%E5%92%8C%E7%BC%BA%E9%99%B7/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/13/14/53/bird-6935465__340.jpg" referrerpolicy="no-referrer">
      </div>1. 词法陷阱 = &amp;== ：前者进行赋值操作，后者进行 相等判断 &amp;和| ： 与和取反操作 &amp;&amp; 和 || ： and 和 或 条件 a=-1 : 歧义性 a=a-1; a= -1; y=x/(*p); 注意 单引号 和 双引号区别 2. 语]]></description>
</item>
</channel>
</rss>
