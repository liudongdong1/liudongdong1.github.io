<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Eye-Tracking - 标签 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/tags/eye-tracking/</link>
    <description>Eye-Tracking - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 29 Apr 2022 15:57:50 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/tags/eye-tracking/" rel="self" type="application/rss+xml" /><item>
  <title>Eye-Tracking Introduce</title>
  <link>https://liudongdong1.github.io/eye-tracking-introduce/</link>
  <pubDate>Fri, 29 Apr 2022 15:57:50 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/eye-tracking-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/pexels-photo-840810.jpeg" referrerpolicy="no-referrer">
      </div>Paper: Weakly-Supervised Physically Unconstrained Gaze Estimation 本次工作所探讨的问题是从人类互动的视频中进行弱监督的视线估计，基本原理是利用人们在进行 &ldquo;相互注视&rdquo;（LA]]></description>
</item>
<item>
  <title>BlinkDetection</title>
  <link>https://liudongdong1.github.io/blinkdetection/</link>
  <pubDate>Fri, 29 May 2020 15:57:50 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/blinkdetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210501133220.png" referrerpolicy="no-referrer">
      </div>1. 眨眼检测 使用dlib库 眨眼检测 # import the necessary packages from scipy.spatial import distance as dist from imutils.video import FileVideoStream from imutils.video import VideoStream from imutils import face_utils import argparse import imutils import time import dlib import cv2 import os def eye_aspect_ratio(eye): # compute the euclidean distances between the two sets of # vertical eye landmarks (x, y)-coordinates A]]></description>
</item>
</channel>
</rss>
