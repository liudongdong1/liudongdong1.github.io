<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Database - 标签 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/tags/database/</link>
    <description>Database - 标签 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 03 Mar 2022 22:31:56 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/tags/database/" rel="self" type="application/rss+xml" /><item>
  <title>面经_数据库</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
  <pubDate>Thu, 03 Mar 2022 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/25/12/53/tree-6966126__480.jpg" referrerpolicy="no-referrer">
      </div>内存中，虽然 说存取速度快，但是会导致数据不能永久的保存 文件中，可以解决数据永久保存的问题, 速度比内存操作慢，频繁的 IO 操作，而且查询数据不方便]]></description>
</item>
<item>
  <title>Tornado</title>
  <link>https://liudongdong1.github.io/tornado/</link>
  <pubDate>Sun, 05 Dec 2021 23:12:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/tornado/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/8RPTXJJT5D.jpg" referrerpolicy="no-referrer">
      </div>Tornado 是一个Python web框架和异步网络库 起初由 FriendFeed 开发. 通过使用非阻塞网络I/O, Tornado 可以支持上万级的连接，处理 长连接, WebSockets, 和其他 需要与每个用户]]></description>
</item>
<item>
  <title>Solr</title>
  <link>https://liudongdong1.github.io/solr/</link>
  <pubDate>Sat, 04 Dec 2021 23:12:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/solr/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/28/04/12/snow-6898585__340.jpg" referrerpolicy="no-referrer">
      </div>Solr 是Apache下的一个顶级开源项目，采用Java开发，它是基于Lucene的全文搜索服务。Solr提供了比Lucene更为丰富的查询语言，]]></description>
</item>
<item>
  <title>sqlite_python</title>
  <link>https://liudongdong1.github.io/sqlite_python/</link>
  <pubDate>Fri, 19 Nov 2021 12:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sqlite_python/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/19/10/42/old-6880626__340.jpg" referrerpolicy="no-referrer">
      </div>SQLite是一个进程内的库，实现了自给自足的、无服务器的、零配置的、事务性的SQL 数据库引擎。 它是一个零配置的数据库。 1. sqlite 封装函数 #!/usr/bin/env python3 # -*-]]></description>
</item>
<item>
  <title>时间戳</title>
  <link>https://liudongdong1.github.io/%E6%97%B6%E9%97%B4%E6%88%B3/</link>
  <pubDate>Sun, 29 Aug 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%97%B6%E9%97%B4%E6%88%B3/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QW9GTHWZIS.jpg" referrerpolicy="no-referrer">
      </div>如果需要对时间字段进行操作(如通过时间范围查找或者排序等)，推荐使用bigint，如果时间字段不需要进行任何操作，推荐使用timestamp]]></description>
</item>
<item>
  <title>JDBCIntroduce</title>
  <link>https://liudongdong1.github.io/jdbcintroduce/</link>
  <pubDate>Thu, 29 Jul 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdbcintroduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QW9GTHWZIS.jpg" referrerpolicy="no-referrer">
      </div>JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问]]></description>
</item>
<item>
  <title>RedisRelative</title>
  <link>https://liudongdong1.github.io/redisrelative/</link>
  <pubDate>Thu, 08 Jul 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/redisrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/macro-flower_FKID7EXJPL.jpg" referrerpolicy="no-referrer">
      </div>Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表]]></description>
</item>
<item>
  <title>Beetlsql</title>
  <link>https://liudongdong1.github.io/beetlsql/</link>
  <pubDate>Tue, 29 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/beetlsql/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/03/26/10/42/letters-691842__340.jpg" referrerpolicy="no-referrer">
      </div>BeetlSQL 不仅仅是简单的类似MyBatis或者是Hibernate，或者是俩着的综合，BeetlSQL目的是对标甚至超越Spring Data，是实现]]></description>
</item>
<item>
  <title>SpringJDBC</title>
  <link>https://liudongdong1.github.io/springjdbc/</link>
  <pubDate>Sat, 26 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springjdbc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/06/01/09/05/facebook-793048__340.jpg" referrerpolicy="no-referrer">
      </div>dependency &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;/dependency&gt; application.yml spring: datasource: url: jdbc:mysql://127.0.0.1:3306/spring-boot-demo?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;serverTimezone=GMT%2B8 username: root password: 1234qwer driver-class-name: com.mysql.cj.jdbc.Driver type: com.zaxxer.hikari.HikariDataSource initialization-mode: always continue-on-error: true schema: - &#34;classpath:db/schema.sql&#34; data: - &#34;classpath:db/data.sql&#34; hikari: minimum-idle: 5 connection-test-query: SELECT 1 FROM DUAL maximum-pool-size: 20 auto-commit: true idle-timeout: 30000 pool-name: SpringBootDemoHikariCP max-lifetime: 60000 connection-timeout: 30000 UserService.java package com.ldd.service; import com.ldd.domain.User; import javax.sql.DataSource; import java.util.List; public interface UserService { /*Use]]></description>
</item>
<item>
  <title>SpringMyBatis</title>
  <link>https://liudongdong1.github.io/springmybatis/</link>
  <pubDate>Sat, 26 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springmybatis/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/11/27/11/55/cobweb-5781665__340.jpg" referrerpolicy="no-referrer">
      </div>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。My]]></description>
</item>
</channel>
</rss>
