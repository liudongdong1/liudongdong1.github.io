<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Demo - 分类 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/categories/demo/</link>
    <description>Demo - 分类 - DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 20 Oct 2022 15:56:09 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/categories/demo/" rel="self" type="application/rss+xml" /><item>
  <title>ActivateFunction</title>
  <link>https://liudongdong1.github.io/activatefunction/</link>
  <pubDate>Thu, 20 Oct 2022 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/activatefunction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/5NLKT00MVB.jpg" referrerpolicy="no-referrer">
      </div>神经网络中的每个神经元节点接受上一层神经元的输出值作为本神经元的输入值，并将输入值传递给下一层，输入层神经元节点会将输入属性值直接传递给下一]]></description>
</item>
<item>
  <title>ModelEvaluation</title>
  <link>https://liudongdong1.github.io/modelevaluation/</link>
  <pubDate>Fri, 20 May 2022 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/modelevaluation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/ZFIQC5CZRP.jpg" referrerpolicy="no-referrer">
      </div>0. Sklearn Metric .1. Classification metrics See the Classification metrics section of the user guide for further details. metrics.accuracy_score(y_true, y_pred, *[, …]) Accuracy classification score. metrics.auc(x, y) Compute Area Under the Curve (AUC) using the trapezoidal rule. metrics.average_precision_score(y_true, …) Compute average precision (AP) from prediction scores. metrics.balanced_accuracy_score(y_true, …) Compute the balanced accuracy. metrics.brier_score_loss(y_true, y_prob, *) Compute the Brier score loss. metrics.classification_report(y_true, y_pred, *) Build a text]]></description>
</item>
<item>
  <title>ModeType</title>
  <link>https://liudongdong1.github.io/modeltype/</link>
  <pubDate>Fri, 20 May 2022 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/modeltype/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QX9O1AZUPM.jpg" referrerpolicy="no-referrer">
      </div>1. 回归问题 回归问题通常是用来预测一个值，如预测房价、未来的天气情况等等，例如一个产品的实际价格为500元，通过回归分析预测值为499元，我们]]></description>
</item>
<item>
  <title>tensorboard</title>
  <link>https://liudongdong1.github.io/tensorboard/</link>
  <pubDate>Tue, 26 Apr 2022 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/tensorboard/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210512141325.png" referrerpolicy="no-referrer">
      </div>1. 仪表板 Scalars 显示损失和指标在每个时期如何变化。 您还可以使用它来跟踪训练速度，学习率和其他标量值。 Graphs 可帮助您可视化模型。 在这种情况下，将显示层的]]></description>
</item>
<item>
  <title>TFLearn</title>
  <link>https://liudongdong1.github.io/tflearn/</link>
  <pubDate>Tue, 26 Apr 2022 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/tflearn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210512141236.png" referrerpolicy="no-referrer">
      </div>TFlearn is a modular and transparent deep learning library built on top of Tensorflow. It was designed to provide a higher-level API to TensorFlow in order to facilitate and speed-up experimentations, while remaining fully transparent and compatible with it. 1. layers File Layers core input_data, fully_connected, dropout, custom_layer, reshape, flatten, activation, single_unit, highway, one_hot_encoding, time_distributed conv conv_2d, conv_2d_transpose, max_pool_2d, avg_pool_2d, upsample_2d, conv_1d, max_pool_1d, avg_pool_1d, residual_block, residual_bottleneck, conv_3d, max_pool_3d, avg_pool_3d, highway_conv_1d,]]></description>
</item>
<item>
  <title>One-hot</title>
  <link>https://liudongdong1.github.io/one-hot/</link>
  <pubDate>Wed, 20 Oct 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/one-hot/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://lddpicture.oss-cn-beijing.aliyuncs.com/picture/20210524155210.png" referrerpolicy="no-referrer">
      </div>1. 离散特征的编码 离散特征的取值之间没有大小的意义，比如color：[red,blue],那么就使用one-hot编码 离散特征的取值有大小的意]]></description>
</item>
<item>
  <title>ExamplesDL4J</title>
  <link>https://liudongdong1.github.io/examplesdl4j/</link>
  <pubDate>Tue, 20 Jul 2021 21:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/examplesdl4j/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/OQ7ZZXSTN7.jpg" referrerpolicy="no-referrer">
      </div>dl4j-examples This project contains a set of examples that demonstrate use of the high level DL4J API to build a variety of neural networks. Some of these examples are end to end, in the sense they start with raw data, process it and then build and train neural networks on it. tensorflow-keras-import-examples This project contains a set of examples that demonstrate how to import Keras h5 models and TensorFlow frozen pb models into the DL4J ecosystem.]]></description>
</item>
<item>
  <title>DL4J</title>
  <link>https://liudongdong1.github.io/dl4jusage/</link>
  <pubDate>Tue, 20 Jul 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dl4jusage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/MEJUJW0ZG0.jpg" referrerpolicy="no-referrer">
      </div>Eclipse Deeplearning4j is the first commercial-grade, open-source, distributed deep-learning library written for Java and Scala. Integrated with Hadoop and Apache Spark, DL4J brings AI to business environments for use on distributed GPUs and CPUs.
1. DataPrepare Deeplearning4j works with a lot of different data types, such as images, CSV, plain text, images, audio, video and, pretty much any other data type you can think of.
.1. RecordReader .2. DataSetIterator ScoreIterationListener - (Source, Javadoc) - Logs the loss function score every N training iterations PerformanceListener - (Source, Javadoc) - Logs performance (examples per sec, minibatches per sec, ETL time), and optionally score, every N training iterations.]]></description>
</item>
<item>
  <title>lightModel</title>
  <link>https://liudongdong1.github.io/lightmodel/</link>
  <pubDate>Tue, 20 Jul 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/lightmodel/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/HW0F1MGKHV.jpg" referrerpolicy="no-referrer">
      </div>轻量型模型汇总https://mp.weixin.qq.com/s/Ako1-LftttHyL1YnxVB8tA]]></description>
</item>
<item>
  <title>炼丹</title>
  <link>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9/</link>
  <pubDate>Sun, 18 Jul 2021 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/wooden-spoon_8M7MVSJMUK.jpg" referrerpolicy="no-referrer">
      </div>1. 学习率 越大的batch-size使用越大的学习率。原理很简单，越大的batch-size意味着我们学习的时候，收敛方向的confidenc]]></description>
</item>
</channel>
</rss>
