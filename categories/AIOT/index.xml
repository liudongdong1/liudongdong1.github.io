<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>AIOT - 分类 - DAY By DAY</title><link>liudongdong1.github.io/categories/aiot/</link><description>AIOT - 分类 - DAY By DAY</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor><webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 23 Nov 2022 23:02:27 +0000</lastBuildDate><atom:link href="liudongdong1.github.io/categories/aiot/" rel="self" type="application/rss+xml"/><item><title>picture_Glide</title><link>liudongdong1.github.io/picture_glide/</link><pubDate>Wed, 23 Nov 2022 23:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/picture_glide/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
&lt;/div>glide是google官方推荐的图片加载框架，github地址为bumptech/glide 。glide的强大在于它的生命周期管理(gli</description></item><item><title>EventBus</title><link>liudongdong1.github.io/eventbus/</link><pubDate>Sat, 19 Nov 2022 23:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/eventbus/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
&lt;/div>Event： 事件，可以是任意类型的对象 Subscriber： 事件订阅者，在 EventBus 3.0 之前我们必须定义以onEvent开头的那几个方法，分别是 onEvent 、o</description></item><item><title>network-retrofit</title><link>liudongdong1.github.io/network-retrofit/</link><pubDate>Sat, 19 Nov 2022 23:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/network-retrofit/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
&lt;/div>Retrofit是Square公司开发的一款针对Android和java的网络请求框架，遵循Restful设计风格，底层基于OkHttp。 支</description></item><item><title>observer/observable</title><link>liudongdong1.github.io/jdk-observer-observable/</link><pubDate>Sat, 19 Nov 2022 23:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/jdk-observer-observable/</guid><description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>1. JDK-Observable 可观察对象类 public class Observable { private boolean changed = false; private Vector&lt;Observer&gt; obs; /** Construct an Observable with zero Observers. */ public Observable() { obs = new Vector&lt;&gt;(); } /** * Adds an observer to the set of observers for this object, provided * that it is not the same as some observer already in the set. * The order in which notifications]]></description></item><item><title>OkHttp</title><link>liudongdong1.github.io/network-okhttp/</link><pubDate>Sat, 19 Nov 2022 23:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/network-okhttp/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
&lt;/div>OkHttp是一个优秀的网络请求框架,可能一说到网络请求框架,可能很多人都会想到volley,volley是一个Google提供的网络请求框</description></item><item><title>Android_NDK开发教程</title><link>liudongdong1.github.io/android_ndk%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</link><pubDate>Fri, 21 Oct 2022 22:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/android_ndk%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</guid><description>0. NDK 环境安装 https://blog.csdn.net/hello_1995/article/details/108858909 Tools-&amp;gt;SDK Manager-&amp;gt;Android SDK-&amp;gt;SDK Tools，勾选 NDK 和 CMake 选中 Show Package Details 复选框，选中 NDK (Side by side) 复选框及其下方与您要安装的 NDK 版本对应的复选框。Android Studio 会将所</description></item><item><title>Android-组件开发</title><link>liudongdong1.github.io/android-%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91/</link><pubDate>Fri, 21 Oct 2022 22:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/android-%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.stocksnap.io/img-thumbs/280h/2UNU086C0B.jpg" referrerpolicy="no-referrer">
&lt;/div>组件调试，生命周期 ARouter 使用： https://github.com/xiangjiana/Android-MS/blob/master/android/router.md https://www.jianshu.com/p/394cff2c3504 https://developer.android.com/guide/components/aidl?hl=zh-cn 官网文档AIDL 基本使用 序列化 googleProtobuf 使用 Resource https://www.jianshu.com/p/59368ce8b670 android 组件化开发系列教程 要有组件化架构设计的整体思想（各个组件之间的依赖</description></item><item><title>Android_activity_setResult</title><link>liudongdong1.github.io/android_activity_setresult/</link><pubDate>Tue, 30 Nov 2021 22:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/android_activity_setresult/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.pixabay.com/photo/2021/08/23/08/25/leaves-6567141__340.jpg" referrerpolicy="no-referrer">
&lt;/div>在一个主界面(主Activity)通过意图跳转至多个不同子Activity上去，当子模块的代码执行完毕后再次返回主页面，将子activity</description></item><item><title>AndroidStudio_工具</title><link>liudongdong1.github.io/androidstudio_%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 15 Nov 2021 23:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/androidstudio_%E5%B7%A5%E5%85%B7/</guid><description>1. SDK 工具 apkanalyzer：用于在构建过程完成后深入分析我们的 APK 组成。 avdmanager：可让我们从命令行创建和管理 Android 虚拟设备 (AVD</description></item><item><title>Android_Sensor</title><link>liudongdong1.github.io/android_sensor/</link><pubDate>Fri, 12 Nov 2021 23:02:27 +0000</pubDate><author>liudongdong1</author><guid>liudongdong1.github.io/android_sensor/</guid><description>&lt;div class="featured-image">
&lt;img src="https://cdn.stocksnap.io/img-thumbs/280h/PCRMIXBGOE.jpg" referrerpolicy="no-referrer">
&lt;/div>传感器的定义：一种物理设备或者生物器官，能够探测、感受外界的信号，物理条件(如光，热， 适度)或化学组成（如烟雾），并将探知的信息传递给其他的</description></item></channel></rss>