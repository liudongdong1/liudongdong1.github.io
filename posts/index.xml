<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>所有文章 - DAY By DAY</title>
    <link>https://liudongdong1.github.io/posts/</link>
    <description>所有文章 | DAY By DAY</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3463264078@qq.cn (LiuDongdong)</managingEditor>
      <webMaster>3463264078@qq.cn (LiuDongdong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 24 Dec 2022 23:31:56 &#43;0000</lastBuildDate><atom:link href="https://liudongdong1.github.io/posts/" rel="self" type="application/rss+xml" /><item>
  <title>LaTex 的图片插入</title>
  <link>https://liudongdong1.github.io/07latex%E7%9A%84%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/</link>
  <pubDate>Sat, 19 Jun 2021 19:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/07latex%E7%9A%84%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2014/08/01/15/49/typewriter-407695__340.jpg" referrerpolicy="no-referrer">
      </div>LaTeX插入图片时，常用的图片格式有：png, pdf, jpg, eps。以上四种图片格式各有优劣，其中最为显著的差异是清晰度和图片文件大小。在清晰度方面]]></description>
</item>
<item>
  <title>Hexo Blog Introduce</title>
  <link>https://liudongdong1.github.io/hexo-blog-introduce/</link>
  <pubDate>Sun, 26 Apr 2020 10:55:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/hexo-blog-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20200426122159.png" referrerpolicy="no-referrer">
      </div>Welcome to Hexo! This is my very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting. Hexo Introduce Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other markup languages) and Hexo generates static files with a beautiful theme in seconds. Hexo+github+gitee blog deployment tutorial download Git&amp;&amp;Node.js Github Register &amp;&amp; GithubPage]]></description>
</item>
<item>
  <title>Classify_face</title>
  <link>https://liudongdong1.github.io/classify_face/</link>
  <pubDate>Fri, 14 May 2021 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/classify_face/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210522212703.png" referrerpolicy="no-referrer">
      </div>from time import time import logging import matplotlib.pyplot as plt from sklearn.model_selection import train_test_split from sklearn.model_selection import GridSearchCV from sklearn.datasets import fetch_lfw_people from sklearn.metrics import classification_report from sklearn.metrics import confusion_matrix from sklearn.decomposition import PCA from sklearn.svm import SVC print(__doc__) # Display progress logs on stdout logging.basicConfig(level=logging.INFO, format=&#39;%(asctime)s %(message)s&#39;) # ############################################################################# # Download the data, if not already on disk and load it as numpy arrays lfw_people = fetch_lfw_people(min_faces_per_person=70, resize=0.4) # introspect the images arrays to find the shapes (for plotting) n_samples, h, w = lfw_people.]]></description>
</item>
<item>
  <title>Maven</title>
  <link>https://liudongdong1.github.io/maven/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/maven/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/19/14/31/dandelion-6266230__340.jpg" referrerpolicy="no-referrer">
      </div>Maven仓库用来存放Maven管理的所有Jar包。分为：本地仓库 和 中央仓库。 本地仓库：Maven本地的Jar包仓库。 中央仓库： Maven官]]></description>
</item>
<item>
  <title>IDEAPlugin</title>
  <link>https://liudongdong1.github.io/ideaplugin/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ideaplugin/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/07/03/10/28/waterfall-5365926__340.jpg" referrerpolicy="no-referrer">
      </div>1.Lombok 在 build.gradle 里增加 Lombok 依赖，并在项目设置里勾选「Enable Annotation Processing. 2. JRebel and XRebel for IntelliJ JRebel 可以实时重载代码变更，不让构建、重启、重部署等繁琐的工作中断心流，让开]]></description>
</item>
<item>
  <title>Hexo博客主题之hexo-theme-matery的介绍</title>
  <link>https://liudongdong1.github.io/hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8Bhexo-theme-matery%E7%9A%84%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Fri, 28 Sep 2018 13:34:00 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8Bhexo-theme-matery%E7%9A%84%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>English Document | 演示示例 | QQ交流群:926552981 这是一个采用Material Design和响应式设计的 Hexo 博客主题。 特性 简单漂亮，文章内容美观易]]></description>
</item>
<item>
  <title>Vue Style Typora Theme</title>
  <link>https://liudongdong1.github.io/vue-%E6%96%87%E6%A1%A3%E9%A3%8E%E6%A0%BC%E7%9A%84-typora-%E4%B8%BB%E9%A2%98/</link>
  <pubDate>Mon, 19 Nov 2018 00:30:00 &#43;0000</pubDate>
  <author>blinkfox</author>
  <guid>https://liudongdong1.github.io/vue-%E6%96%87%E6%A1%A3%E9%A3%8E%E6%A0%BC%E7%9A%84-typora-%E4%B8%BB%E9%A2%98/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="http://static.blinkfox.com/20181119.jpg" referrerpolicy="no-referrer">
      </div>typora-vue-theme 是 Typora Markdown 文档编辑器中一款类似Vue文档风格的主题。 简介 Typora是一款支持实时预览的 Markdown 编辑器和阅读器，支持Windows、macOS、Li]]></description>
</item>
<item>
  <title>Desktop DIY</title>
  <link>https://liudongdong1.github.io/desktopdiy/</link>
  <pubDate>Sun, 26 Apr 2020 12:48:11 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/desktopdiy/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201129134003312.png" referrerpolicy="no-referrer">
      </div>​ When I entered JLU university, I know nothing about a computer. I bought an ordinary notebook, changed the memory module and solid-state drive, barely supported it for nearly four years. During universaty, i meet very good teachers, that not only did i learn a lot, also saved some money for a host computer during the double eleven. It&rsquo;s really delicious !!! Divice Choose Device Picture Run Resault Reference T]]></description>
</item>
<item>
  <title>Typoro Command</title>
  <link>https://liudongdong1.github.io/typoro-command/</link>
  <pubDate>Sun, 26 Apr 2020 15:24:26 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/typoro-command/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/pexels-photo-265152.jpg" referrerpolicy="no-referrer">
      </div>​ Typora 是一个 Markdown 文本编辑器，它支持且仅支持 Markdown 语法的文本编辑。在 Typora 官网 上他们将 Typora 描述为 「A truly minimal markdown editor. 」 1. 安装 #1 安装依赖包 sudo apt-get install libapt-pkg-dev #2 安装、更新 sudo apt-get install apt-transport-https]]></description>
</item>
<item>
  <title>Anaconda Operaction</title>
  <link>https://liudongdong1.github.io/anaconda-operaction/</link>
  <pubDate>Sun, 26 Apr 2020 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/anaconda-operaction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/TIM%e6%88%aa%e5%9b%be20200426215319.png" referrerpolicy="no-referrer">
      </div>专为数据科学和机器学习工作流程而设计，是一个开源包管理器，环境管理器，以及Python和R编程语言的分发。它通常用于大规模数据处理，科学计算]]></description>
</item>
<item>
  <title>Alexnet</title>
  <link>https://liudongdong1.github.io/alexnet/</link>
  <pubDate>Sun, 26 Apr 2020 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/alexnet/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210512225816.png" referrerpolicy="no-referrer">
      </div>lexNet是2012年ILSVRC 2012（ImageNet Large Scale Visual Recognition Challenge）竞赛的冠军网络，分类准确率由传统方法的 70%+提升]]></description>
</item>
<item>
  <title>Docker Operaction</title>
  <link>https://liudongdong1.github.io/docker-operaction/</link>
  <pubDate>Sun, 26 Apr 2020 21:56:46 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/docker-operaction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20200426220727.png" referrerpolicy="no-referrer">
      </div>1. Docker Introduce .1. Docker Platfrom: Docker provides the ability to package and run an application in a loosely isolated environment called a container. Develop your application and its supporting components using containers. .2. Docker Engine Docker Engine is a client-server application with these major components: A server which is a type of long-running program called a daemon process (the dockerd command). cerates and manages docker objects, eg: images, containers,]]></description>
</item>
<item>
  <title>Window CommandLine</title>
  <link>https://liudongdong1.github.io/window-commandline/</link>
  <pubDate>Mon, 27 Apr 2020 22:08:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/window-commandline/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/blackthorn-4971511__340.png" referrerpolicy="no-referrer">
      </div>1. PowerShell # 查看powershell 版本 get-host $host.version # 新建目录 #当前目录新建文件 new-item FILENAME.xxx -type file #当前目录新建文件夹 new-item DIRECTORYNAME -type directory #在指定目录新建 new-item TARGETDIR FILENAME.xxx -type file # 重命名 #把]]></description>
</item>
<item>
  <title>Window CommandLine</title>
  <link>https://liudongdong1.github.io/windowsinstallation/</link>
  <pubDate>Wed, 27 May 2020 22:08:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/windowsinstallation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133835.png" referrerpolicy="no-referrer">
      </div>0. windows10 系统镜像&amp;Office&amp;Kms激活 目录F:\softdownload\windows\系统镜像 注意，得将windows杀]]></description>
</item>
<item>
  <title>Docker-Command</title>
  <link>https://liudongdong1.github.io/docker-command/</link>
  <pubDate>Fri, 26 Jun 2020 21:56:46 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/docker-command/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20200426220727.png" referrerpolicy="no-referrer">
      </div>1. 帮助命令 docker version # 显示docker的版本信息 docker info # 显示docker的系统信息，包括镜像和容器的数量 docker --help # 帮助命令 2. 镜像相关 #检索image, 会]]></description>
</item>
<item>
  <title>Docker-vscode</title>
  <link>https://liudongdong1.github.io/docker-vscode/</link>
  <pubDate>Sat, 27 Jun 2020 21:56:46 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/docker-vscode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/27/20/53/birds-7161315__340.jpg" referrerpolicy="no-referrer">
      </div>安装dockers，安装nvidia-docker, 从dockerhub上拉取镜像后, 注意 docker run 是在镜像上构建一个新的容器(新的容器里面没有之]]></description>
</item>
<item>
  <title>Docker-Command</title>
  <link>https://liudongdong1.github.io/docker-compose/</link>
  <pubDate>Sun, 28 Jun 2020 21:56:46 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/docker-compose/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/10/19/09/17/travel-3758193__340.jpg" referrerpolicy="no-referrer">
      </div>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文]]></description>
</item>
<item>
  <title>Git basic Operation</title>
  <link>https://liudongdong1.github.io/git-basic-operation/</link>
  <pubDate>Sat, 18 Jul 2020 07:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/git-basic-operation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/37.jpeg" referrerpolicy="no-referrer">
      </div>本地库就是由 对象 和 引用 构成的，或者叫 Repositories;下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。 Workspace：工作]]></description>
</item>
<item>
  <title>PictureCompress</title>
  <link>https://liudongdong1.github.io/picturecompress/</link>
  <pubDate>Fri, 14 Aug 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/picturecompress/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/13.jpeg" referrerpolicy="no-referrer">
      </div>1. 鲁班图片压缩算法 from PIL import Image import os from shutil import copyfile from math import ceil class Luban(object): def __init__(self, ignoreBy=102400, quality=60): self.ignoreBy = ignoreBy self.quality = quality def setPath(self, path): self.path = path def setTargetDir(self, foldername=&#34;target&#34;): self.dir, self.filename = os.path.split(self.path) self.targetDir = os.path.join(self.dir, foldername) if not os.path.exists(self.targetDir): os.makedirs(self.targetDir) self.targetPath = os.path.join(self.targetDir, &#34;c_&#34;+self.filename) def load(self): self.img = Image.open(self.path) if self.img.mode == &#34;RGB&#34;: self.type]]></description>
</item>
<item>
  <title>Bazel</title>
  <link>https://liudongdong1.github.io/bazel/</link>
  <pubDate>Fri, 28 Aug 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bazel/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/15.jpeg" referrerpolicy="no-referrer">
      </div>Bazel builds software from source code organized in a directory called a workspace. Source files in the workspace are organized in a nested hierarchy of packages, where each package is a directory that contains a set of related source files and one BUILD file. The BUILD file specifies what software outputs can be built from the source. 1.Introduce 1.1. Features High-level build language fast and reliable multi-platform large scales and]]></description>
</item>
<item>
  <title>HexoGallery</title>
  <link>https://liudongdong1.github.io/hexogallery/</link>
  <pubDate>Mon, 28 Sep 2020 13:34:00 &#43;0000</pubDate>
  <author>blinkfox</author>
  <guid>https://liudongdong1.github.io/hexogallery/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://images.unsplash.com/photo-1627996319060-cc7c5a7f7ac9?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwxM3x8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=60" referrerpolicy="no-referrer">
      </div>From: https://juejin.cn/post/6891086750484004877#heading-8 新建相册页面 在站点的source文件夹下面新建一个gallery相册页面。 hexo new page gallery 打开新建的gallery文件夹，里面会有一个index]]></description>
</item>
<item>
  <title>ChromePlugin</title>
  <link>https://liudongdong1.github.io/chromeplugin/</link>
  <pubDate>Wed, 28 Oct 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/chromeplugin/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/08/14/09/poppy-6320719__340.jpg" referrerpolicy="no-referrer">
      </div>1. ColorZilla 从浏览器的任何位置获取颜色读数，快速调整该颜色并将其粘贴到另一个程序中。 Colorzilla也支持分析当前网页中用到的所有颜色，使用We]]></description>
</item>
<item>
  <title>vscodeRelative</title>
  <link>https://liudongdong1.github.io/vscoderelative/</link>
  <pubDate>Thu, 21 Jan 2021 23:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/vscoderelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20210201071901109.png" referrerpolicy="no-referrer">
      </div>1. TODO Tree 某块代码需要修改，或者某块代码需要以后进一步完善，如果能够给它做一个标记，那么后续定位到对应位置是一件非常轻松高效的事情。 2. vscode-icons 不仅能够]]></description>
</item>
<item>
  <title>Nvidia-docker</title>
  <link>https://liudongdong1.github.io/nvidia-docker/</link>
  <pubDate>Thu, 21 Jan 2021 23:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/nvidia-docker/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/02/05/50/pet-7106365__340.jpg" referrerpolicy="no-referrer">
      </div>Make sure you have installed the NVIDIA driver and Docker engine for your Linux distribution Note that you do not need to install the CUDA Toolkit on the host system, but the NVIDIA driver needs to be installed NVIDIA 于 2016 年开始设计 NVIDIA-Docker 已便于容器使用 NVIDIA GPUs。 第一代 nvidia-docker1.0 实现了对 docker client]]></description>
</item>
<item>
  <title>WordGenTools</title>
  <link>https://liudongdong1.github.io/wordgentools/</link>
  <pubDate>Mon, 14 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wordgentools/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/J2EZQDXGOT.jpg" referrerpolicy="no-referrer">
      </div>0. GoogleTransBasedFastArticle 查了几个网页的版本，但是使用次数有限，基于google翻译，在Google Trans API 和 FastArtcle , 和文章伪原创工具，基于google翻译软件，在多个语]]></description>
</item>
<item>
  <title>illustratorUsage</title>
  <link>https://liudongdong1.github.io/illustratorusage/</link>
  <pubDate>Sat, 19 Jun 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/illustratorusage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/01/21/14/14/macbook-606763__340.jpg" referrerpolicy="no-referrer">
      </div>1. 常用操作 matlab绘制图片，保存eps格式后，使用AI工具进行相应的文字图例编辑； 使用python直接存储的eps文件部分可编辑； 使用m]]></description>
</item>
<item>
  <title>Gradle</title>
  <link>https://liudongdong1.github.io/gradle/</link>
  <pubDate>Sat, 19 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gradle/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/15/13/20/banded-demoiselle-6338620__340.jpg" referrerpolicy="no-referrer">
      </div>常见的 Java 构建工具包括 Ant、Gant 和 Maven 等，Gradle 结合了以上工具的优点，基于约定大于配置，通用灵活，是 Android 的官方构建工具。 1. 搭建环境 确保]]></description>
</item>
<item>
  <title>SSH_usage</title>
  <link>https://liudongdong1.github.io/ssh_usage/</link>
  <pubDate>Wed, 30 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ssh_usage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/779E8EFZ2Y.jpg" referrerpolicy="no-referrer">
      </div>SSH（Secure Shell 的缩写）是一种网络协议，用于加密两台计算机之间的通信，并且支持各种身份验证机制。还能对操作者进行认证（authenti]]></description>
</item>
<item>
  <title>GithubSearch</title>
  <link>https://liudongdong1.github.io/githubsearch/</link>
  <pubDate>Wed, 30 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/githubsearch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/flowers-garden_4QRUJ27WQS.jpg" referrerpolicy="no-referrer">
      </div>https://docs.github.com/cn/github/searching-for-information-on-github/searching-on-github/searching-for-repositories https://docs.github.com/cn/github/searching-for-information-on-github/getting-started-with-searching-on-github/understanding-the-search-syntax 0. 查询大于或小于另一个值的值 查询 示例 &gt;*n* cats stars:&gt;1000 匹配含有 &ldquo;cats&rdquo; 字样、星标超过 1000 个的仓库。 &gt;=*n* cats topics:&gt;=5 匹配含有 &ldquo;cats&rdquo; 字样、有 5 个或更多主题的仓库。 &lt;*n* cats size:&lt;10000 匹配小]]></description>
</item>
<item>
  <title>ColorChoose</title>
  <link>https://liudongdong1.github.io/colorchoose/</link>
  <pubDate>Sun, 11 Jul 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/colorchoose/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/person-shadow_UELPTNOKP4.jpg" referrerpolicy="no-referrer">
      </div>中文字体一般用微软雅黑，英文字体一般用Times New Rom; 大小 20px,18px,16px; 图像有材质，灯光，质感，纹理，构图，细节，造型等效果处理； 同一篇文章的图片颜色要注]]></description>
</item>
<item>
  <title>Understand</title>
  <link>https://liudongdong1.github.io/understand-%E4%BB%A3%E7%A0%81%E6%9F%A5%E7%9C%8B/</link>
  <pubDate>Wed, 14 Jul 2021 11:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/understand-%E4%BB%A3%E7%A0%81%E6%9F%A5%E7%9C%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/sunflowers-garden_YDQABWFXOZ.jpg" referrerpolicy="no-referrer">
      </div>导入项目 导入项目有两种方法，一种是从菜单栏点击File–&gt;New–&gt;Project,另一种是点击下面界面中间的New Project 点击后，会]]></description>
</item>
<item>
  <title>qBittorrent</title>
  <link>https://liudongdong1.github.io/qbittorrent/</link>
  <pubDate>Wed, 14 Jul 2021 11:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/qbittorrent/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/sunflowers-garden_YDQABWFXOZ.jpg" referrerpolicy="no-referrer">
      </div>“磁力链接”的主要作用是识别【能够通过“点对点技术（即：P2P）”下载的文件】。这种链接是通过不同文件内容的Hash结果生成一个纯文本的“数]]></description>
</item>
<item>
  <title>3dmax</title>
  <link>https://liudongdong1.github.io/3dmax/</link>
  <pubDate>Mon, 19 Jul 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/3dmax/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://images.unsplash.com/photo-1623092475365-cad86ed1a263?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDF8NnNNVmpUTFNrZVF8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" referrerpolicy="no-referrer">
      </div>3D Studio Max，常简称为3d Max或3ds MAX，是Discreet公司开发的（后被Autodesk公司合并）基于PC系统的三维动画渲染和制作软]]></description>
</item>
<item>
  <title>keyshot</title>
  <link>https://liudongdong1.github.io/keyshot/</link>
  <pubDate>Wed, 21 Jul 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/keyshot/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://images.unsplash.com/photo-1629486997190-dcfbabe0ab8b?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwyfHx8ZW58MHx8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" referrerpolicy="no-referrer">
      </div>1. 操作界面 导入/导出/保存文件： KeyShot主菜单在界面顶部区域，如图所示。在这里可以进行文件导入/保存、添加编辑几何体、设置环境阴影、选]]></description>
</item>
<item>
  <title>PlantUML使用</title>
  <link>https://liudongdong1.github.io/plantuml%E4%BD%BF%E7%94%A8/</link>
  <pubDate>Mon, 26 Jul 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/plantuml%E4%BD%BF%E7%94%A8/</guid>
  <description><![CDATA[https://plantuml.com/zh/sequence-diagram 工具：在语雀上进行绘制，或者网页在线绘制 时序图 用例图 类图 活动图 组件图 状态图 部署图 定时图 网络图 甘特图 archimate-diagram 思维导图 Json结构解析]]></description>
</item>
<item>
  <title>SourceTreeGitFlow</title>
  <link>https://liudongdong1.github.io/sourcetreegitflow/</link>
  <pubDate>Fri, 30 Jul 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sourcetreegitflow/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/4MP4CTSD5A.jpg" referrerpolicy="no-referrer">
      </div>1. Sourcetree SourceTree 是 Windows 和Mac OS X 下免费的 Git 客户端，拥有可视化界面，容易上手操作。同时它也是Mercurial和Subversion版本控制系统工具。支]]></description>
</item>
<item>
  <title>v2ray</title>
  <link>https://liudongdong1.github.io/v2ray/</link>
  <pubDate>Sat, 14 Aug 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/v2ray/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/08/10/12/spring-7181766__340.jpg" referrerpolicy="no-referrer">
      </div>和 Shadowsocks 一样，V2Ray 的运行需要服务端和客户端的相互支持，也就是说除了你正在使用的设备，你还需要配置一个境外远程服务器。 1. vps 境外选择 任何境外 VPS]]></description>
</item>
<item>
  <title>MDPictureURLHanle</title>
  <link>https://liudongdong1.github.io/mdpictureurlhandle/</link>
  <pubDate>Fri, 19 Nov 2021 00:30:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/mdpictureurlhandle/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="http://static.blinkfox.com/20181119.jpg" referrerpolicy="no-referrer">
      </div>1. 图片url地址替换 #!/usr/bin/env -S -P${HOME}/anaconda/bin python # -*- coding:utf-8 -*- import re, os, shutil, time, sys, argparse from itertools import chain # import oss2 # 需要替换url的MD文件 md_file = &#39;&#39; # 操作类型, L2L (默认本地到本地)， L2W（本]]></description>
</item>
<item>
  <title>时间戳</title>
  <link>https://liudongdong1.github.io/%E6%97%B6%E9%97%B4%E6%88%B3/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%97%B6%E9%97%B4%E6%88%B3/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QW9GTHWZIS.jpg" referrerpolicy="no-referrer">
      </div>如果需要对时间字段进行操作(如通过时间范围查找或者排序等)，推荐使用bigint，如果时间字段不需要进行任何操作，推荐使用timestamp]]></description>
</item>
<item>
  <title>MongoDBRelative</title>
  <link>https://liudongdong1.github.io/mongodbrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mongodbrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>MongoDB是面向文档的NoSQL数据库，用于大量数据存储。MongoDB是一个在2000年代中期问世的数据库。属于NoSQL数据库的类别]]></description>
</item>
<item>
  <title>JDBCIntroduce</title>
  <link>https://liudongdong1.github.io/jdbcintroduce/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdbcintroduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QW9GTHWZIS.jpg" referrerpolicy="no-referrer">
      </div>JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问]]></description>
</item>
<item>
  <title>EmbeddedDB</title>
  <link>https://liudongdong1.github.io/embeddeddb/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/embeddeddb/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/8M7MVSJMUK.jpg" referrerpolicy="no-referrer">
      </div>SQLite、Berkeley DB等属于嵌入式数据库。 嵌入式数据库跟数据库服务器最大的区别在于它们运行的地址空间不同。通常，数据库服务器独立]]></description>
</item>
<item>
  <title>Beetlsql</title>
  <link>https://liudongdong1.github.io/beetlsql/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/beetlsql/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/03/26/10/42/letters-691842__340.jpg" referrerpolicy="no-referrer">
      </div>BeetlSQL 不仅仅是简单的类似MyBatis或者是Hibernate，或者是俩着的综合，BeetlSQL目的是对标甚至超越Spring Data，是实现]]></description>
</item>
<item>
  <title>DatabaseTool</title>
  <link>https://liudongdong1.github.io/databasetool/</link>
  <pubDate>Thu, 30 Jul 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/databasetool/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133517.png" referrerpolicy="no-referrer">
      </div>1.dbeaver Free multi-platform database tool for developers, SQL programmers, database administrators and analysts. Supports any database which has JDBC driver (which basically means - ANY database). EE version also supports non-JDBC datasources (MongoDB, Cassandra, Couchbase, Redis, BigTable, DynamoDB, etc).
Has a lot of features including metadata editor, SQL editor, rich data editor, ERD, data export/import/migration, SQL execution plans, etc. Based on Eclipse platform. Uses plugins architecture and provides additional functionality for the following databases: MySQL/MariaDB, PostgreSQL, Greenplum, Oracle, DB2 LUW, Exasol, SQL Server, Sybase/SAP ASE, SQLite, Firebird, H2, HSQLDB, Derby, Teradata, Vertica, Netezza, Informix, etc.]]></description>
</item>
<item>
  <title>NLPRelative</title>
  <link>https://liudongdong1.github.io/nlprelative/</link>
  <pubDate>Sat, 15 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/nlprelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>Semantic Parsing: aims to translate a natural languages sentence into its corresponding executable programming language, which relieves users from the burden of learning techniques behind the programming language. 1. Grammar-based Recent Question as context Precedent SQL as context level: author: Kelvin Guu date: 2020 keyword: NLP Guu, K., Lee, K., Tung, Z., Pasupat, P., &amp; Chang, M. W. (2020). Realm: Retrieval-augmented language model pre-training. arXiv preprint arXiv:2002.08909. Paper: REALM Proble]]></description>
</item>
<item>
  <title>resume</title>
  <link>https://liudongdong1.github.io/resume/</link>
  <pubDate>Wed, 19 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/resume/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501112030.png" referrerpolicy="no-referrer">
      </div>1. doc模板 可以下载的：http://www.officeplus.cn/search.shtml?key=%E6%B1%82%E8%81%]]></description>
</item>
<item>
  <title>roleAbility</title>
  <link>https://liudongdong1.github.io/roleability/</link>
  <pubDate>Fri, 19 Mar 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/roleability/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501112226.png" referrerpolicy="no-referrer">
      </div>1. 产品经理 识别并把握机遇 你的消费者（用户） 竞争对手的消费者（用户） 行业趋势与分析 你所在公司的管理层 市场与销售的同事 产品研发团队 你公司的客服代]]></description>
</item>
<item>
  <title>Relation</title>
  <link>https://liudongdong1.github.io/relation/</link>
  <pubDate>Mon, 05 Apr 2021 09:54:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/relation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/07/27/20/27/mockup-863469__340.jpg" referrerpolicy="no-referrer">
      </div>1. 明确几种好的心态 无论做研究还是做工程，不要期待导师给你太多的指导，这点全世界都一样，不要抱怨，独立解决问题的能力就是这样锻炼出来的。好的导]]></description>
</item>
<item>
  <title>炼丹优化</title>
  <link>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9%E4%BC%98%E5%8C%96/</link>
  <pubDate>Mon, 26 Apr 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9%E4%BC%98%E5%8C%96/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/cauliflower-food_RESOL80ESF.jpg" referrerpolicy="no-referrer">
      </div>17种最新方法提高炼丹速度https://mp.weixin.qq.com/s?__biz=MzI5MDUyMDIxNA==&amp;mid]]></description>
</item>
<item>
  <title>Crawl_heavens</title>
  <link>https://liudongdong1.github.io/crawl_heavens/</link>
  <pubDate>Tue, 29 Dec 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/crawl_heavens/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/2.jpeg" referrerpolicy="no-referrer">
      </div>1. 电影爬取 main.py # -*- encoding:utf-8 -*- import sys from PyQt5.QtWidgets import QDialog, QLabel, QPushButton, QLineEdit, QListWidget, QGridLayout, QComboBox, QMessageBox, QApplication, QMenuBar, QAction, QMainWindow, QWidget, QVBoxLayout from PyQt5.QtCore import pyqtSlot, QThread, QObject from PyQt5.QtGui import QIcon, QPixmap, QImage from movieSource.MovieHeaven import MovieHeaven class ImageWindow(QMainWindow): def __init__(self, resources, title): super(ImageWindow, self).__init__() self.setWindowTitle(title) self.central_widget = QWidget() self.setCentralWidget(self.central_widget) layout = QVBoxLayout(self.central_widget) image = QImage(resources) pixmap = QPixmap(resources) image_label = QLabel(self)]]></description>
</item>
<item>
  <title>Eye-Tracking Introduce</title>
  <link>https://liudongdong1.github.io/eye-tracking-introduce/</link>
  <pubDate>Wed, 29 Apr 2020 15:57:50 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/eye-tracking-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/pexels-photo-840810.jpeg" referrerpolicy="no-referrer">
      </div>Paper: Weakly-Supervised Physically Unconstrained Gaze Estimation 本次工作所探讨的问题是从人类互动的视频中进行弱监督的视线估计，基本原理是利用人们在进行 &ldquo;相互注视&rdquo;（LA]]></description>
</item>
<item>
  <title>BlinkDetection</title>
  <link>https://liudongdong1.github.io/blinkdetection/</link>
  <pubDate>Fri, 29 May 2020 15:57:50 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/blinkdetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133220.png" referrerpolicy="no-referrer">
      </div>1. 眨眼检测 使用dlib库 眨眼检测 # import the necessary packages from scipy.spatial import distance as dist from imutils.video import FileVideoStream from imutils.video import VideoStream from imutils import face_utils import argparse import imutils import time import dlib import cv2 import os def eye_aspect_ratio(eye): # compute the euclidean distances between the two sets of # vertical eye landmarks (x, y)-coordinates A]]></description>
</item>
<item>
  <title>OpenCV Emoji Recognition</title>
  <link>https://liudongdong1.github.io/opencv-emoji-recognition/</link>
  <pubDate>Sun, 05 Jul 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opencv-emoji-recognition/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>1. 表情识别模型 使用OpenVINO模型库中的emotions-recognition-retail-0003人脸表情模型，该模型是基于全卷积]]></description>
</item>
<item>
  <title>OpencvBaseOp</title>
  <link>https://liudongdong1.github.io/cornersdetection/</link>
  <pubDate>Fri, 21 Aug 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cornersdetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>0. Image Processing 0.1. Scaling an Image import cv2 import numpy as np FILE_NAME = &#39;volleyball.jpg&#39; try: # Read image from disk. img = cv2.imread(FILE_NAME) # Get number of pixel horizontally and vertically. (height, width) = img.shape[:2] # Specify the size of image along with interploation methods. # cv2.INTER_AREA is used for shrinking, whereas cv2.INTER_CUBIC # is used for zooming. res = cv2.resize(img, (int(width / 2), int(height / 2)), interpolation]]></description>
</item>
<item>
  <title>MediaPipe</title>
  <link>https://liudongdong1.github.io/mediapipe/</link>
  <pubDate>Mon, 24 Aug 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mediapipe/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200715085515063.png" referrerpolicy="no-referrer">
      </div>MediaPipe is the simplest way for researchers and developers to build world-class ML solutions and applications for mobile, desktop/cloud, web and IoT devices. 1. Introduce End-to-End acceleration: built-in fast ML inference and processing accelerated even on common hardware Build one, deploy anywhere: Unified solution works across Android, iOS, desktop/cloud, web and IoT Ready-to-use solutions: cutting-edge ML solutions demonstrating full power of the framework Free and Open Source 2.PaperReading level: CCF_A]]></description>
</item>
<item>
  <title>OpencvExample</title>
  <link>https://liudongdong1.github.io/opencvexample/</link>
  <pubDate>Sun, 30 Aug 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opencvexample/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>1. 车牌识别 import cv2 import imutils import numpy as np import pytesseract pytesseract.pytesseract.tesseract_cmd = r&#39;C:\Program Files (x86)\Tesseract-OCR\tesseract.exe&#39; img = cv2.imread(&#39;D://skoda1.jpg&#39;,cv2.IMREAD_COLOR) img = cv2.resize(img, (600,400) ) gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) #使用双边滤波（模糊）会从图像中删除不需要的细节。 gray = cv2.bilateralFilter(gray, 13, 15, 15) edged = cv2.Canny(gray, 30, 200) contours =]]></description>
</item>
<item>
  <title>PictureDataType</title>
  <link>https://liudongdong1.github.io/picturedatatype/</link>
  <pubDate>Tue, 27 Oct 2020 08:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/picturedatatype/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/drops-falling-into-water.jpg" referrerpolicy="no-referrer">
      </div>1. 图像读取与存储 1.1. PIL from PIL import Image import numpy as np def imageloadDirectlyResize(path,resize): &#39;&#39;&#39; 直接通过PIL image 加载图像，resize操作 &#39;&#39;&#39; img = Image.open(path) img=img.resize((196,196)) img.show() #print(type(img)) #&lt;class &#39;PIL.Image.Image&#39;&gt; #img.save(&#34;1.jpg&#34;) return np.asarray(img) #196*196*3 1.2. skimage from skimage import io img=io.imread(&#39;img.jpg&#39;) io.imshow(img) io.show() io.imsave(&#39;img_copy.jpg&#39;, img) 1.3. matplotlib import matplotlib.pyplot]]></description>
</item>
<item>
  <title>LightestDetection</title>
  <link>https://liudongdong1.github.io/lightestdetection/</link>
  <pubDate>Sun, 13 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/lightestdetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/05/16/15/40/texture-1395982__340.jpg" referrerpolicy="no-referrer">
      </div>minMaxLoc寻找矩阵(一维数组当作向量,用Mat定义) 中最小值和最大值的位置. 1. BrightArea import numpy as np import argparse import cv2 # construct the argument parse and parse the arguments ap = argparse.ArgumentParser() ap.add_argument(&#34;-i&#34;, &#34;--image&#34;, help = &#34;path to]]></description>
</item>
<item>
  <title>3DkeyPointPaper</title>
  <link>https://liudongdong1.github.io/3dkeypointpaper/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/3dkeypointpaper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/48.jpeg" referrerpolicy="no-referrer">
      </div>level: 2020, CCF_A CVPR author: Yang You, Shanghai Jiao Tong University date: 2020 keyword: 3D keypoint You, Y., Lou, Y., Li, C., Cheng, Z., Li, L., Ma, L., &hellip; &amp; Wang, W. (2020). KeypointNet: A Large-scale 3D Keypoint Dataset Aggregated from Numerous Human Annotations. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (pp. 13647-13656). Paper: KeypointNet Summary present keypointnet, the first large-scale and diverse 3D keypoint]]></description>
</item>
<item>
  <title>3DRelative</title>
  <link>https://liudongdong1.github.io/3drelative/</link>
  <pubDate>Mon, 27 Jul 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/3drelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20.jpeg" referrerpolicy="no-referrer">
      </div>1. 3D数据应用 1.1. 消费电子 人脸活体检测及识别；3D感应人体关键骨骼点，体感互动游戏；手势识别及控制；三位信息构建；人机物交互； 1.2. 机器人 精确识别]]></description>
</item>
<item>
  <title>Crawl_record</title>
  <link>https://liudongdong1.github.io/crawl_record/</link>
  <pubDate>Sun, 29 Nov 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/crawl_record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/2.jpeg" referrerpolicy="no-referrer">
      </div>1. HTMLParse 1.1. XML 方式 lxml是python的一个解析库，支持HTML和XML的解析，支持XPath解析方式，而且解析效率非常高 XPath，全称XML]]></description>
</item>
<item>
  <title>GANIntroduce</title>
  <link>https://liudongdong1.github.io/gan/</link>
  <pubDate>Sat, 10 Oct 2020 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gan/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201010155456226.png" referrerpolicy="no-referrer">
      </div>A GAN has three primary components: a generator model for generating new data, a discriminator model for classifying whether generated data are real faces, or fake, and the adversarial network that pits them against each other. The problem of generating a new image of dog is equivalent to the problem of generating a new vector following the “dog probability distribu]]></description>
</item>
<item>
  <title>CircleGan</title>
  <link>https://liudongdong1.github.io/circlegan/</link>
  <pubDate>Sat, 20 Nov 2021 22:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/circlegan/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/TDAU1ERCD4.jpg" referrerpolicy="no-referrer">
      </div>Zhu, Jun-Yan, et al. &ldquo;Unpaired image-to-image translation using cycle-consistent adversarial networks.&rdquo; Proceedings of the IEEE international conference on computer vision. 2017. cite 10600 [pdf] [code] Paper: CircleGAN Summary present a method that can learn to do the same, capturing special characteristics of one image collection and figureing out how these characteristics could be translated into the other image collection. Research Objective Application Area: Collection style transfer: learns to mimic the]]></description>
</item>
<item>
  <title>ROSRelative</title>
  <link>https://liudongdong1.github.io/cafferelative/</link>
  <pubDate>Wed, 29 Jan 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cafferelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113003.png" referrerpolicy="no-referrer">
      </div>Caffe Introduce a deep learning framework that provides an easy and straightforward way to experiment with deep learning and leverage community contributions of new models and algorithms. Caffe2 is built to excel at utilizing both multiple GPUs on a single-host and multiple hosts with GPUs. PyTorch is great for research, experimentation and trying out exotic neural networks, while Caffe2 is headed towards supporting more industrial-strength applications with a heavy focus]]></description>
</item>
<item>
  <title>java_overview</title>
  <link>https://liudongdong1.github.io/overview/</link>
  <pubDate>Sun, 25 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/overview/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/UGFCFONZQA.jpg" referrerpolicy="no-referrer">
      </div>1. 源码阅读 java Collecttion 库 java Hutool 库 Collection/List/Set/Map]]></description>
</item>
<item>
  <title>weekmodel</title>
  <link>https://liudongdong1.github.io/threadrelative/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/threadrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501105315.png" referrerpolicy="no-referrer">
      </div>1. Event threading.Event可以使一个线程等待其他线程的通知。其内置了一个标志，初始值为False。线程通过wait()方法进入等待状]]></description>
</item>
<item>
  <title>sparkRelative</title>
  <link>https://liudongdong1.github.io/sparkrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sparkrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132438.png" referrerpolicy="no-referrer">
      </div>1. 部署方式 1.1. Local 模式 Local模式就是运行在一台计算机上的模式，通常用于在本机上测试，当不设置master参数的值时，默认此模式，具体有以下几]]></description>
</item>
<item>
  <title>PySpark</title>
  <link>https://liudongdong1.github.io/pyspark/</link>
  <pubDate>Mon, 13 Jul 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pyspark/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/4.jpeg" referrerpolicy="no-referrer">
      </div>Apart from real-time and batch processing, Apache Spark supports interactive queries and iterative algorithms. Using PySpark, you can work with RDDs in Python programming language also. It is because of a library called Py4j that they are able to achieve this. Resilient Distributed Dataset (RDD): RDD is an immutable (read-only), fundamental collection of elements or items that can be operated on many devices at the same time (parallel processing). Each]]></description>
</item>
<item>
  <title>WebRTC</title>
  <link>https://liudongdong1.github.io/webrtc/</link>
  <pubDate>Wed, 16 Dec 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/webrtc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>WebRTC，名称源自网页实时通信（Web Real-Time Communication）的缩写，是一项实时通讯技术，它允许网络应用或者站点，在不借助中间媒介]]></description>
</item>
<item>
  <title>SIP信令</title>
  <link>https://liudongdong1.github.io/sip%E4%BF%A1%E4%BB%A4/</link>
  <pubDate>Fri, 18 Dec 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sip%E4%BF%A1%E4%BB%A4/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132733.png" referrerpolicy="no-referrer">
      </div>用于多方多媒体通信的框架协议。它是一个基于文本的应用层控制协议, 独立于底层传输协议, 用于建立、修改和终止IP网络上的双方或多方多媒体会话。 1.]]></description>
</item>
<item>
  <title>BatCMD</title>
  <link>https://liudongdong1.github.io/batcmd/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/batcmd/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132220.png" referrerpolicy="no-referrer">
      </div>1. 命令介绍 echo， dir, cd, mkdir, rd rd /s/q d:temp: #删除 d:temp 文件夹及其子文件夹和文件，/q安静模式 del /q/a/f/s d:temp*.*: #删除 d:temp 及子文件夹里面的所有文件，包括隐藏、只读、系统]]></description>
</item>
<item>
  <title>bat</title>
  <link>https://liudongdong1.github.io/bat/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bat/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132220.png" referrerpolicy="no-referrer">
      </div>1. cmd关闭占用进程 IDEA中启动Tomcat报错，Error running Tomcat7.0.52: Address localhost:1099 is already in use 或者是 java.rmi.server.ExportException: Port already in use: 1099 ，表示1099端口被其他进程占用了。 解决方法]]></description>
</item>
<item>
  <title>3DPoseRelative</title>
  <link>https://liudongdong1.github.io/3dposerelative/</link>
  <pubDate>Sun, 06 Jun 2021 09:33:10 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/3dposerelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/flower-background_1CPDPEZCIM.jpg" referrerpolicy="no-referrer">
      </div>1. Mediapipe 3D detection 使用移动增强现实(AR)会话数据(session data)，开发了新的数据pipeline。大部分智能手机现在都具备了增强现实的功能]]></description>
</item>
<item>
  <title>FFTNN</title>
  <link>https://liudongdong1.github.io/fftnn/</link>
  <pubDate>Wed, 30 Sep 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/fftnn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/09/27/17/42/autumn-3707549__340.jpg" referrerpolicy="no-referrer">
      </div>1. DFT k表示每N个样本的循环次数； N表示信号的长度； $x_n$: 表示信号在样本n处的值。 $y_k$: 是一个复值，它给出了信号x中频率为k的正弦信号的信息；从$y_]]></description>
</item>
<item>
  <title>Filter Learning Record</title>
  <link>https://liudongdong1.github.io/filter-learning-record/</link>
  <pubDate>Wed, 10 Jun 2020 16:22:21 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/filter-learning-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/golden-gate-bridge-river-bridge-suspension-bridge.jpg" referrerpolicy="no-referrer">
      </div>1.常见滤波算法 1.1. 限幅滤波法（又称程序判断滤波法） A方法： 根据经验判断，确定两次采样允许的最大偏差值（设为A），每次检测到新值时判断： 如果本]]></description>
</item>
<item>
  <title>MatplotDraw Instance Record</title>
  <link>https://liudongdong1.github.io/matplotdraw-instance-record/</link>
  <pubDate>Wed, 03 Jun 2020 18:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/matplotdraw-instance-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/pexels-photo-276223.jpeg" referrerpolicy="no-referrer">
      </div>1.基本概念 canvas 类似画板 figure 类似画布（或理解为画图区域） axes 子图（或理解为坐标系） 各类图表信息，包括：xaxis（x轴），yaxis（y轴），ti]]></description>
</item>
<item>
  <title>numpy&amp;FileSave</title>
  <link>https://liudongdong1.github.io/numpyfilesave/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/numpyfilesave/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/12/12/17/bread-6330807__340.jpg" referrerpolicy="no-referrer">
      </div>1. attributes ndarray.ndim： the number of axes (dimensions) of the array. ndarray.shape: For a matrix with n rows and m columns, shape will be (n,m). The length of the shape tuple is therefore the number of axes, ndim. ndarray.size: the total number of elements of the array. ndarray.dtype: numpy.int32, numpy.int16, and numpy.float64 create: np.ar]]></description>
</item>
<item>
  <title>WirePCB</title>
  <link>https://liudongdong1.github.io/wirepcb/</link>
  <pubDate>Sat, 27 Mar 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wirepcb/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/images.jpg" referrerpolicy="no-referrer">
      </div>利用Multisim可以实现模拟，数字电路系统仿真，也可以实现PCB设计制作，一般使用Multisim进行电路仿真设计，将生成的网表修改后导]]></description>
</item>
<item>
  <title>Object Tracking</title>
  <link>https://liudongdong1.github.io/object-tracking/</link>
  <pubDate>Sun, 07 Jun 2020 11:18:21 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/object-tracking/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132858.png" referrerpolicy="no-referrer">
      </div>Paper: SiamRPN++ propose a new model architecture to perform layer-wise and depth-wise aggregations, which not only further improves the accuracy but also reduces the model size. provide a deep analysis of Siamese trackers and prove that when using deep networks the decrease in accuracy comes from the destroy of the strict translation invariance. present a simple yet effective sampling strategy to break the spatial invariance restriction which successfully trains Siamese]]></description>
</item>
<item>
  <title>OpenMMLab</title>
  <link>https://liudongdong1.github.io/openmmlab/</link>
  <pubDate>Mon, 13 Jul 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/openmmlab/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201129135527221.png" referrerpolicy="no-referrer">
      </div>OpenMMLab 在Github上不是一个单独项目，除了大家所熟知的 Github 上万 star 目标检测库 MMDetection，还有其他方向的代码库和数据集,目前Github]]></description>
</item>
<item>
  <title>OpenPose_Usage</title>
  <link>https://liudongdong1.github.io/openpose_usage/</link>
  <pubDate>Tue, 15 Sep 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/openpose_usage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>1. KeyPoint Exact 1.1. VideoHandle #with face and hands bin\OpenPoseDemo.exe --video examples\media\video.avi --face --hand # Only body ./build/examples/openpose/openpose.bin --video examples/media/video.avi --write_json output/ --display 0 --render_pose 0 # Body + face + hands ./build/examples/openpose/openpose.bin --video examples/media/video.avi --write_json output/ --display 0 --render_pose 0 --face --hand #save to json and video ./build/examples/openpose/openpose.bin --video examples/media/video.avi --write_video output/result.avi --write_json output/ 1.2. Webcam_Handle :: With face and hands bin\OpenPoseDemo.exe --face --hand 1.3. Images_Handle :: With face]]></description>
</item>
<item>
  <title>KerasRelative</title>
  <link>https://liudongdong1.github.io/kerasrelative/</link>
  <pubDate>Tue, 28 Jan 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kerasrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113041.png" referrerpolicy="no-referrer">
      </div>Introduce Keras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano.Keras is compatible with: Python 2.7-3.6. Keras 2.2.5 was the last release of Keras implementing the 2.2.* API. It was the last release to only support TensorFlow 1 (as well as Theano and CNTK). The current release is Keras 2.3.0, which makes significant API changes and add support for]]></description>
</item>
<item>
  <title>LaTex 的样式设定</title>
  <link>https://liudongdong1.github.io/06-latex-%E7%9A%84%E6%A0%B7%E5%BC%8F%E8%AE%BE%E5%AE%9A/</link>
  <pubDate>Sat, 19 Jun 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/06-latex-%E7%9A%84%E6%A0%B7%E5%BC%8F%E8%AE%BE%E5%AE%9A/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/10/14/09/56/journal-2850091__340.jpg" referrerpolicy="no-referrer">
      </div>一、字体选择 下⾯代码⽤于设置正⽂部分中英⽂的默认字体分别为 Roman Times New 和 楷体-简 （Windows 上写楷体即可） xeCJK 宏包⽤于设置中⽂字体，fontsp]]></description>
</item>
<item>
  <title>LaTex 的文档元素</title>
  <link>https://liudongdong1.github.io/05-latex-%E7%9A%84%E6%96%87%E6%A1%A3%E5%85%83%E7%B4%A0/</link>
  <pubDate>Sat, 19 Jun 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/05-latex-%E7%9A%84%E6%96%87%E6%A1%A3%E5%85%83%E7%B4%A0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/06/29/08/50/pencils-1486278__340.jpg" referrerpolicy="no-referrer">
      </div>一、章节 article 文档类带编号的层级为 \section / \subsection / \subsubsection 三级； report/book 文档类带编号的层级为 \chapter / \section / \subsection 三级。 \documentclass[UTF8]{ctexart} \begin{document} \section{第一章节} Hello World \subsectio]]></description>
</item>
<item>
  <title>LaTex 的文本语法</title>
  <link>https://liudongdong1.github.io/03-latex-%E7%9A%84%E6%96%87%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
  <pubDate>Sat, 19 Jun 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/03-latex-%E7%9A%84%E6%96%87%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/07/02/10/40/writing-828911__340.jpg" referrerpolicy="no-referrer">
      </div>1. 特殊命令 .1. include &amp; input 引入一个外部文件，使之并成为文章的一部分；如，有两个Tex文件 main.tex 和 chapter1.tex 在同一目录下，只要在 main.tex 中加入 \include{chapter1.tex} 或 \include{chapter1} 即可在相应位置引入 chapter.tex]]></description>
</item>
<item>
  <title>LaTex 的数学公式</title>
  <link>https://liudongdong1.github.io/04-latex-%E7%9A%84%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</link>
  <pubDate>Sat, 19 Jun 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/04-latex-%E7%9A%84%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/02/19/10/12/writing-1209121__340.jpg" referrerpolicy="no-referrer">
      </div>https://mathpix.com/ 能够通过热键呼出截屏，而后将截屏中的公式转换成 LaTeX 数学公式的代码。 http://detexify.kirelabs.org/classify.html 允许用户用鼠标在输入区绘制单个数学符号的样式，系统会根据样式返回对应的 LaTeX]]></description>
</item>
<item>
  <title>LaTex 的基本介绍</title>
  <link>https://liudongdong1.github.io/01-latex-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Sat, 19 Jun 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/01-latex-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/06/08/15/11/typewriter-801921__480.jpg" referrerpolicy="no-referrer">
      </div>from https://github.com/qinnian/LaTeX 一、TEX TEX 是高德纳 (Donald E.Knuth) 开发的、以排版文字和数学公式为目的的一个计算机软件。高德纳从 1977 年开始开发 TEX ，以发掘当时开始用于出版工业的数字印刷]]></description>
</item>
<item>
  <title>LaTex 的安装配置</title>
  <link>https://liudongdong1.github.io/02-latex-%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
  <pubDate>Sat, 19 Jun 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/02-latex-%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/01/08/18/26/man-593333__340.jpg" referrerpolicy="no-referrer">
      </div>from https://github.com/qinnian/LaTeX 一、TeXLive 下载 TeXLive下载（官网） TeXLive下载（清华大学镜像） TeXLive下载（百度网盘） 提取码：zb7b 二、Te]]></description>
</item>
<item>
  <title>LaTex 工具</title>
  <link>https://liudongdong1.github.io/latex%E5%B7%A5%E5%85%B7/</link>
  <pubDate>Mon, 19 Jul 2021 19:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/latex%E5%B7%A5%E5%85%B7/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/EFELLTZDQ8.jpg" referrerpolicy="no-referrer">
      </div>1. 表格工具 https://www.tablesgenerator.com/ tablesgenerator，所见即所得，可以一键转换成LaTex、markdown、HTML等形式的表格，非常方便！你可以把]]></description>
</item>
<item>
  <title>注意细节</title>
  <link>https://liudongdong1.github.io/%E6%B3%A8%E6%84%8F%E7%BB%86%E8%8A%82/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/%E6%B3%A8%E6%84%8F%E7%BB%86%E8%8A%82/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/03/06/12/30/flamingos-4906958__340.jpg" referrerpolicy="no-referrer">
      </div>在日常的职场中，PPT制作一直是非常重要工作技巧，无论是市场营销方案、公司介绍还是给领导的汇报文件，或者介绍公司产品，会议营销等。大多时候我]]></description>
</item>
<item>
  <title>PPT线条图表</title>
  <link>https://liudongdong1.github.io/ppt%E7%BA%BF%E6%9D%A1%E5%9B%BE%E8%A1%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/ppt%E7%BA%BF%E6%9D%A1%E5%9B%BE%E8%A1%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QUU0AQABSN.jpg" referrerpolicy="no-referrer">
      </div>PPT 点击形状，右击选择顶点编辑后，可以对图片进行顶点编辑，善于利用曲线工具 1. 线条作用 1. 连接元素 2. 划分内容 3. 装饰作用 4. 占位神器 5. 串联主题 2. 折线图]]></description>
</item>
<item>
  <title>PPT风格</title>
  <link>https://liudongdong1.github.io/ppt%E9%A3%8E%E6%A0%BC/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/ppt%E9%A3%8E%E6%A0%BC/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/IVWZ4IZI5Q.jpg" referrerpolicy="no-referrer">
      </div>1.2.5D 风格 2. 新拟态风格 3.轻3D风格 （1）shapefest：一款免费的3D元素素材 （2）saly：想要3D插画元素的找它 （3）iconshoc]]></description>
</item>
<item>
  <title>PPT Useful Plugin</title>
  <link>https://liudongdong1.github.io/ppt-useful-plugin/</link>
  <pubDate>Mon, 11 May 2020 10:22:17 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/ppt-useful-plugin/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/ppt.webp" referrerpolicy="no-referrer">
      </div>美化大师上面PPT素材需要收费，Piti插件可以快速找到相关图片，具体功能的页面，可以自动生成ppt； iSlide插件： 口袋动画相关教程： 快]]></description>
</item>
<item>
  <title>PPTSegment</title>
  <link>https://liudongdong1.github.io/pptsegment/</link>
  <pubDate>Sun, 11 Apr 2021 10:22:17 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/pptsegment/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501112532.png" referrerpolicy="no-referrer">
      </div>页面逻辑及其清晰， 把金字塔原理发挥的淋漓尽致；例如主题结论，结论的说明，详细论据， 每一页PPT只有一个核心观点 风格偏扁平，显得更加专业 用衬底]]></description>
</item>
<item>
  <title>PPT 模板</title>
  <link>https://liudongdong1.github.io/ppt%E6%A8%A1%E6%9D%BF%E4%BD%BF%E7%94%A8/</link>
  <pubDate>Sun, 12 Dec 2021 10:22:17 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/ppt%E6%A8%A1%E6%9D%BF%E4%BD%BF%E7%94%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/20/15/37/monkey-6952641__340.jpg" referrerpolicy="no-referrer">
      </div>打开一篇空白演示稿，在【视图】下方功能区中选择【幻灯片母版】 进入母版编辑模式。我们可以对标题以及各级文本字体、样式、以及颜色等进行设计 选择【]]></description>
</item>
<item>
  <title>SetTopBox</title>
  <link>https://liudongdong1.github.io/settopbox/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/settopbox/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>利用有线电视网络作为传输平台，电视机作为用户终端，以提高现有电视机的性能或增加其功能。 1. 分类 按传输途径分 有线电视机顶盒 *名称* *广播型机顶盒]]></description>
</item>
<item>
  <title>RPI Camera Monitor</title>
  <link>https://liudongdong1.github.io/rpi-camera-monitor/</link>
  <pubDate>Wed, 06 May 2020 09:44:31 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rpi-camera-monitor/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/1.png" referrerpolicy="no-referrer">
      </div>​ 由人盯着监视屏幕，人总有疲劳限度的。研究表明，监控操作人员盯着电视墙屏幕超过10分钟后将漏掉90%的视频信息。由于人工筛选数据的低效率和低]]></description>
</item>
<item>
  <title>RaspberryPi4 Installation</title>
  <link>https://liudongdong1.github.io/raspberrypi4-installation/</link>
  <pubDate>Fri, 08 May 2020 11:19:34 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/raspberrypi4-installation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/pexels-photo-57007.jpeg" referrerpolicy="no-referrer">
      </div>​ Raspberry Pi is the most attractive SBC among the developers, programmers, and students. It helps to build any prototypes and develop applications or software. Nowadays, Raspberry Pi can generate output like a desktop computer and has the ability to serve individuals and small businesses. Low power draw, small form factor, no noise, and solid-state storage are the main reasons behind the widespread use of Raspberry Pi. 1. 引脚]]></description>
</item>
<item>
  <title>RPi Function Plugin</title>
  <link>https://liudongdong1.github.io/rpi-function-plugin/</link>
  <pubDate>Thu, 14 May 2020 09:38:06 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rpi-function-plugin/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200514213501298.png" referrerpolicy="no-referrer">
      </div>记录linux，debain 系统上常用功能插件，方便以后使用。 1.Mplayer 视频音乐播放 Player provides a clean, Pythonic interface to MPlayer. AsyncPlayer is a Player subclass with asyncore integration (POSIX only). GPlayer is a Player subclass with GTK/GObject integration. QtPlayer is a Player subclass with]]></description>
</item>
<item>
  <title>KaliTutorial</title>
  <link>https://liudongdong1.github.io/kalitutorial/</link>
  <pubDate>Sat, 16 Jan 2021 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kalitutorial/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133746.png" referrerpolicy="no-referrer">
      </div>1. nmap 使用原始 IP 报文来发现网络上有哪些主机，那些 主机提供什么服务(应用程序名和版 本)，那 些服务运行在什么操作系统(包括版本信息)， 它们使用什么]]></description>
</item>
<item>
  <title>KaliRpi</title>
  <link>https://liudongdong1.github.io/kalirpi/</link>
  <pubDate>Sat, 16 Jan 2021 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kalirpi/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20210118235241834.png" referrerpolicy="no-referrer">
      </div>0. img下载地址 登陆用户密码： kali, kali; 1. 镜像源地址 kali@kali:~$ sudo vi /etc/apt/sources.list #阿里云镜像 deb https://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src https://mirrors.aliyun.com/kali kali-rolling main non-free contrib #中科大 deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib #浙大 deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free]]></description>
</item>
<item>
  <title>Arduino Learning Record</title>
  <link>https://liudongdong1.github.io/arduino-learning-record/</link>
  <pubDate>Tue, 19 May 2020 10:51:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/arduino-learning-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/arduino-4916880__340.webp" referrerpolicy="no-referrer">
      </div>Arduino 是一块基于开放原始代码的 Simple i/o 平台，并且具有开发语言和开发 环境都很简单、易理解的特点。让您可以快速使用 Arduino 做出有趣的东西。 它是一个能够用来感应]]></description>
</item>
<item>
  <title>FlashMethods</title>
  <link>https://liudongdong1.github.io/flashmethods/</link>
  <pubDate>Tue, 19 Jan 2021 10:51:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/flashmethods/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111720.png" referrerpolicy="no-referrer">
      </div>单片机的烧录方式主要可以分为三种，分别为ICP(在电路编程)、IAP(在应用编程)以及ISP(在系统编程)。 ICP(In Circuit Programing)在电路]]></description>
</item>
<item>
  <title>Camera_串口</title>
  <link>https://liudongdong1.github.io/camera_%E4%B8%B2%E5%8F%A3/</link>
  <pubDate>Sun, 23 May 2021 21:11:26 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/camera_%E4%B8%B2%E5%8F%A3/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201206180344948.png" referrerpolicy="no-referrer">
      </div>% create an arduino object. instead of &#34;/dev/cu.usbmodem1411&#39;,&#39;BaudRate&#34; % use your serail port name. You can check it in arduino -&gt; tools -&gt; port. % Write the name of your port before the command &#39;BaudRate&#39; in the % following string. ar = serial(&#39;/dev/cu.usbmodem1411&#39;,&#39;BaudRate&#39;,9600); % Check for the camera name with the command % webcamlist() in matlab. cameras= webcamlist(); % type &#34;cameras&#34; in the command window and see which camera correspond]]></description>
</item>
<item>
  <title>TimeSeqence</title>
  <link>https://liudongdong1.github.io/timesequence/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/timesequence/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210521113411.png" referrerpolicy="no-referrer">
      </div>1. 时序特征 tsfresh是开源的提取时序数据特征的python包，能够提取出超过64种特征. 时间序列统计特征：最大值、最小值、值域、均值、中]]></description>
</item>
<item>
  <title>Merlion_Framework</title>
  <link>https://liudongdong1.github.io/merlion_framework/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/merlion_framework/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/NSTHHXBQTL.jpg" referrerpolicy="no-referrer">
      </div>首先时间序列的任务主要包括时间序列异常点检测及时间序列的预测，其中时间序列的预测又包括单变量时间序列预测，和多变量时间序列预测。在时间序列预]]></description>
</item>
<item>
  <title>AnomalyDetection</title>
  <link>https://liudongdong1.github.io/anomalydetection/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/anomalydetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210521110349.png" referrerpolicy="no-referrer">
      </div>异常检测（Anomaly Detection 或 Outlier Detection）指的是通过数据挖掘手段识别数据中的“异常点”. 1.异常类型 .1. 单点异常 单点异常（Global]]></description>
</item>
<item>
  <title>StreamAnalyse-BloomFilter</title>
  <link>https://liudongdong1.github.io/streamanalyse-bloomfilter/</link>
  <pubDate>Sun, 26 Apr 2020 15:01:53 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/streamanalyse-bloomfilter/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/images.png" referrerpolicy="no-referrer">
      </div>A Bloom filter is a space-efficient probabilistic data structure, conceived by Burton Howard Bloom in 1970, that is used to test whether an element is a member of a set. a query returns either &ldquo;possibly in set&rdquo; or &ldquo;definitely not in set&rdquo;. the shortcoming of this structure is that the more elements that are added to the set, the larger the probability of false positives. and , Bloom filters do]]></description>
</item>
<item>
  <title>SkLearn Evaluation</title>
  <link>https://liudongdong1.github.io/sklearn-evaluation/</link>
  <pubDate>Wed, 14 Apr 2021 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/sklearn-evaluation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113504.png" referrerpolicy="no-referrer">
      </div>1. Cross-validation cross_val_score from sklearn.model_selection import cross_val_score clf = svm.SVC(kernel=&#39;linear&#39;, C=1, random_state=42) scores = cross_val_score(clf, X, y, cv=5，scoring=&#39;f1_macro&#39;) print(&#34;%0.2f accuracy with a standard deviation of %0.2f&#34; % (scores.mean(), scores.std())) from sklearn import preprocessing X_train, X_test, y_train, y_test = train_test_split(]]></description>
</item>
<item>
  <title>SkLearnVisualization</title>
  <link>https://liudongdong1.github.io/sklearnvisualization/</link>
  <pubDate>Wed, 14 Apr 2021 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/sklearnvisualization/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210522212757.png" referrerpolicy="no-referrer">
      </div>1. cross-validation（ROC) print(__doc__) import numpy as np import matplotlib.pyplot as plt from sklearn import svm, datasets from sklearn.metrics import auc from sklearn.metrics import plot_roc_curve from sklearn.model_selection import StratifiedKFold # ############################################################################# # Data IO and generation # Import some data to play with iris = datasets.load_iris() X = iris.data y = iris.target X, y = X[y != 2], y[y != 2] n_samples, n_features = X.shape # Add noisy features random_state = np.]]></description>
</item>
<item>
  <title>SkLearn Optimize</title>
  <link>https://liudongdong1.github.io/sklearn-optimize/</link>
  <pubDate>Wed, 14 Apr 2021 08:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/sklearn-optimize/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113542.png" referrerpolicy="no-referrer">
      </div>使用scikit-learn时提高速度的三种主要方法是：使用joblib和Ray并行化或分发培训，使用不同的超参数优化技术（网格搜索，随机搜]]></description>
</item>
<item>
  <title>Non-maximumSuppression</title>
  <link>https://liudongdong1.github.io/non-maximumsuppression/</link>
  <pubDate>Wed, 19 Aug 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/non-maximumsuppression/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/blue-abstract-glass-balls.jpg" referrerpolicy="no-referrer">
      </div>NMS:
Input: A list of Proposal boxes B, corresponding confidence scores S and overlap threshold N.
Output: A list of filtered proposals D.
Algorithm:
Select the proposal with highest confidence score, remove it from B and add it to the final proposal list D. (Initially D is empty). Now compare this proposal with all the proposals — calculate the IOU (Intersection over Union) of this proposal with every other proposal. If the IOU is greater than the threshold N, remove that proposal from B.]]></description>
</item>
<item>
  <title>Federated Learning Record</title>
  <link>https://liudongdong1.github.io/federated-learning-record/</link>
  <pubDate>Wed, 29 Apr 2020 18:51:16 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/federated-learning-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/fdlearning.png" referrerpolicy="no-referrer">
      </div>level: author: , Anit Kumar Sahu(Bosch Center for AI) date: 2019 Paper: Federated Learning Summary discuss the unique characteristics and challenges of federated learning, providing a broad overview of current approaches, and outline several directions of future work that are relevant to a wide range of research communities. Research Objective Application Area: learning sentiment, semantic location, activities of mobile phone users, adapting to pedestrian behavior in autonomous vehicles, predicting health]]></description>
</item>
<item>
  <title>Federated Learning Introduce</title>
  <link>https://liudongdong1.github.io/federated-learning-introduce/</link>
  <pubDate>Wed, 29 Apr 2020 19:21:08 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/federated-learning-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/fdlearning.png" referrerpolicy="no-referrer">
      </div>1. 背景 数据孤岛问题严重，由于安全问题、竞争关系和审批流程等因素，数据在行业、甚至是在公司内部以“孤岛”的形式存在。 重视数据隐私和安全已经成为]]></description>
</item>
<item>
  <title>SimilarityMetric</title>
  <link>https://liudongdong1.github.io/similaritymetric/</link>
  <pubDate>Mon, 13 Jul 2020 09:47:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/similaritymetric/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133125.png" referrerpolicy="no-referrer">
      </div>level: CVPR author: Paul-Edouard Sarlin date: 2020 keyword: features matching; data association; Sarlin, Paul-Edouard, et al. &ldquo;Superglue: Learning feature matching with graph neural networks.&rdquo; Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 2020. Paper: SuperGlue Summary demonstrates the power of attention-based graph neural networks for local feature matching: self-attention, boosts the receptive field of local descriptors; cross-attention, enables cross-image communication and is inspired by the way humans]]></description>
</item>
<item>
  <title>AI落地部署</title>
  <link>https://liudongdong1.github.io/ai%E8%90%BD%E5%9C%B0%E9%83%A8%E7%BD%B2/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ai%E8%90%BD%E5%9C%B0%E9%83%A8%E7%BD%B2/</guid>
  <description><![CDATA[针对不同平台对生成的模型进行转换，也就是俗称的parse、convert，即前端解释器 针对转化后的模型进行优化 在特定的平台(嵌入端或者服务端]]></description>
</item>
<item>
  <title>argobots</title>
  <link>https://liudongdong1.github.io/argobots_paper/</link>
  <pubDate>Sat, 23 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/argobots_paper/</guid>
  <description><![CDATA[Paper: argobots SM1 in ES1 has one associated private pool, PM11, and SM2 in ES2 has two private pools, PM21 and PM22. PS is shared between ES1 and ES2, and thus both SM1 in ES1 and SM2 in ES2 can access the pool to push or pop work units. PE denotes an event pool. The event pool is meant for lightweight notification. It is periodically checked by a scheduler to]]></description>
</item>
<item>
  <title>argobots</title>
  <link>https://liudongdong1.github.io/argobots/</link>
  <pubDate>Sat, 23 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/argobots/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>Condition Variable: a condition on which ULTs are waiting until it is signaled. Execution Stream (ES): a sequential instruction stream that contains one or more work units. Future: a mechanism for passing a value between work units, allowing a work unit to wait for a value that is set asynchronously. Handle: an opaque reference to an Argobots object. Mutex: a synchronization method to support mutual exclusion between work units. Object:]]></description>
</item>
<item>
  <title>开源项目-Margo</title>
  <link>https://liudongdong1.github.io/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-margo/</link>
  <pubDate>Sun, 31 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-margo/</guid>
  <description><![CDATA[Argobots pools with Margo RPCs #include &lt;assert.h&gt; #include &lt;stdio.h&gt; #include &lt;margo.h&gt; #include &lt;alpha-server.h&gt; static void finalize_xstream_cb(void* data); int main(int argc, char** argv) { margo_instance_id mid = margo_init(&#34;tcp&#34;, MARGO_SERVER_MODE, 0, 0); assert(mid); margo_set_log_level(mid, MARGO_LOG_INFO); hg_addr_t my_address; margo_addr_self(mid, &amp;my_address); char addr_str[128]; size_t addr_str_size = 128; margo_addr_to_string(mid, addr_str, &amp;addr_str_size, my_address); margo_addr_free(mid,my_address); margo_info(mid, &#34;Server running at address %s, with provider id 42&#34;, addr_str); ABT_pool pool; ABT_pool_create_basic( ABT_POOL_FIFO, ABT_POOL_ACCESS_SPSC, ABT_TRUE, &amp;pool); ABT_xstream xstream; ABT_xstream_create_basic( ABT_SCHED_DEFAULT,]]></description>
</item>
<item>
  <title>VisualizationTool</title>
  <link>https://liudongdong1.github.io/visualizationtools/</link>
  <pubDate>Wed, 13 May 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/visualizationtools/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/24/12/17/rocks-6278936__340.jpg" referrerpolicy="no-referrer">
      </div>1. ipyvolume 3d plotting for Python in the Jupyter notebook based on IPython widgets using WebGL 2. bokeh Interactive Data Visualization in the browser, from Python Awesome dataviz JavaScript tools Charting libraries Charting libraries for graphs Maps d3 React Misc Android tools C++ tools Excel tools Golang tools iOS tools Python tools R tools Ruby tools Markup-based tools Other tools Resources Books Podcasts Twitter accounts Websites Contributing License JavaScript tools]]></description>
</item>
<item>
  <title>PygameRecord</title>
  <link>https://liudongdong1.github.io/pygamerecord/</link>
  <pubDate>Thu, 30 Jul 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pygamerecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/04/04/14/12/monitor-1307227__480.jpg" referrerpolicy="no-referrer">
      </div>pygame 是跨平台 Python 模块，专为电子游戏设计，包含图像、声音。创建在 SDL(Simple Direct Media Layer) 基础上，允许实时电子游戏研发而无需被低级语言、如 C 语言或是更低级的汇编语言]]></description>
</item>
<item>
  <title>Wandb_intro</title>
  <link>https://liudongdong1.github.io/wandb_intro/</link>
  <pubDate>Sun, 13 Sep 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wandb_intro/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://images.unsplash.com/photo-1625111970819-5f32ac1885c3?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDN8NnNNVmpUTFNrZVF8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" referrerpolicy="no-referrer">
      </div>Use W&amp;B&rsquo;s lightweight, interoperable tools to quickly track experiments, version and iterate on datasets, evaluate model performance, reproduce models, visualize results and spot regressions, and share findings with colleagues. 0. Command setup wandb #pip install wandb #wandb login start a new run import wandb wandb.init(project=&#34;my-test-project&#34;) Track metrics wandb.log({&#39;accuracy&#39;: train_acc, &#39;loss&#39;: train_loss}) track hypermeters wandb.config.dropout = 0.2 1. experiment tracking wandb.init(): Initialize a new run at the top of your script.]]></description>
</item>
<item>
  <title>pyQt</title>
  <link>https://liudongdong1.github.io/pyqt/</link>
  <pubDate>Fri, 22 Jan 2021 23:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pyqt/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20210201072032331.png" referrerpolicy="no-referrer">
      </div>1. 安装 pip install PyQt5 pip install PyQt5-tools #安装测试 import sys from PyQt5 import QtWidgets, QtCore app = QtWidgets.QApplication(sys.argv) widget = QtWidgets.QWidget() widget.resize(400, 400) widget.setWindowTitle(&#39;Hello World&#39;) widget.show() 2. 界面设计 使用qt designer 或者使用vscode集成的qt designer 进行ui控件等布局，正对]]></description>
</item>
<item>
  <title>DashBoard</title>
  <link>https://liudongdong1.github.io/dashboard/</link>
  <pubDate>Sun, 24 Jan 2021 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dashboard/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501131847.png" referrerpolicy="no-referrer">
      </div>HTML 几种dashboard 页面记录： https://github1s.com/h2oai/wave https://github.com/CreativeIT/material-angular-dashboard https://github.com/akveo/ngx-admin flask+json: https://github.com/christabor/flask_jsondash]]></description>
</item>
<item>
  <title>javaFx</title>
  <link>https://liudongdong1.github.io/javafx/</link>
  <pubDate>Wed, 24 Mar 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javafx/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110109.png" referrerpolicy="no-referrer">
      </div>JavaFX是用于构建富Internet应用程序的Java库。 使用此库编写的应用程序可以跨多个平台一致地运行。 使用JavaFX开发的应用程序]]></description>
</item>
<item>
  <title>confusionmatrix</title>
  <link>https://liudongdong1.github.io/confusionmatrix/</link>
  <pubDate>Sun, 13 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/confusionmatrix/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/RP9VPMSKFG.jpg" referrerpolicy="no-referrer">
      </div>clc; clear; close all; classname = {&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;,&#39;g&#39;,&#39;h&#39;,&#39;i&#39;,&#39;j&#39;,&#39;k&#39;,&#39;l&#39;,&#39;m&#39;,&#39;n&#39;,&#39;o&#39;,&#39;p&#39;,&#39;q&#39;,&#39;r&#39;,&#39;s&#39;,&#39;t&#39;,&#39;u&#39;,&#39;v&#39;,&#39;w&#39;,&#39;x&#39;,&#39;y&#39;,&#39;z&#39;,&#39;\heartsuit&#39;,&#39;\Delta&#39;,&#39;&#39;}; num_class=29; %统计矩阵，每一行对应一个label， 每一列代表预测值 fuse_matrix=[ ]; fuse_matrix=fuse_matrix/60; imagesc(fuse_matrix) colormap(parula); colorbar; % % textStrings = num2str(fuse_matrix(:),&#39;%0.2f&#39;); % textStrings = strtrim(cellstr(textStrings)); % % for i = 1:length(textStrings) % if isequal(textStrings(i),{&#39;0.00&#39;}) % textStrings(i) = {&#39;&#39;}; % end % end % % [x,y]]]></description>
</item>
<item>
  <title>FRFNTPTN</title>
  <link>https://liudongdong1.github.io/frfntptn/</link>
  <pubDate>Mon, 14 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/frfntptn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/UELPTNOKP4.jpg" referrerpolicy="no-referrer">
      </div>0. python统计函数 import numpy as np layerData = np.loadtxt(open(&#39;./data/layer_test_acc.csv&#39;, &#34;r&#34;), delimiter=&#34;,&#34;, skiprows=1,dtype=str) import seaborn as sns from sklearn.metrics import confusion_matrix import matplotlib.pyplot as plt sns.set() from sklearn.metrics import precision_score from sklearn.metrics import recall_score print(len(ground),len(predict)) C2= confusion_matrix(ground, predict, labels=[0,1]) #print(ground) #print(C2) #https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html result=C2.ravel() print(C2.ravel(),C2.ravel()/len(ground)) print(&#34;speed:{}- layer:{}- distance:{} -slop:{} -accuracy:{} -TN:{} -FP:{} -FN:{} -TP:{} -Pr:{} -Recal:{}&#34;.format(0.15,2,0.3,0,count/len(ground),result[0],result[1],result[2],result[3],precision_score(ground,predict),recall_score(ground,predict))) sns.heatmap(C2,annot=True) # f, (ax1,ax2) = plt.subplots(figsize =]]></description>
</item>
<item>
  <title>CRNN&#43;CTC OCR Relative</title>
  <link>https://liudongdong1.github.io/crnn-ctc-ocr-relative/</link>
  <pubDate>Sat, 11 Jul 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/crnn-ctc-ocr-relative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/59.jpeg" referrerpolicy="no-referrer">
      </div>从自然场景图片中进行文字识别，需要包括2个步骤：文字检测：解决的问题是哪里有文字，文字的范围有多少;文字识别：对定位好的文字区域进行识别，主]]></description>
</item>
<item>
  <title>CTC_Introduce</title>
  <link>https://liudongdong1.github.io/ctc_introduce/</link>
  <pubDate>Sun, 12 Jul 2020 12:59:57 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/ctc_introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>Connectionist Temporal Classification, an algorithm used to train deep neural networks in speech recognition, handwriting recognition and other sequence problems. 1. Problem don&rsquo;t know the characters in the transcript align to the audio when having a dataset of audio clips and corresponding transcripts. people&rsquo;s rates of speech vary. hand-align takes lots of time. Speech recognition, handwriting recognition from images, sequences of pen strokes, action labeling in videos. 2. Question Define]]></description>
</item>
<item>
  <title>Video_Undertand</title>
  <link>https://liudongdong1.github.io/video_understand/</link>
  <pubDate>Sat, 06 Jun 2020 21:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/video_understand/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/voice-recognition-speech-detect-deep-260nw-694633963.webp" referrerpolicy="no-referrer">
      </div>安防监控领域，包括人脸识别、行为识别、运动跟踪、人群分析等等，利用卡口精准位置布控视频监测，实现了监控区域内异常的自动识别，例如动态视频中的]]></description>
</item>
<item>
  <title>GRU_LSTM</title>
  <link>https://liudongdong1.github.io/gru_lstm/</link>
  <pubDate>Wed, 15 Jul 2020 09:47:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gru_lstm/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/sheep-4772994__340.webp" referrerpolicy="no-referrer">
      </div>0. RNN .2. conditional RNN $$ h_t=f(x_t,h_{t-1})\ h_t:=tanh(W_{xh}x_t+W_{hh}h_{t-1}) $$ 计算目标：反向传播时，损失函数$l$ 对$t$ 时刻隐含状态向量$h_t$的偏导。 1. GRU GRU（Gate Recurrent Unit）是循环神经网]]></description>
</item>
<item>
  <title>Transformer_Introduce</title>
  <link>https://liudongdong1.github.io/transformer_introduce/</link>
  <pubDate>Mon, 13 Jul 2020 09:47:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/transformer_introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200715201109572.png" referrerpolicy="no-referrer">
      </div>The Transformer starts by generating initial representations, or embeddings, for each word. These are represented by the unfilled circles. Then, using self-attention, it aggregates information from all of the other words, generating a new representation per word informed by the entire context, represented by the filled balls. This step is then repeated multiple times in parallel for all words, successively generating new representations. 代码讲解地址：]]></description>
</item>
<item>
  <title>GCNDemo</title>
  <link>https://liudongdong1.github.io/gcndemo/</link>
  <pubDate>Sat, 10 Oct 2020 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gcndemo/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/05/26/21/21/blueberries-3432295__340.jpg" referrerpolicy="no-referrer">
      </div>utils：定义了加载数据等工具性的函数 layers：定义了模块如何计算卷积 models：定义了模型train train：包含了模型训练信息]]></description>
</item>
<item>
  <title>GraphPaper</title>
  <link>https://liudongdong1.github.io/graphpaper/</link>
  <pubDate>Tue, 06 Apr 2021 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/graphpaper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/15/03/35/chrysanthemum-6337374__340.jpg" referrerpolicy="no-referrer">
      </div>1. DDGK Al-Rfou R, Perozzi B, Zelle D. Ddgk: Learning graph representations for deep divergence graph kernels[C]//The World Wide Web Conference. 2019: 37-48. end-to-end supervised graph classification: learn a intermediate representation of an entire graph as precondition in order to solve the classification task; graph representation learning: feature engineering: graph&rsquo;s clustering coefficient, its motif distribution,its spectral decomposition , limited to composing only known graph encode algorithmic heuristics from graph isomorphism]]></description>
</item>
<item>
  <title>PytorchGNN</title>
  <link>https://liudongdong1.github.io/pytorchgnn/</link>
  <pubDate>Mon, 14 Jun 2021 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorchgnn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/19/14/31/dandelion-6266230__340.jpg" referrerpolicy="no-referrer">
      </div>论文对GNN模型分类如下： 图卷积网络(Graph convolutional networks)和图注意力网络(graph attention networks)，因为涉及到传播步骤(pr]]></description>
</item>
<item>
  <title>Pytorch3D</title>
  <link>https://liudongdong1.github.io/pytorch3d/</link>
  <pubDate>Mon, 14 Jun 2021 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch3d/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/19/04/49/kid-6106557__340.jpg" referrerpolicy="no-referrer">
      </div>Chaton, Thomas, et al. &ldquo;Torch-Points3D: A Modular Multi-Task Frameworkfor Reproducible Deep Learning on 3D Point Clouds.&rdquo; arXiv preprint arXiv:2010.04642 (2020). [pdf] [code]]]></description>
</item>
<item>
  <title>Deformable_conv</title>
  <link>https://liudongdong1.github.io/deformable_conv/</link>
  <pubDate>Sat, 06 Jun 2020 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/deformable_conv/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/autumn-mountain_A5P5QKXH1B.jpg" referrerpolicy="no-referrer">
      </div>Dai J, Qi H, Xiong Y, et al. Deformable convolutional networks[C]//Proceedings of the IEEE international conference on computer vision. 2017: 764-773. [code 3.6k] Paper: Deformable Conv Summary introduce two new modules to enhance the transformation modeling capability of CNNS, deformable convolution and deformable RoI pooling, based on the idea of augmenting the spatial and learning the offsets from the target tasks without supervision. Research Objective Application Area: Purpose: Proble Statement]]></description>
</item>
<item>
  <title>CNN Model Record</title>
  <link>https://liudongdong1.github.io/cnn-model-record/</link>
  <pubDate>Sat, 06 Jun 2020 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cnn-model-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201010112945600.png" referrerpolicy="no-referrer">
      </div>可视化计算网页：https://ezyang.github.io/convolution-visualizer/index.html 1. 一维卷]]></description>
</item>
<item>
  <title>Delegation</title>
  <link>https://liudongdong1.github.io/delegationmode/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/delegationmode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/UJVB2QEHNH.jpg" referrerpolicy="no-referrer">
      </div>委派模式(Delegate Pattern ) 又叫委托模式， 是一种面向对象的设计模式， 允许对象组合实现与 继承相同的代码重用。它的基本作用就是负责任务的调用和]]></description>
</item>
<item>
  <title>DecoratorMode</title>
  <link>https://liudongdong1.github.io/decoratormode/</link>
  <pubDate>Mon, 15 Mar 2021 09:59:57 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/decoratormode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/NEYZ549NTT.jpg" referrerpolicy="no-referrer">
      </div>装饰者模式(Decorator Pattern)：动态地给一个对象增加一些额外的职责，增加对象功能来说，装饰模式比生成子类实现更为灵活。装饰模]]></description>
</item>
<item>
  <title>OpenNREPaper</title>
  <link>https://liudongdong1.github.io/opennrepaper/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opennrepaper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113211.png" referrerpolicy="no-referrer">
      </div> Han, X., Gao, T., Yao, Y., Ye, D., Liu, Z., &amp; Sun, M. (2019). OpenNRE: An open and extensible toolkit for neural relation extraction. arXiv preprint arXiv:1909.13078.
Paper: OpenNRE Summary train custom models to extract structured relational facts from the plain text, and supports quick model validation for researchers. source code: http://github.com/thunlp/OpenNRE, supports Entity-Oriented Application, Setence-Level Relation Extraction, Bag-Level Relation Extraction, Document-Level Relation Extraction, Few-Shot Relation Extraction, Architecture of OpenNRE ]]></description>
</item>
<item>
  <title>StructLight</title>
  <link>https://liudongdong1.github.io/structlight/</link>
  <pubDate>Thu, 25 Mar 2021 08:36:47 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/structlight/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132638.png" referrerpolicy="no-referrer">
      </div>结构光（structured light）是计算机立体视觉技术中的一个重要的分支。它的主要原理是通过一个投影器投射出一个特定的图案，然后在摄像]]></description>
</item>
<item>
  <title>Multi-fusion</title>
  <link>https://liudongdong1.github.io/multi-fusion/</link>
  <pubDate>Mon, 21 Dec 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/multi-fusion/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110809.png" referrerpolicy="no-referrer">
      </div>1. 多模态融合方法 1.1. 基于简单操作融合 拼接和加权求和。这样的简单操作使得参数之间的联系几乎没有，但是后续的网络层会自动对这种操作进行自适应。 Co]]></description>
</item>
<item>
  <title>ShapeMatch</title>
  <link>https://liudongdong1.github.io/shapematch/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shapematch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/landscape-mountains-nature-lake-1.jpg" referrerpolicy="no-referrer">
      </div>1. Image Moments Calculation 1.1. raw moments 1.2. central moments the central moments are translation invariant, no matter where the blob is in the image, if the shape is the same, the moment will be the same. 1.3. Normalized central moments both translation and scale invariant. 2. Hu Moments Hu Moments are a set of 7 numbers calculated using central moments that are invariant to image transformations, the first 6]]></description>
</item>
<item>
  <title>DimsTransfor</title>
  <link>https://liudongdong1.github.io/dimstransfor/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dimstransfor/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/71.jpeg" referrerpolicy="no-referrer">
      </div>1. 一维时间序列转化二维图片 1.1. Gramian Angular Field (GAF) 使用一个限定在 [-1,1] 的最小-最大定标器（Min-Max scaler）来把时间序列缩放到 [-1,1] 里，这样做的原因是为]]></description>
</item>
<item>
  <title>Wavelet</title>
  <link>https://liudongdong1.github.io/wavelet/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wavelet/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210521110253.png" referrerpolicy="no-referrer">
      </div>Fourier Transform is the dot product between real signal and various frequency of sine wave. We get a stats of frequency but we don&rsquo;t know when that “frequency” happen, we lost the time resolution of the real signal. To get both frequency and time resolution we can be dividing the original signal into several parts and apply Fourier Transform to]]></description>
</item>
<item>
  <title>SpringMyBatis</title>
  <link>https://liudongdong1.github.io/springmybatis/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springmybatis/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/11/27/11/55/cobweb-5781665__340.jpg" referrerpolicy="no-referrer">
      </div>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。My]]></description>
</item>
<item>
  <title>Android_存储</title>
  <link>https://liudongdong1.github.io/android_%E5%AD%98%E5%82%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E5%AD%98%E5%82%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>SQLite是Android内置的一个小型、关系型、属于文本型的数据库。 Android提供了对 SQLite数据库的完全支持，应用程序中的任何]]></description>
</item>
<item>
  <title>U2Net_introduce</title>
  <link>https://liudongdong1.github.io/u2net_introduce/</link>
  <pubDate>Tue, 13 Oct 2020 09:47:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/u2net_introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200715201109572.png" referrerpolicy="no-referrer">
      </div>level: author: date: keyword: Paper: U2Net Summary design a two-level nested U-structure for salient object detection; capture more contextual information from different scales owing to the mixture of receptive fields of different sizes in ReSidual U-Blocks; increases the depth of the whole architecture without significantly increasing the computational cost owing to the the pooling operations. on the bottom level, we design a novel ReSidual U-block to extract intra-stage multi-scale features]]></description>
</item>
<item>
  <title>RedisRelative</title>
  <link>https://liudongdong1.github.io/redisrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/redisrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/macro-flower_FKID7EXJPL.jpg" referrerpolicy="no-referrer">
      </div>Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表]]></description>
</item>
<item>
  <title>NLP_pyspark</title>
  <link>https://liudongdong1.github.io/nlp_pyspark/</link>
  <pubDate>Mon, 13 Jul 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/nlp_pyspark/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/traffic-lights-in-city-at-night.jpg" referrerpolicy="no-referrer">
      </div>1. Concept 1.1. Estimators The Estimators have a method called fit() which secures and trains a piece of data to such application. 1.2. Transformers The Transformer is generally the result of a fitting process and applies changes to the the target dataset. 1.3. Pipelines Pipelines are a mechanism for combining multiple estimators and transformers in a single workflow. They allow multiple chained transformations along a Machine Learning task. spark =]]></description>
</item>
<item>
  <title>KnowledgeGraph</title>
  <link>https://liudongdong1.github.io/knowledgegraph/</link>
  <pubDate>Wed, 13 May 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/knowledgegraph/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/06/21/07/33/background-2426328__340.jpg" referrerpolicy="no-referrer">
      </div> awesome-knowledge-graph ]]></description>
</item>
<item>
  <title>IO多路复用</title>
  <link>https://liudongdong1.github.io/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link>
  <pubDate>Wed, 12 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/WHBQ7SQ5ZV.jpg" referrerpolicy="no-referrer">
      </div>From：https://www.pdai.tech/md/java/io/java-io-nio-select-epoll.html 多路复]]></description>
</item>
<item>
  <title>Mouse Introduce</title>
  <link>https://liudongdong1.github.io/mouse-introduce/</link>
  <pubDate>Wed, 20 May 2020 23:57:33 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mouse-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/workplace-2341642__340.webp" referrerpolicy="no-referrer">
      </div>​ 一直以来，鼠标作为我们最频繁接触的电脑输入设备之一，似乎并没有受到人们过多的关注。应用的进步让人们对鼠标开始提出更多的要求，包括舒适的操作]]></description>
</item>
<item>
  <title>IndoorLocationSummary</title>
  <link>https://liudongdong1.github.io/indoorlocationsummary/</link>
  <pubDate>Thu, 21 May 2020 12:13:25 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/indoorlocationsummary/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/Location.png" referrerpolicy="no-referrer">
      </div>​ 随着更多新型移动设备如手机、平板电脑、可穿戴设备等，物联网设备的性能飞速增长和基于位置感知应用的激增，位置感知发挥了越来越重要的作用。在室]]></description>
</item>
<item>
  <title>DTW&amp;Sequence Analysis</title>
  <link>https://liudongdong1.github.io/dtw-sequence-analysis/</link>
  <pubDate>Wed, 27 May 2020 09:35:14 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dtw-sequence-analysis/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/source-2147529__340.jpg" referrerpolicy="no-referrer">
      </div>level: SIGKDD ACM author:Thanawin Rakthanmanon date: August 12–16, 2012 keyword: Sequence data matching Paper: DTW Research Objective Application Area: time series motif discovery [25] [26], anomaly detection [35] [31], time series summarization, shapelet extraction [39], clustering, and classification [6], gestures/brainwaves/musical patterns/anomalous heartbeats in real-time Purpose: fast sequential search instead of approximately search Proble Statement Time Series Subsequences must be Normalized ，or tiny changes]]></description>
</item>
<item>
  <title>HashSet</title>
  <link>https://liudongdong1.github.io/hashset/</link>
  <pubDate>Tue, 20 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/hashset/</guid>
  <description><![CDATA[From: https://juejin.cn/post/6870649688388730893 集群中普通的Hash算法 - 前世 这里先使用最简单的思路去看待集群中的路由访问问题 首先我们这里有三个客户端，以及有三个服务器。客户端首先访问]]></description>
</item>
<item>
  <title>SingletonMode</title>
  <link>https://liudongdong1.github.io/singletonmode/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/singletonmode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/19/04/49/kid-6106557__340.jpg" referrerpolicy="no-referrer">
      </div>单例模式也就是保证一个类只有一个实例的一种实现方法罢了(设计模式其实就是帮助我们解决实际开发过程中的方法, 该方法是为了降低对象之间的耦合度,]]></description>
</item>
<item>
  <title>DTWClassification</title>
  <link>https://liudongdong1.github.io/dtwclassification/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dtwclassification/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/XKJHPNYZOF.jpg" referrerpolicy="no-referrer">
      </div># !pip3.9 install dtaidistance # !pip3.9 install numpy # !pip3.9 install matplotlib from dtaidistance import dtw from dtaidistance import dtw_visualisation as dtwvis from random import sample import numpy as np import matplotlib.pyplot as plt x = np.arange(0, 20, .5) s1 = np.sin(x) s2 = np.sin(x - 1) path = dtw.warping_path(s1, s2) dtwvis.plot_warping(s1, s2, path) distance = dtw.distance(s1, s2) d, paths = dtw.warping_paths(s1, s2, window=20) best_path = dtw.best_path(paths) dtwvis.plot_warpingpaths(s1, s2, paths,]]></description>
</item>
<item>
  <title>ReduceDimension</title>
  <link>https://liudongdong1.github.io/reducedimension/</link>
  <pubDate>Tue, 23 Mar 2021 16:22:21 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/reducedimension/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111547.png" referrerpolicy="no-referrer">
      </div>1. 降维算法总结 降维算法 资料链接 代码 展示 PCA 资料链接１ 资料链接２ 资料链接３ PCA KPCA 资料链接1 资料链接2 资料链接3 KPCA LDA 资料链接１ 资料链接2 LDA MDS 资料链接]]></description>
</item>
<item>
  <title>Sign_Language_Introduce</title>
  <link>https://liudongdong1.github.io/sign-language-introduce/</link>
  <pubDate>Mon, 13 Jul 2020 09:47:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sign-language-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/clouds-in-sky-over-fields.jpg" referrerpolicy="no-referrer">
      </div>手语是聋哑人士的主要沟通工具，它是利用手部和身体的动作来传达意义。虽然手语帮助它的使用者之间互相沟通，但聋哑人士与一般人的沟通却十分困难，这]]></description>
</item>
<item>
  <title>PillowRecord</title>
  <link>https://liudongdong1.github.io/pillowrecord/</link>
  <pubDate>Mon, 26 Apr 2021 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/pillowrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210517220308.png" referrerpolicy="no-referrer">
      </div>extensive file format support, an efficient internal representation, and fairly powerful image processing capabilities. The core image library is designed for fast access to data stored in a few basic pixel formats. Image Arhives, image Dsplay, image processing
0. Concept .1. Bands The Python Imaging Library allows you to store several bands in a single image, provided they all have the same dimensions and depth. For example, a PNG image might have ‘R’, ‘G’, ‘B’, and ‘A’ bands for the red, green, blue, and alpha transparency values.]]></description>
</item>
<item>
  <title>robot_grasp</title>
  <link>https://liudongdong1.github.io/robot_grasp/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/robot_grasp/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/autumn-woods_UKG6IF21OZ.jpg" referrerpolicy="no-referrer">
      </div>2D planar grasp means that the target object lies on a plane workspace and the grasp is constrained from one direction. The essential information is simplified from 6D into 3D, which are the 2D in-plane positions and 1D rotation angle. There exist methods of evaluating grasp contact points and methods of evaluating grasp oriented rectangles. 6DoF grasp means that the gripper can grasp the object from various angles in the]]></description>
</item>
<item>
  <title>tensorboard</title>
  <link>https://liudongdong1.github.io/tensorboard/</link>
  <pubDate>Sun, 26 Apr 2020 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/tensorboard/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210512141325.png" referrerpolicy="no-referrer">
      </div>1. 仪表板 Scalars 显示损失和指标在每个时期如何变化。 您还可以使用它来跟踪训练速度，学习率和其他标量值。 Graphs 可帮助您可视化模型。 在这种情况下，将显示层的]]></description>
</item>
<item>
  <title>LeapmotionApp</title>
  <link>https://liudongdong1.github.io/leapmotionapp/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/leapmotionapp/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133311.png" referrerpolicy="no-referrer">
      </div>1. air mouse https://github.com/search?q=leap+motion+air+mouse&type=Repositories
2. Slides presentation https://github.com/search?q=leap+motion++Slides+presentation&type=Repositories
3. Gesture https://github.com/search?p=2&q=leap+motion+gesture&type=Repositories
4. Drone https://github.com/search?q=leap+motion+Drone&type=Repositories
5. Robot https://github.com/search?q=leap+motion+robot&type=Repositories
6. Game https://github.com/search?q=leap+motion+game&type=Repositories
7. Typing https://github.com/search?q=leap+motion+typing&type=Repositories
8. Instrument https://github.com/search?q=leap+motion+instrument&type=Repositories
9. Draw https://github.com/search?q=leap+motion+draw&type=Repositories
10. Model https://github.com/search?p=2&q=leap+motion+model&type=Repositories
11. Browser https://github.com/search?q=leap+motion+browser&type=Repositories
12. Music https://github.com/search?q=leap+motion+music&type=Repositories
13. ASL_leap-Motion-Device ]]></description>
</item>
<item>
  <title>QA_relative</title>
  <link>https://liudongdong1.github.io/qa_relative/</link>
  <pubDate>Sun, 13 Dec 2020 09:14:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/qa_relative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113233.png" referrerpolicy="no-referrer">
      </div>]]></description>
</item>
<item>
  <title>Rec_paper</title>
  <link>https://liudongdong1.github.io/rec_paper/</link>
  <pubDate>Sat, 12 Dec 2020 18:14:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rec_paper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201212194845004.png" referrerpolicy="no-referrer">
      </div>Liu, Hongtao, et al. &ldquo;NRPA: Neural Recommendation with Personalized Attention.&rdquo; Proceedings of the 42nd International ACM SIGIR Conference on Research and Development in Information Retrieval. 2019. Paper: NRPA Summary propose a neural recommendation approach with personalized attention to learn personalized representations of users and items from reviews, to select different important words and reviews for different users/items. review encoder to learn representations of reviews from words and user/item encoder to]]></description>
</item>
<item>
  <title>IMU Trajectory</title>
  <link>https://liudongdong1.github.io/imu-trajectory/</link>
  <pubDate>Thu, 25 Jun 2020 10:09:10 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/imu-trajectory/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/armature-4103639__340.webp" referrerpolicy="no-referrer">
      </div>Advantages of IMU : (1) energy-efficient, capable of running 24h a day without draining a battery; (2) works any where even inside a bag or a pocket(get device acc); Disadvantage: small sensor errors or biases explode quickly in the double integration process. In Augmented Reality applications(eg., apple ARKit, Google ARCore, Microsoft HoloLens), IMU augments Slam by resolving scale ambiguities and providing motion cues in the absence of visual features. UAVs,]]></description>
</item>
<item>
  <title>Step Counter</title>
  <link>https://liudongdong1.github.io/step-counter/</link>
  <pubDate>Thu, 21 May 2020 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/step-counter/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/display-3123146__340.jpg" referrerpolicy="no-referrer">
      </div>随着人们生活水平的提高,生活方式和生活环境的改变,人们对健康体育锻炼越来越重视。大量研究表明, 运动能够减少慢性疾病的发生。快速准确地监测人体]]></description>
</item>
<item>
  <title>Standfordnlp</title>
  <link>https://liudongdong1.github.io/stanfordnlp_record/</link>
  <pubDate>Sat, 15 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stanfordnlp_record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/82.jpeg" referrerpolicy="no-referrer">
      </div>NLTK 是一款著名的 Python 自然语言处理(Natural Language Processing, NLP)工具包，在其收集的大量公开数据集、模型上提供了全面、易用的接口，涵盖了分词、词性标注]]></description>
</item>
<item>
  <title>WpfIntroduce</title>
  <link>https://liudongdong1.github.io/wpfintroduce/</link>
  <pubDate>Mon, 23 Mar 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wpfintroduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132553.png" referrerpolicy="no-referrer">
      </div>1. ModernWpf 该项目提供了各种Wpf控件，可以支持UI快速开发； 2. CxFlatUI winform控件, AlertBox, Button, CheckBox, DatePicker, GroupBox, NumericUpDown, PictureBox, ProgressBar, RadioButton, RoundButton, RoundProgressBar, SimpleButton, SliderBar, StatusBar, Switch, TabControl, Toggle 3. handUI UI elements and prototyping tools for hands, contains examples of UI design]]></description>
</item>
<item>
  <title>WebSiteRecord</title>
  <link>https://liudongdong1.github.io/websiterecord/</link>
  <pubDate>Wed, 31 Mar 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/websiterecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501112815.png" referrerpolicy="no-referrer">
      </div>1. 公司介绍网页 https://e.huawei.com/cn/solutions/industries/transportation]]></description>
</item>
<item>
  <title>nodejs_versionInstall</title>
  <link>https://liudongdong1.github.io/nodejs_versioninstall/</link>
  <pubDate>Mon, 15 Nov 2021 12:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/nodejs_versioninstall/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/07/25/06/51/thuja-4361821__340.jpg" referrerpolicy="no-referrer">
      </div>Node.js是基于Chrome JavaScript运行时建立的一个平台，实际上它是对Google Chrome V8引擎进行了封装，它主要用于创建快速的]]></description>
</item>
<item>
  <title>OCRRelative</title>
  <link>https://liudongdong1.github.io/ocrrelative/</link>
  <pubDate>Sun, 30 Aug 2020 10:30:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ocrrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/33.jpeg" referrerpolicy="no-referrer">
      </div>Ray Smith, Daria Antonova, and Dar-Shyang Lee. 2009. Adapting the Tesseract open source OCR engine for multilingual OCR. In Proceedings of the International Workshop on Multilingual OCR (MOCR &lsquo;09). Association for Computing Machinery, New York, NY, USA, Article 1, 1–8. DOI:https://doi.org/10.1145/1577802.1577804 Paper: Tesseract Open Source OCR Engine Summary 遗留问题：对于识别低的词怎么合理去掉的]]></description>
</item>
<item>
  <title>PointCloud Record</title>
  <link>https://liudongdong1.github.io/pointcloud-record/</link>
  <pubDate>Sat, 06 Jun 2020 09:33:10 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pointcloud-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/nature-3082832__340.webp" referrerpolicy="no-referrer">
      </div>3D数据通常可以用不同的格式表示，包括深度图像，点云，网格和体积网格。 作为一种常用格式，点云表示将原始几何信息保留在3D空间中，而不会进行任]]></description>
</item>
<item>
  <title>zoomFFT</title>
  <link>https://liudongdong1.github.io/zoomfft/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/zoomfft/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/butterfly-insect_QHJQCSOGES.jpg" referrerpolicy="no-referrer">
      </div>移频 （将选带的中心频率移动到零频） 数字低通滤波器 （防止频率混叠） 重新采样 （将采样的数据再次间隔采样，间隔的数据取决于分析的带宽，就是放大倍数]]></description>
</item>
<item>
  <title>RFID ActionRecognition</title>
  <link>https://liudongdong1.github.io/rfid-actionrecognition/</link>
  <pubDate>Tue, 16 Jun 2020 17:26:34 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rfid-actionrecognition/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200428195606397.png" referrerpolicy="no-referrer">
      </div>level: ACM数据库 Embedded Networked Sensor Systems CCF_B author: Yinggang Yu ,Dong Wang, Run Zhao, Qian Zhang ShangHaiJiaoTongUniversity date: 2019 .11 keyword: RFID,wireless sensing ,ongoing gesture recognition,adversarial learning Paper: RFID ongoing Gesture Summary 通过一个阅读器多个标签进行实验，使用CNN来分别提取相位和RSSI]]></description>
</item>
<item>
  <title>RelativeSkeleton</title>
  <link>https://liudongdong1.github.io/relativeskeleton/</link>
  <pubDate>Sat, 15 Feb 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/relativeskeleton/</guid>
  <description><![CDATA[基于Hadoop 58同城离线计算平台 **数据接入：**文本的收集，我们采用 flume 接入，然后用 kafka 做消息缓冲，我们基于 kafka client 打造了一个实时分发平台，可]]></description>
</item>
<item>
  <title>CloudComputing_Relative</title>
  <link>https://liudongdong1.github.io/cloudcomputing_relative/</link>
  <pubDate>Sat, 15 Feb 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cloudcomputing_relative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/16.jpeg" referrerpolicy="no-referrer">
      </div>Wang, F., Zhang, C., Liu, J., Zhu, Y., Pang, H., &amp; Sun, L. (2019, April). Intelligent edge-assisted crowdcast with deep reinforcement learning for personalized QoE. In IEEE INFOCOM 2019-IEEE Conference on Computer Communications (pp. 910-918). IEEE. Paper: Edge-Assisted Crowdcast Phenomenon&amp;Challenge: crowdcast is featured with tremendous video contents at the broadcaster side, highly diverse viewer side content watching environments/preferences as well as viewers’ personalized]]></description>
</item>
<item>
  <title>OpenFeign</title>
  <link>https://liudongdong1.github.io/openfeign/</link>
  <pubDate>Tue, 22 Jun 2021 09:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/openfeign/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/25/13/47/flowers-7091131__340.jpg" referrerpolicy="no-referrer">
      </div>Feign is a Java to HTTP client binder inspired by Retrofit, JAXRS-2.0, and WebSocket. Feign&rsquo;s first goal was reducing the complexity of binding Denominator uniformly to HTTP APIs regardless of ReSTfulness. 使用 OpenFeign 的 Spring 应用架构一般分为三个部分，分别为服务注中心、服务提供者和服务消费者。]]></description>
</item>
<item>
  <title>Compreface</title>
  <link>https://liudongdong1.github.io/compreface/</link>
  <pubDate>Wed, 22 Sep 2021 09:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/compreface/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/CJCMX14Z4F.jpg" referrerpolicy="no-referrer">
      </div>1. usage Step 1. Install and run CompreFace using our Getting Started guide Step 2. sign up for the system and log in. Step 3. Create an application (left section) using the &ldquo;Create&rdquo; link at the bottom of the page. An application is where you can create and manage your Face Collections. Step 4. Enter your application by clicking on its name. Here you will have two options: you can]]></description>
</item>
<item>
  <title>VideoRelative</title>
  <link>https://liudongdong1.github.io/videorelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/videorelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110019.png" referrerpolicy="no-referrer">
      </div>1. Jave2 The JAVE2 (Java Audio Video Encoder) library is Java wrapper on the ffmpeg project. Developers can take take advantage of JAVE2 to transcode audio and video files from a format to another. In example you can transcode an AVI file to a MPEG one, you can change a DivX video stream into a (youtube like) Flash FLV one, you can convert a WAV audio file to a MP3]]></description>
</item>
<item>
  <title>LaneDetection</title>
  <link>https://liudongdong1.github.io/lanedetection/</link>
  <pubDate>Sat, 18 Jul 2020 10:30:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/lanedetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/33.jpeg" referrerpolicy="no-referrer">
      </div>1. Lanenet-Lane-Detection 检测车道线 检测其他物体：车辆、人、环境中的动物 跟踪检测到的对象 预测他们可能的运动 检测其他车辆是否在车道线内，并量度与他们的距离 检测邻近车]]></description>
</item>
<item>
  <title>AdaptionMode</title>
  <link>https://liudongdong1.github.io/adaptionmode/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/adaptionmode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/laptop-keyboard_NSTHHXBQTL.jpg" referrerpolicy="no-referrer">
      </div>将一个类的接口转换成客户期望的另一个接口，适配器让原本接口不兼容的类可以相互合作。这个定义还好，说适配器的功能就是把一个接口转成另一个接口。]]></description>
</item>
<item>
  <title>CommandMode</title>
  <link>https://liudongdong1.github.io/commandmode/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/commandmode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/FGW3XGA04R.jpg" referrerpolicy="no-referrer">
      </div>将一个请求封装成一个对象，从而使你可用不同的请求把客户端参数化，对请求排队或者记录请求日志，以及支持可撤销和恢复操作。 系统需要将请求调用者和]]></description>
</item>
<item>
  <title>CompreFaceLearning</title>
  <link>https://liudongdong1.github.io/comprefacelearning/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/comprefacelearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/07/09/21/03/integration-3527268__340.jpg" referrerpolicy="no-referrer">
      </div>1. Configuration registry - this is the docker hub registry. For release and pre-build images, it should be set to exadel/ value postgres_password - password for Postgres database. It should be changed for production systems from the default value. postgres_domain - the domain where Postgres database is run postgres_port - Postgres database port enable_email_server - if true, it will enable email verification for users. You should set email_host, email_username, and email_password variables for the correct work.]]></description>
</item>
<item>
  <title>WordEmbedding</title>
  <link>https://liudongdong1.github.io/wordembedding/</link>
  <pubDate>Tue, 20 Oct 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wordembedding/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/view-of-coffee-beans.jpg" referrerpolicy="no-referrer">
      </div>TEXT processing deals with humongous amount of text to perform different range of tasks like clustering in the g oogle search example, classification in the second and Machine Translation. How to create a representation for words that capture their meanings, semantic relationships and the different types of contexts they are used in. 作为 Embedding 层嵌入到深度模型中，实现将高维]]></description>
</item>
<item>
  <title>Hand Analyse Record</title>
  <link>https://liudongdong1.github.io/hand-analyse-record/</link>
  <pubDate>Sat, 20 Jun 2020 11:32:44 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/hand-analyse-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/dataglove.jpg" referrerpolicy="no-referrer">
      </div>level: CVPR CCF_A author: Tomas Simon Carnegie Mellon University date: 2017 keyword: hand pose Paper: OpenPose HandKeypoint Summary present an approach that uses a multi-camera system to train fine-grained detectors for keypoints. Research Objective Application Area: hand based HCI and robotics Purpose: to extract hand point coordinate from single RGB images. Proble Statement self-occlusion due to articulation, view-point, grasped object. previous work: many approaches to image-based face and body keypoint]]></description>
</item>
<item>
  <title>InstanceSegment</title>
  <link>https://liudongdong1.github.io/instancesegment/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/instancesegment/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210514221854.png" referrerpolicy="no-referrer">
      </div>present a simple, fully-convolutional model for real-time instance segmentation that faster than any previous competitive approach. generating a set of prototype masks and predicting per-instance mask coefficients. And produce instance masks by linearly combining the prototypes with the mask coefficients. prototype generation: predicts a set of k prototype masks for the entire image. taking protonet from deeper backbone features produces more robust masks, and higher resolution prototypes result in both]]></description>
</item>
<item>
  <title>DataAnalyseLogic</title>
  <link>https://liudongdong1.github.io/dataanalyselogic/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dataanalyselogic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210527102715.png" referrerpolicy="no-referrer">
      </div>1. 战略思维 数据本质的价值，究竟在哪里？从这些数据中，你和你的团队都可以学习到什么？ .1. 目标 商业数据分析的目标是利用大数据为所有职场人员做出迅捷]]></description>
</item>
<item>
  <title>正则表达式</title>
  <link>https://liudongdong1.github.io/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/watch-phone_AVXMHULWY9.jpg" referrerpolicy="no-referrer">
      </div>From: https://www.pdai.tech/md/develop/regex/dev-regex-usage.html 1. 校验数字的表达式 数字：^[0-9]*$ n位的数字：^\d{n}$ 至少n位的数字：^\d{n,}$ m-n位的数字：^\d{m,n}$ 零和]]></description>
</item>
<item>
  <title>Data Glove Record</title>
  <link>https://liudongdong1.github.io/data-glove-record/</link>
  <pubDate>Sat, 06 Jun 2020 20:40:13 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/data-glove-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/gloves-1268930__340.webp" referrerpolicy="no-referrer">
      </div>动作捕捉(Motion capture)，简称动捕(Mocap)，又称运动捕捉。是指记录并处理人或其他物体动作的技术。它广泛应用于军事，娱乐，]]></description>
</item>
<item>
  <title>DescriptionFeature</title>
  <link>https://liudongdong1.github.io/descriptionfeature/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/descriptionfeature/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210526105556.png" referrerpolicy="no-referrer">
      </div>统计学提供的是一套有关数据收集、处理、分析、解释并从数据中得出结论的方法；数据分析则是选择适当的统计方法研究数据，并从数据中提取有用信息进而]]></description>
</item>
<item>
  <title>UML各类关系介绍</title>
  <link>https://liudongdong1.github.io/uml%E5%90%84%E7%B1%BB%E5%85%B3%E7%B3%BB%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Thu, 22 Oct 2020 09:00:00 &#43;0000</pubDate>
  <author>blinkfox</author>
  <guid>https://liudongdong1.github.io/uml%E5%90%84%E7%B1%BB%E5%85%B3%E7%B3%BB%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="http://static.blinkfox.com/20181022-organ.jpg" referrerpolicy="no-referrer">
      </div>泛化 *=* 实现 *&gt;* 组合 *&gt;* 聚合 *&gt;* 关联 *&gt;* 依赖 继承关系（generalization） 继承关系用一条带空心箭头的直线表示。如下图所示（A继承自B）： 继承]]></description>
</item>
<item>
  <title>PaddleRelative</title>
  <link>https://liudongdong1.github.io/paddlerelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/paddlerelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/04/15/10/sand-6310118__340.jpg" referrerpolicy="no-referrer">
      </div>1. PaddleX ●工业领域： a. 瑕疵检测：包括3C电子，汽车制造，制药，钢铁焊接，甚至公路、铁轨的缺陷检测及维护 b. 智能抓取：自动分拣、产线上下料、钢材等重]]></description>
</item>
<item>
  <title>DataStructurepy</title>
  <link>https://liudongdong1.github.io/datastructurepy/</link>
  <pubDate>Thu, 03 Dec 2020 18:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/datastructurepy/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210413190144.png" referrerpolicy="no-referrer">
      </div>1. KeyValue dict.clear() 删除字典内所有元素 dict.copy()返回一个字典的浅复制 [dict.fromkeys(seq, val])创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对]]></description>
</item>
<item>
  <title>Tricks</title>
  <link>https://liudongdong1.github.io/tricks/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/tricks/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/04/27/13/32/birds-6211541__340.png" referrerpolicy="no-referrer">
      </div>1. 数据增强 数据增强是增加深度模型鲁棒性和泛化性能的常用手段，随机翻转、随机裁剪、添加噪声等也被引入到检测任务的训练中来，个人认为数据（监督信]]></description>
</item>
<item>
  <title>OpenSource</title>
  <link>https://liudongdong1.github.io/opensource/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opensource/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132844.png" referrerpolicy="no-referrer">
      </div>1. PySOT PySOT is a software system designed by SenseTime Video Intelligence Research team. It implements state-of-the-art single object tracking algorithms, including SiamRPN and SiamMask. It is written in Python and powered by the PyTorch deep learning framework. This project also contains a Python port of toolkit for evaluating trackers. The goal of PySOT is to provide a high-quality, high-performance codebase for visual tracking research. It is designed to be]]></description>
</item>
<item>
  <title>CompetitionRelative</title>
  <link>https://liudongdong1.github.io/competitionrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/competitionrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132914.png" referrerpolicy="no-referrer">
      </div>1. 目标检测与追踪 10亿像素的图像视频中进行目标检测与跟踪 任务一&ndash; 目标检测任务：在PANDA数据集上完成车辆检测和行人检测，其中行]]></description>
</item>
<item>
  <title>YOLO4 Object Detection</title>
  <link>https://liudongdong1.github.io/yolo4-object-detection/</link>
  <pubDate>Sun, 26 Apr 2020 18:04:14 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/yolo4-object-detection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/close-up-of-vintage-camera-on-piano-keys.jpg" referrerpolicy="no-referrer">
      </div>Yolo5 自定义数据检测教程： https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data google云盘教程： https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb#scrollTo=V0AJnSeCIHyJ 1. Darknet ​ darknet是一个较为轻型的完全基于C与CUDA的开源深度学习框架，其主要特点就是容]]></description>
</item>
<item>
  <title>TemplateMatching</title>
  <link>https://liudongdong1.github.io/templatematching/</link>
  <pubDate>Sun, 26 Apr 2020 18:04:14 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/templatematching/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/08/11/27/mushrooms-6320451__340.jpg" referrerpolicy="no-referrer">
      </div>1. 识别空的货架空间 如果使用模板匹配，轻微倾斜/移动，就很难找到这种方法。我们需要多个不同尺寸的模板来捕获这张图片中的所有空货架区域。 import cv2 import matplotlib.pyplot]]></description>
</item>
<item>
  <title>YoloRelative</title>
  <link>https://liudongdong1.github.io/yolorelative/</link>
  <pubDate>Mon, 26 Jul 2021 18:04:14 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/yolorelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/bird-egret_54R1KQELFW.jpg" referrerpolicy="no-referrer">
      </div>1 Yolox相关基础知识点 1.1 Yolox的论文及代码 Yolox论文名：《YOLOX: Exceeding YOLO Series in 2021》 Yolox论文地址：https://ar]]></description>
</item>
<item>
  <title>点云配准</title>
  <link>https://liudongdong1.github.io/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/DKJEWB6D0L.jpg" referrerpolicy="no-referrer">
      </div>点云配准是点云之间的变换估计问题，从优化的角度来看，它经历了很长的发展历史。最近，深度学习的成功极大地提高了配准的鲁棒性和效率。随着LiDA]]></description>
</item>
<item>
  <title>SlamRelative</title>
  <link>https://liudongdong1.github.io/slamrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/slamrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/69.jpeg" referrerpolicy="no-referrer">
      </div>Common functional pieces of autonomous vehicles often fall into sensing, computing, and actuation.The sensing devices or sensor include cameras, laser scanners (LiDAR), milliwave radars, and GNSS/IMU. Using sensor data , autonomous vehicles perform localization, detection, prediction, planning, and control. 1. 常用传感器 激光雷达或深度摄像头 摄像头：单目、双目、多目。 惯性]]></description>
</item>
<item>
  <title>ROS Relative Learning</title>
  <link>https://liudongdong1.github.io/locationrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/locationrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/caudata-strelitzia-bird-of-paradise-flower-1.jpg" referrerpolicy="no-referrer">
      </div>Chen, Xieyuanli, Thomas Läbe, Lorenzo Nardi, Jens Behley, and Cyrill Stachniss. &ldquo;Learning an Overlap-based Observation Model for 3D LiDAR Localization.&rdquo; Paper: Overlap-based Summary 文章使用了OverlapNet作为蒙特卡洛定位算法（MCL）的观测模型，实现了基于激光]]></description>
</item>
<item>
  <title>ROS Relative Learning</title>
  <link>https://liudongdong1.github.io/ros-relative-learning/</link>
  <pubDate>Sat, 13 Jun 2020 08:14:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ros-relative-learning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/caudata-strelitzia-bird-of-paradise-flower-1.jpg" referrerpolicy="no-referrer">
      </div>Common functional pieces of autonomous vehicles often fall into sensing, computing, and actuation.The sensing devices or sensor include cameras, laser scanners (LiDAR), milliwave radars, and GNSS/IMU. Using sensor data , autonomous vehicles perform localization, detection, prediction, planning, and control.
1. ROS OpenSource Relative keyword:
ROS, System Design, cyber-physical systems Paper: Autoware on Board Summary Autoware: a popular open-source software project that provides a complete set of self-driving modules, including localization, detection, prediction, planning, and control.]]></description>
</item>
<item>
  <title>GANPictureGen</title>
  <link>https://liudongdong1.github.io/ganpicturegen/</link>
  <pubDate>Sat, 10 Oct 2020 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ganpicturegen/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>通过简单的图片生成模型，了解GAN的工作过程 #coding=utf-8 from PIL import Image from keras.models import Sequential from keras.layers import Dense,Activation,BatchNormalization,Reshape,UpSampling2D,\ Conv2D,MaxPooling2D,Flatten import numpy as np from keras.optimizers import SGD from keras.datasets import mnist import math # 定义生成器模型 def Generator_model(): # 下面搭建生成器的架]]></description>
</item>
<item>
  <title>FlowerClassifyPytorch</title>
  <link>https://liudongdong1.github.io/flowerclassifypytorch/</link>
  <pubDate>Sat, 10 Oct 2020 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/flowerclassifypytorch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/pink-wildflower-in-meadow.jpg" referrerpolicy="no-referrer">
      </div>The images above were from the Kaggle’s dataset “Flowers Recognition” by Alexander. The title of each image consists its class name and index number in the dataset. This dataset contains 4242 images of flowers. The pictures are divided into five classes: daisy, tulip, rose, sunflower]]></description>
</item>
<item>
  <title>FlowerClassifyPytorch</title>
  <link>https://liudongdong1.github.io/compat/</link>
  <pubDate>Sat, 10 Oct 2020 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/compat/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501131810.png" referrerpolicy="no-referrer">
      </div>15000万张短袖短裤识别数据 样例数据集：摄像头采集信息**（100张），供参赛者了解赛题典型场景数据，可用于编码调试； 训练数据集：摄像头采]]></description>
</item>
<item>
  <title>CharDataSimulation</title>
  <link>https://liudongdong1.github.io/chardatasimulation/</link>
  <pubDate>Sat, 23 Jan 2021 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/chardatasimulation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501131735.png" referrerpolicy="no-referrer">
      </div>1. 图片生成 利用电脑中字体文件生成a-z 字符图片数据。 # 测试文件 from PIL import Image, ImageDraw, ImageFont, ImageFilter import random import matplotlib.pyplot as plt import numpy as np import os # 随机字母: def rndChar(): return chr(random.randint(65, 90)) # 随机颜色1: def rndColor():]]></description>
</item>
<item>
  <title>sparkdocker</title>
  <link>https://liudongdong1.github.io/sparkdocker/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sparkdocker/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132349.png" referrerpolicy="no-referrer">
      </div>1. docker 从0搭建hadoop，spark # 拉取并进入ubuntu镜像 docker pull daocloud.io/ubuntu docker run -it daocloud.io/ubuntu /bin/bash #安装jdk1.8 apt-get install software-properties-common python-software-properties add-apt-repository ppa:webupd8team/java apt-get update apt-get install oracle-java8-installer update-java-alternatives -s java-8-oracle java –versi]]></description>
</item>
<item>
  <title>Environment</title>
  <link>https://liudongdong1.github.io/environment/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/environment/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201107135403594.png" referrerpolicy="no-referrer">
      </div>1. Maven 安装 1.1. 下载 1.2. 解压 tar zxvf apache-maven-3.6.1-bin.tar.gz -C /softdowload 1.3. 环境变量 vim ~/.bashrc export M2_HOME=/opt/apache-maven-3.6.1 export PATH=$PATH:$M2_HOME/bin source ~/.bashrc mvn -version 2. Java 百度云盘下载JDK1.8安装包 sudo tar -zxvf ./jdk-8u162-linux-x64.tar.gz -C /usr/java/jdk1.8.0_261 #set oracle jdk environment export JAVA_HOME=/usr/java/jdk1.8.0_261 export JRE_HOME=${JAVA_HOME}/jre export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib export PATH=${PATH}:${JAVA_HOME}/bin #注意 java -version]]></description>
</item>
<item>
  <title>virtualBox</title>
  <link>https://liudongdong1.github.io/virtualbox/</link>
  <pubDate>Tue, 15 Dec 2020 10:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/virtualbox/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201216204034098.png" referrerpolicy="no-referrer">
      </div>1. VirtualBox配置SSH远程登录 sudo apt-get install openssh-server sudo apt-get install openssh-client sudo apt-get install ssh ssh localhost #ssh: connect to hostlocalhost port 22: Connection refused 表示没有安装成功 #关闭防火墙 sudo ufw disable #-----桥接方式网]]></description>
</item>
<item>
  <title>MapReduceTask1</title>
  <link>https://liudongdong1.github.io/maprecducetask1/</link>
  <pubDate>Tue, 15 Dec 2020 16:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/maprecducetask1/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/57.jpeg" referrerpolicy="no-referrer">
      </div>1. MapReduce The key and value classes have to be serializable by the framework and hence need to implement the Writable interface. Additionally, the key classes have to implement the WritableComparable interface to facilitate sorting by the framework. Input and Output types of a MapReduce job. import java.io.IOException; import java.util.Random; import java.util.StringTokenizer; import java.util.Iterator; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.Path; import org.apache.hadoop.io.IntWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.io.WritableComparable; import org.apache.hadoop.mapreduce.Job; import org.apache.hadoop.mapreduce.Mapper; import org.apache.hadoop.mapreduce.Reducer;]]></description>
</item>
<item>
  <title>SiameseNetwork</title>
  <link>https://liudongdong1.github.io/siamesenetwork/</link>
  <pubDate>Mon, 13 Jul 2020 09:47:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/siamesenetwork/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201129135707833.png" referrerpolicy="no-referrer">
      </div>Siamese Network 是一种神经网络的框架，用于评估两个输入样本的相似度，而不是具体的某种网络，就像seq2seq一样，具体实现上可以使用RNN也可以使用CN]]></description>
</item>
<item>
  <title>SearchDatabase</title>
  <link>https://liudongdong1.github.io/searchdatabase/</link>
  <pubDate>Sat, 19 Dec 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/searchdatabase/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/52.jpeg" referrerpolicy="no-referrer">
      </div>Lux, Mathias, and Savvas A. Chatzichristofis. &ldquo;Lire: lucene image retrieval: an extensible java cbir library.&rdquo; Proceedings of the 16th ACM international conference on Multimedia. 2008. cited by 396. Paper: LIRe Summary LiRe(Lucence Image Retrieval) is a light weight open source java library for content based image retrival. provides common and state of the art global image features and offers means for indexing and retrieval. images features: color histograms in RGB]]></description>
</item>
<item>
  <title>搜索相关</title>
  <link>https://liudongdong1.github.io/%E6%90%9C%E7%B4%A2%E7%9B%B8%E5%85%B3/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%90%9C%E7%B4%A2%E7%9B%B8%E5%85%B3/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/71.jpeg" referrerpolicy="no-referrer">
      </div>优化算法-秃鹰搜索算法（选择搜索空间、搜索空间猎物和俯冲捕获猎物）：https://blog.csdn.net/u011835903/art]]></description>
</item>
<item>
  <title>ImageRetrieval</title>
  <link>https://liudongdong1.github.io/imageretrieval/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/imageretrieval/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/VTRBWVOXY6.jpg" referrerpolicy="no-referrer">
      </div>给定一个包含特定实例(例如特定目标、场景、建筑等)的查询图像，图像检索旨在从数据库图像中找到包含相同实例的图像。但由于不同图像的拍摄视角、光]]></description>
</item>
<item>
  <title>Faiss</title>
  <link>https://liudongdong1.github.io/faiss/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/faiss/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/landscape-mountains-nature-lake-1.jpg" referrerpolicy="no-referrer">
      </div>Faiss是Facebook AI团队开源的针对聚类和相似性搜索库，为稠密向量提供高效相似度搜索和聚类，支持十亿级别向量的搜索，是目前最为成熟]]></description>
</item>
<item>
  <title>MeetingDirection</title>
  <link>https://liudongdong1.github.io/meetingdirection/</link>
  <pubDate>Sun, 13 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/meetingdirection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/NUSLXFZ4J6.jpg" referrerpolicy="no-referrer">
      </div>云数据库：除了Eric Brewer关于Kubernetes的keynote，还有一个关于云数据库的industry session。Amazo]]></description>
</item>
<item>
  <title>HumanPosePaper</title>
  <link>https://liudongdong1.github.io/humanposepaper/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/humanposepaper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/9YZ9JQIHRH.jpg" referrerpolicy="no-referrer">
      </div>Zhang S, Zhang Y, Bogo F, et al. Learning motion priors for 4d human body capture in 3d scenes[C]//Proceedings of the IEEE/CVF International Conference on Computer Vision. 2021: 11343-11353. [pdf] [code]
Paper: LEMO Summary a marker-based motion smoothness prior and a contact-aware motion infillter wihcih is fine-tuned per-instance in a self-supervised fashion. a novel marker-based moiton smoothness prior that encodes the whole-body motion in a learned latent space, which can be easily plugged into an optimization pipeline.]]></description>
</item>
<item>
  <title>HumanPoseProject</title>
  <link>https://liudongdong1.github.io/humanposeproject/</link>
  <pubDate>Fri, 13 Aug 2021 10:30:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/humanposeproject/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://images.unsplash.com/photo-1624788998865-126ccbb55e40?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDJ8NnNNVmpUTFNrZVF8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" referrerpolicy="no-referrer">
      </div>1. residual_pose Hourglass model for multi-person 2D pose estimation from depth images. Our regressor NN architecture for 3D human pose estimation. 3D pose prior for recovering from 2D missed detections. Tranined models for 2D and 3D pose estimation. Code for obtaining 2D and 3D pose from a depth image. 11 months ago. star12 2. depth_human_synthesis We have created a collection of 24 human characters, 12 men and 12 women, with]]></description>
</item>
<item>
  <title>Vicon动捕</title>
  <link>https://liudongdong1.github.io/vicon%E5%8A%A8%E6%8D%95/</link>
  <pubDate>Mon, 13 Sep 2021 10:30:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/vicon%E5%8A%A8%E6%8D%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/8THWMOJNHY.jpg" referrerpolicy="no-referrer">
      </div>Vicon 光学动作捕捉系统系统是一组网络连接的 Vicon 运动捕捉摄像机和其它设备以提 供实时光学数据，这些数据可以被应用于实时在线或者离线的运动捕捉、分析，应]]></description>
</item>
<item>
  <title>VisionNLPCommend</title>
  <link>https://liudongdong1.github.io/visionnlpcommend/</link>
  <pubDate>Fri, 21 Aug 2020 21:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/visionnlpcommend/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/voice-recognition-speech-detect-deep-260nw-694633963.webp" referrerpolicy="no-referrer">
      </div>level: CCF_A CVPR author: Amaia Salvador1(FaceBook Al Research) date: 2019 keyword: image understanding; information retrieval Salvador, Amaia, et al. &ldquo;Inverse cooking: Recipe generation from food images.&rdquo; Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. 2019. Paper: Inverse Cooking Summary introduce an inverse cooking system that recreates cooking recipes given food images. predicts ingredients as sets by means of a novel architecture, modeling their dependencies without imposing any]]></description>
</item>
<item>
  <title>TrackingRelative</title>
  <link>https://liudongdong1.github.io/trackingrelative/</link>
  <pubDate>Wed, 02 Sep 2020 21:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/trackingrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/voice-recognition-speech-detect-deep-260nw-694633963.webp" referrerpolicy="no-referrer">
      </div>level: CVPR author: Boqiang Xu (University of Chinese Academy of Sciences), Lingxiao He(AI Research of JD) date: 2020 keyword: Person re-identification Paper: Black Re-ID Summary propose the study of the Black Re-ID problem and establish the first Black-reID dataset; propose the head-shoulder adaptive attention network(HAA), which make use of the head-shoulder information to support person re-identification through the adaptive attention module, and can be integrated with the most current Re-ID]]></description>
</item>
<item>
  <title>SuperResolution</title>
  <link>https://liudongdong1.github.io/superresolution/</link>
  <pubDate>Thu, 23 Sep 2021 21:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/superresolution/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QSCRVBUU2G.jpg" referrerpolicy="no-referrer">
      </div>Tian Y, Zhang Y, Fu Y, et al. Tdan: Temporally-deformable alignment network for video super-resolution[C]//Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 2020: 3360-3369. Paper: Tdan Summary propose a temporally-deformable alignment network(TDAN) to adaptively align the reference frame and each supporting frame a the feature level without computing optical flow. use features from both the reference frame and each supporting frame to dynamically predict offsets of sampling]]></description>
</item>
<item>
  <title>Rendering</title>
  <link>https://liudongdong1.github.io/rendering/</link>
  <pubDate>Mon, 11 Oct 2021 21:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rendering/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/IQ2LORUXQB.jpg" referrerpolicy="no-referrer">
      </div>Rückert D, Franke L, Stamminger M. ADOP: Approximate Differentiable One-Pixel Point Rendering[J]. arXiv preprint arXiv:2110.06635, 2021. pdf code star 538
Paper: ADOP Summary present a novel point-based, differentiable neural rendering pipeline for scene refinement and novel view synthesis. the point cloud rendering is performed by a differentiable renderer using multi-resolution one-pixel point rasterization. after rendering , the neural image pyramid is passed through a deep neural network for shading calculations and hole-filling.]]></description>
</item>
<item>
  <title>Frame_BasicSR</title>
  <link>https://liudongdong1.github.io/frame_basicsr/</link>
  <pubDate>Sat, 23 Oct 2021 21:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/frame_basicsr/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/5U2FV0UNXF.jpg" referrerpolicy="no-referrer">
      </div>BasicSR (Basic Super Restoration) 是一个基于 PyTorch 的开源图像视频复原工具箱, 比如 超分辨率, 去噪, 去模糊, 去 JPEG 压缩噪声等. Real-ESRGAN: 通用图像复原的实用算法 GFPGAN: 真实场景人脸复原的实用算]]></description>
</item>
<item>
  <title>PaperRecord</title>
  <link>https://liudongdong1.github.io/paperrecord/</link>
  <pubDate>Wed, 13 Jan 2021 10:30:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/paperrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133441.png" referrerpolicy="no-referrer">
      </div>clothes classification, attribute prediction, clothing item retrieval. clothes have large variations in style, texture, and cutting. clothing items are frequently subject to deformation and occlusion. clothes images often exhibit serous variations when they are taken under different scenarios. Liu, Ziwei, et al. &ldquo;Deepfashion: Powering robust clothes recognition and retrieval with rich annotations.&rdquo; Proceedings of the IEEE conference on computer vision and pattern recognition. 2016. Paper: Deepfashion Summary introduce DeepFashion, a]]></description>
</item>
<item>
  <title>Linux Operation</title>
  <link>https://liudongdong1.github.io/linux%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/</link>
  <pubDate>Wed, 16 Mar 2022 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/linux%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/petal-5044428.png" referrerpolicy="no-referrer">
      </div>1. 内核划分 .1. 字符设备 文本控制台( /dev/console )和串口( /dev/ttyS0 及其友 )是字符设备的例子 .2.块设备 .3. 网络接口： 内核与网络设备驱动间的通讯与字符和块设备驱动所]]></description>
</item>
<item>
  <title>PictureDataEnhance</title>
  <link>https://liudongdong1.github.io/picturedataenhance/</link>
  <pubDate>Fri, 14 Aug 2020 08:57:33 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/picturedataenhance/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/5.jpeg" referrerpolicy="no-referrer">
      </div>数据增强中的一些基本操作，例如裁剪图片大小，图片正则话标准化处理，图片数据转tensor向量，图片随机裁剪，旋转，过滤，图片锐化，以及图片模]]></description>
</item>
<item>
  <title>SensorDatasets</title>
  <link>https://liudongdong1.github.io/sensordatasets/</link>
  <pubDate>Tue, 24 Nov 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sensordatasets/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/sunset-background-lighting-at-dusk-sky-evening-sky.jpg" referrerpolicy="no-referrer">
      </div>1. 加速度 1.1. UCI dataset 来源于UCI（即UC Irvine，加州大学欧文分校）。数据由年龄在19-48岁之间的30位志愿者，智能手机固定于他们的腰部，执]]></description>
</item>
<item>
  <title>FitFunction</title>
  <link>https://liudongdong1.github.io/fitfunction/</link>
  <pubDate>Thu, 18 Mar 2021 07:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/fitfunction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113433.png" referrerpolicy="no-referrer">
      </div>1. 多项式拟合 import numpy as np import matplotlib.pyplot as plt # 模拟生成一组实验数据 x = np.arange(0,10,0.2) y = -(x-3.5)**2+4.7 noise = np.random.uniform(-3,3,len(x)) y += noise fig, ax = plt.subplots() ax.plot(x, y, &#39;b--&#39;) ax.set_xlabel(&#39;x&#39;) ax.set_ylabel(&#39;y&#39;) # 二次拟合 coef = np.polyfit(x, y, 2) y_fit = np.polyval(coef, x) ax.plot(x, y_fit, &#39;g&#39;) # 找出其中的峰]]></description>
</item>
<item>
  <title>YoloP</title>
  <link>https://liudongdong1.github.io/yolop/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/yolop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/33.jpeg" referrerpolicy="no-referrer">
      </div>Wu D, Liao M, Zhang W, et al. YOLOP: You Only Look Once for Panoptic Driving Perception[J]. arXiv preprint arXiv:2108.11250, 2021. [pdf] [code]]]></description>
</item>
<item>
  <title>ThreadRelative</title>
  <link>https://liudongdong1.github.io/threadrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/threadrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/02/23/26/red-6224930__340.jpg" referrerpolicy="no-referrer">
      </div>1. 线程基础 .1. 生命周期 在线程的生命周期中，它要经过新建（New）、就绪（Runnable）、运行（Running）、阻塞（Blocked）和死]]></description>
</item>
<item>
  <title>INotifyPropertyChanged</title>
  <link>https://liudongdong1.github.io/inotifypropertychanged/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/inotifypropertychanged/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210502220556.png" referrerpolicy="no-referrer">
      </div>1.PropertyChangedEventHandler 委托 class ServoAction: INotifyPropertyChanged//该类作为动作列表项的基本数据类型 { private string indexPath; private UInt16 time;//动作时间 private int item;/]]></description>
</item>
<item>
  <title>前端学习任务</title>
  <link>https://liudongdong1.github.io/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%BB%E5%8A%A1/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%BB%E5%8A%A1/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/18/14/34/wheat-7076817__340.png" referrerpolicy="no-referrer">
      </div>网页渲染位置： CSR，SSR，SSG，ISR，DPR 介绍 前端一些博客和工具 vue组件模块通信和生命周期，如何服用轮子 https://vuejs.org/guide/scaling-up/ssr.html#component-lifecycle-hooks nodejs 系列文章： https://juejin.cn/column/6972834613957754911 uni-app 如何使]]></description>
</item>
<item>
  <title>CnblogTheme</title>
  <link>https://liudongdong1.github.io/cnblogtheme/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cnblogtheme/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/18/14/34/wheat-7076817__340.png" referrerpolicy="no-referrer">
      </div>1. Cnblogs-Theme-SimpleMemory 本地存储链接： E:\项目记录\前端web\博客园配置 2. cnblogs-theme-silence 3. cnblogs-theme-simple-color 4. cute-cnblogs 5. make_cnblogs_better 6. cnblog-mouse 7. CNblogs-Theme-Sakura]]></description>
</item>
<item>
  <title>CSS Learning Record</title>
  <link>https://liudongdong1.github.io/css-learning-record/</link>
  <pubDate>Tue, 05 May 2020 15:53:45 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/css-learning-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/aerial-view-of-vintage-camera-on-table.jpg" referrerpolicy="no-referrer">
      </div>1. Syntax Selector − A selector is an HTML tag at which a style will be applied. This could be any tag like or etc. Property − A property is a type of attribute of HTML tag. Put simply, all the HTML attributes are converted into CSS properties. They could be color, border etc. Value − Values are assigned to properties. For example, color property can have value either red]]></description>
</item>
<item>
  <title>Typescript</title>
  <link>https://liudongdong1.github.io/typescript/</link>
  <pubDate>Mon, 30 Nov 2020 14:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/typescript/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201130202056402.png" referrerpolicy="no-referrer">
      </div>TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. TypeScript is pure object oriented with classes, interfaces and statically typed like C# or Java. TypeScript supports other JS libraries; and portable across browsers, devices, and operating systems, and don&rsquo;t need a dedicated VM or specific runtime environment to execute; 1. Environment Node.js is an open source, cross-platform runtime environment for server-side JavaScript. Node.js is required to run]]></description>
</item>
<item>
  <title>QSS</title>
  <link>https://liudongdong1.github.io/qss/</link>
  <pubDate>Sat, 05 Jun 2021 15:53:45 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/qss/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/notebook-paper_LDCHZGDFNF.jpg" referrerpolicy="no-referrer">
      </div>Styles sheets are textual specifications that can be set on the whole application using QApplication::setStyleSheet() or on a specific widget (and its children) using QWidget::setStyleSheet(). If several style sheets are set at different levels, Qt derives the effective style sheet from all of those that are set. This is called cascading. 样式表使用方式： 在Qt Designer]]></description>
</item>
<item>
  <title>小程序框架-uni-app</title>
  <link>https://liudongdong1.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6-uni-app/</link>
  <pubDate>Sun, 12 Dec 2021 15:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6-uni-app/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/18/14/34/wheat-7076817__340.png" referrerpolicy="no-referrer">
      </div>uni-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百]]></description>
</item>
<item>
  <title>Transaction</title>
  <link>https://liudongdong1.github.io/transaction/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/transaction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/08/17/04/18/morning-4411421__340.jpg" referrerpolicy="no-referrer">
      </div>1. 事务特性 你的程序是否支持事务首先取决于数据库 ，比如使用 MySQL 的话，如果你选择的是 innodb 引擎，那么恭喜你，是可以支持事务的。但是，如果你的 MySQL 数据库使]]></description>
</item>
<item>
  <title>Tools</title>
  <link>https://liudongdong1.github.io/tools/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/tools/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/23/18/11/drink-7031154__340.jpg" referrerpolicy="no-referrer">
      </div>1. mysql .1. cmd 配置使用 MySQL Community Server 社区版本，开源免费，但不提供官方技术支持。 MySQL Enterprise Edition 企业版本，需付费，可以试用30天。 MySQL Cluster 集群版，开源免费。可将几个MyS]]></description>
</item>
<item>
  <title>SpringJDBC</title>
  <link>https://liudongdong1.github.io/springjdbc/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springjdbc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/06/01/09/05/facebook-793048__340.jpg" referrerpolicy="no-referrer">
      </div>dependency &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;/dependency&gt; application.yml spring: datasource: url: jdbc:mysql://127.0.0.1:3306/spring-boot-demo?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;serverTimezone=GMT%2B8 username: root password: 1234qwer driver-class-name: com.mysql.cj.jdbc.Driver type: com.zaxxer.hikari.HikariDataSource initialization-mode: always continue-on-error: true schema: - &#34;classpath:db/schema.sql&#34; data: - &#34;classpath:db/data.sql&#34; hikari: minimum-idle: 5 connection-test-query: SELECT 1 FROM DUAL maximum-pool-size: 20 auto-commit: true idle-timeout: 30000 pool-name: SpringBootDemoHikariCP max-lifetime: 60000 connection-timeout: 30000 UserService.java package com.ldd.service; import com.ldd.domain.User; import javax.sql.DataSource; import java.util.List; public interface UserService { /*Use]]></description>
</item>
<item>
  <title>MySQLRelative</title>
  <link>https://liudongdong1.github.io/mysqlrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mysqlrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/08/08/11/42/butterfly-4392802__340.jpg" referrerpolicy="no-referrer">
      </div>0. 执行过程 查询语句的执行流程如下：权限校验（如果命中缓存）&mdash;&gt;查询缓存&mdash;&gt;分析器&mdash;&gt;优]]></description>
</item>
<item>
  <title>kafka_command</title>
  <link>https://liudongdong1.github.io/kafka_command/</link>
  <pubDate>Mon, 19 Jul 2021 10:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kafka_command/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pink-blossoms_MSZ3ZOAWI1.jpg" referrerpolicy="no-referrer">
      </div> https://blog.gmem.cc/apache-kafka-study-note https://blog.gmem.cc/elasticsearch-study-note https://blog.gmem.cc/apache-curator-study-note https://blog.gmem.cc/apache-drill-study-note https://blog.gmem.cc/apache-storm-study-note ]]></description>
</item>
<item>
  <title>kafka-python</title>
  <link>https://liudongdong1.github.io/kafka-python/</link>
  <pubDate>Mon, 19 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kafka-python/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/concrete-wall_NLJESZLWIU.jpg" referrerpolicy="no-referrer">
      </div>Kafka属于Apache组织，是一个高性能跨语言分布式发布订阅消息队列系统[7]。它的主要特点有： 以时间复杂度O(1)的方式提供消息持久化]]></description>
</item>
<item>
  <title>kafkaInstall</title>
  <link>https://liudongdong1.github.io/kafkainstall/</link>
  <pubDate>Tue, 20 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kafkainstall/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/white-daisy_QYC2CNZKKS.jpg" referrerpolicy="no-referrer">
      </div>1. Java JDK 2. Zookeeper 下载地址： 清华镜像 官网 本地地址 修改配置文件： 进入conf目录（例中为：E:\javacloud\apache-zookeeper-]]></description>
</item>
<item>
  <title>kafka_highAvailable</title>
  <link>https://liudongdong1.github.io/kafka_highavailable/</link>
  <pubDate>Tue, 20 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kafka_highavailable/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/binocular-equipment_E4WML4H1GB.jpg" referrerpolicy="no-referrer">
      </div>1. 为何需要Replication 在Kafka在0.8以前的版本中，是没有Replication的，一旦某一个Broker宕机，则其上所有的P]]></description>
</item>
<item>
  <title>kafka_Stream</title>
  <link>https://liudongdong1.github.io/kafka_stream/</link>
  <pubDate>Wed, 21 Jul 2021 08:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kafka_stream/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/spider-web_A1MWQJDC12.jpg" referrerpolicy="no-referrer">
      </div>From: http://www.jasongj.com/kafka/kafka_stream/ 一、Kafka Stream背景 1. Kafka Stream是什么 Kafka Stream是Apache Kafka从0.10版本引入的一个新Feature。它是]]></description>
</item>
<item>
  <title>kafka_实时机器学习</title>
  <link>https://liudongdong1.github.io/kafka_%E5%AE%9E%E6%97%B6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
  <pubDate>Wed, 21 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kafka_%E5%AE%9E%E6%97%B6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/poppy-flower_5ID3FW4GTD.jpg" referrerpolicy="no-referrer">
      </div>在Kafka应用程序中部署一个分析模型来进行实时预测。模式训练和模型部署可以是两个独立的过程。但是相同的步骤也可应用于数据集成和数据预处理，]]></description>
</item>
<item>
  <title>kafka_ecosystem</title>
  <link>https://liudongdong1.github.io/kafka_ecosystem/</link>
  <pubDate>Thu, 22 Jul 2021 08:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kafka_ecosystem/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/speed-motorboat_E4NINEMBFC.jpg" referrerpolicy="no-referrer">
      </div>From：https://dzone.com/articles/kafka-detailed-design-and-ecosystem Apache Kafka 的]]></description>
</item>
<item>
  <title>Classify_digit</title>
  <link>https://liudongdong1.github.io/classify_digit/</link>
  <pubDate>Wed, 14 Apr 2021 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/classify_digit/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210522212643.png" referrerpolicy="no-referrer">
      </div>To apply a classifier on this data, we need to flatten the images, turning each 2-D array of grayscale values from shape (8, 8) into shape (64,). Subsequently, the entire dataset will be of shape (n_samples, n_features), where n_samples is the number of images and n_features is the total number of pixels in each image. label没有用onehot编]]></description>
</item>
<item>
  <title>粘包拆包</title>
  <link>https://liudongdong1.github.io/%E7%B2%98%E5%8C%85%E6%8B%86%E5%8C%85/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%B2%98%E5%8C%85%E6%8B%86%E5%8C%85/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/95FPGAVFXJ.jpg" referrerpolicy="no-referrer">
      </div>发送端为了将多个发给接收端的数据包，更有效地发送到接收端，会使用Nagle算法。Nagle算法会将多次时间间隔较小且数据量小的数据合并成一个]]></description>
</item>
<item>
  <title>EncoderDecoder</title>
  <link>https://liudongdong1.github.io/encoderdecoder/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/encoderdecoder/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/NG5BF9YWT1.jpg" referrerpolicy="no-referrer">
      </div>1. 解码器 解码器是负责将入站数据从一种格式转换到另一种格式的，所以Netty 的解码器实现了ChannelInboundHandler。 .1. ByteToMessageDecoder 由于]]></description>
</item>
<item>
  <title>telnet helloworld</title>
  <link>https://liudongdong1.github.io/telnet-helloworld/</link>
  <pubDate>Thu, 19 Aug 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/telnet-helloworld/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/DPPD8ZTWJK.jpg" referrerpolicy="no-referrer">
      </div>Netty是 一个异步事件驱动的网络应用程序框架，用于快速开发可维护的高性能协议服务器和客户端。是一个NIO客户端服务器框架，可以快速轻松地开]]></description>
</item>
<item>
  <title>netty component</title>
  <link>https://liudongdong1.github.io/netty-component/</link>
  <pubDate>Thu, 19 Aug 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/netty-component/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/EGNLM82WFY.jpg" referrerpolicy="no-referrer">
      </div>1. Netty 事件相应机制 public class NettyServer { private final int port; public NettyServer(int port) { this.port = port; } public static void main(String[] args) throws InterruptedException { int port = 9999; NettyServer echoServer = new NettyServer(port); System.out.println(&#34;服务器启动]]></description>
</item>
<item>
  <title>HTTP 服务</title>
  <link>https://liudongdong1.github.io/http%E6%9C%8D%E5%8A%A1/</link>
  <pubDate>Thu, 19 Aug 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/http%E6%9C%8D%E5%8A%A1/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/4PG8IOID4P.jpg" referrerpolicy="no-referrer">
      </div>1. NettyHTTP编解码器 public class HttpHelloWorldServerInitializer extends ChannelInitializer&lt;SocketChannel&gt; { @Override public void initChannel(SocketChannel ch) { ChannelPipeline p = ch.pipeline(); /** * 或者使用HttpRequestDecoder &amp; HttpResponseEncoder *HttpRequestDecoder 即把 ByteBuf 解码到 HttpRequest 和 HttpC]]></description>
</item>
<item>
  <title>Reactor模型</title>
  <link>https://liudongdong1.github.io/reactor%E6%A8%A1%E5%9E%8B/</link>
  <pubDate>Sun, 19 Sep 2021 11:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/reactor%E6%A8%A1%E5%9E%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/H7IYNGONCI.jpg" referrerpolicy="no-referrer">
      </div>同步的等待多个事件源到达（采用select()实现） 将事件多路分解以及分配相应的事件服务进行处理，这个分派采用server集中处理（disp]]></description>
</item>
<item>
  <title>EentLoopGroup</title>
  <link>https://liudongdong1.github.io/eventloopgroup/</link>
  <pubDate>Sat, 09 Oct 2021 11:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/eventloopgroup/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/8YJQ4BERC1.jpg" referrerpolicy="no-referrer">
      </div>学习链接： https://juejin.cn/post/6999225608341291039#heading-6 还是得通过实战，自己来读一下代码，了解背后的实现机制。 1. Unsafe .1. Java JDK .2.netty Unsafe接口中定义了socket相关操作，包括Socket]]></description>
</item>
<item>
  <title>ByteBuf类</title>
  <link>https://liudongdong1.github.io/bytebuf%E7%B1%BB/</link>
  <pubDate>Mon, 11 Oct 2021 20:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bytebuf%E7%B1%BB/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/SQSHKVYXVX.jpg" referrerpolicy="no-referrer">
      </div>网络数据的基本单位总是字节。Java NIO 提供了ByteBuffer 作为它的字节容器，但是这个类使用起来过于复杂，而且也有些繁琐。Netty 的B]]></description>
</item>
<item>
  <title>文件上传</title>
  <link>https://liudongdong1.github.io/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
  <pubDate>Wed, 13 Oct 2021 11:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/IDMQ2QKTYR.jpg" referrerpolicy="no-referrer">
      </div>构建高性能、低时延的各种 Java 中间件，例如 MQ、分布式服务框架、ESB 消息总线等，Netty 主要作为基础通信框架提供高性能、低时延的通信服务； 公]]></description>
</item>
<item>
  <title>rm&amp;cp&amp;mv原理</title>
  <link>https://liudongdong1.github.io/rmcpmv%E5%8E%9F%E7%90%86/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rmcpmv%E5%8E%9F%E7%90%86/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/26/20/45/lantern-6826698__340.jpg" referrerpolicy="no-referrer">
      </div>在 linux 系统中，磁盘通常被格式化为 ext3 或 ext4 格式，这两种文件系统对文件的存储和访问是通过一种被称为 inode 即 i 节点的机制来实现的。 当我们读写文件时，通常是]]></description>
</item>
<item>
  <title>shellLearning</title>
  <link>https://liudongdong1.github.io/shelllearning/</link>
  <pubDate>Thu, 13 Aug 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shelllearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133729.png" referrerpolicy="no-referrer">
      </div>1. 基本语法 .1. 基本脚本 #!/bin/bash echo &#34;Hello World !&#34; # 注释内容 chmod +x ./test.sh #使脚本具有执行权限 ./test.sh #执行脚本 .2. 定义使用变量 your_name=&#34;qinjx&#34; # 定义变量 for file in `ls /etc` # 定义变量2 echo $your_name echo ${your_name} #加括]]></description>
</item>
<item>
  <title>jdk_tomcat</title>
  <link>https://liudongdong1.github.io/jdk_tomcat/</link>
  <pubDate>Sat, 15 Aug 2020 12:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdk_tomcat/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/54R1KQELFW.jpg" referrerpolicy="no-referrer">
      </div>1. install jdk_tomcat #!/bin/bash base_dir=$(cd &#34;$(dirname &#34;$0&#34;)&#34;;pwd) JDK_FILE=$(ls | grep jdk-*-linux-*.tar.gz) TOMCAT_FILE=$(ls | grep apache-tomcat-*.tar.gz) #下载JDK download(){ os_version=`uname -a` echo $os_version architecture=&#34;64&#34; echo &#34;$os_version&#34; | grep -q &#34;$architecture&#34; if [ $? -eq 0 ] then # 不存在即去外网下载jdk文件 if [ ! -f &#34;$JDK_FILE&#34; ]; then echo &#34;您正]]></description>
</item>
<item>
  <title>shell_scriptRecord</title>
  <link>https://liudongdong1.github.io/shell_scriptrecord/</link>
  <pubDate>Mon, 20 Dec 2021 23:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_scriptrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/22/17/25/stork-7029266__340.jpg" referrerpolicy="no-referrer">
      </div>1. 内存监控脚本 #!/bin/bash #memory use mem_war_file=/tmp/mem_war.txt mem_use=`free -m | grep Mem | awk &#39;{print $3}&#39;` mem_total=`free -m | grep Mem | awk &#39;{print $2}&#39;` mem_percent=$((mem_use*100/mem_total)) # echo &#34;$mem_percent&#34;% if (($mem_percent &gt; 80));then echo &#34;`date +%F-%H-%M` mem: ${mem_percent}%&#34; &gt;$mem_war_file echo &#34;`date +%F-%H-%M` mem: ${mem_percent}%&#34; | mail -s &#34;mem warning&#34; root fi #!/bin/bash ####################################################### #检测网卡流量，并按规定格]]></description>
</item>
<item>
  <title>shell_kill</title>
  <link>https://liudongdong1.github.io/shell_kill/</link>
  <pubDate>Wed, 19 Jan 2022 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_kill/</guid>
  <description><![CDATA[Linux 中的 kill 命令用来终止指定的进程（terminate a process）的运行，是 Linux 下进程管理的常用命令。通常，终止一个前台进程可以使用 Ctrl+C 键，但]]></description>
</item>
<item>
  <title>shell_AWK</title>
  <link>https://liudongdong1.github.io/shell_awk/</link>
  <pubDate>Sat, 19 Mar 2022 20:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_awk/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/16/21/46/tea-6101059__340.jpg" referrerpolicy="no-referrer">
      </div>awk 是报表生成工具，同样是逐行取出文件，但是取出的目的是对内容进行二次加工，然后将有用的数据单独格式化输出、或进行归纳统计得到统计结果等。 awk -F:]]></description>
</item>
<item>
  <title>shell刷题</title>
  <link>https://liudongdong1.github.io/shell%E5%88%B7%E9%A2%98/</link>
  <pubDate>Sat, 19 Mar 2022 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell%E5%88%B7%E9%A2%98/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/22/03/22/passiflora-7027917__340.jpg" referrerpolicy="no-referrer">
      </div>grep、awk、sed ， 以及 cat、head、tail、less、more 命令 1. 统计文件行数 #解法1:awk awk &#39;{print NR}&#39;| tail -n1 #awk print NR 打印每一行的行]]></description>
</item>
<item>
  <title>shell_find</title>
  <link>https://liudongdong1.github.io/shell_find/</link>
  <pubDate>Sat, 19 Mar 2022 22:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_find/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2014/09/07/21/34/child-438373__340.jpg" referrerpolicy="no-referrer">
      </div>查找系统中所有的大小超过 200M 文件，查看近 7 天系统中哪些文件被修改过，找出所有子目录中的可执行文件，这些任务需求 find 命令都可以轻松胜任。find 搜]]></description>
</item>
<item>
  <title>shell_sed</title>
  <link>https://liudongdong1.github.io/shell_sed/</link>
  <pubDate>Sun, 20 Mar 2022 20:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_sed/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/05/08/16/06/dog-5146351__340.jpg" referrerpolicy="no-referrer">
      </div>sed 作为一种非交互式编辑器，它使用预先设定好的编辑指令对输入的文本进行编辑，完成之后输出编辑结果。 sed 从输入文件中读取内容，每次处理一行内容，并]]></description>
</item>
<item>
  <title>shell_grep</title>
  <link>https://liudongdong1.github.io/shell_grep/</link>
  <pubDate>Sun, 20 Mar 2022 22:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_grep/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/15/00/40/lemonade-7014122__340.jpg" referrerpolicy="no-referrer">
      </div>grep 命令是一种强大的文本搜索工具，它能使用正则表达式，按照指定的模式去匹配，并把匹配的行打印出来。需要注意的是，grep 只支持匹配而不能替换匹]]></description>
</item>
<item>
  <title>shell_iotop</title>
  <link>https://liudongdong1.github.io/shell_iotop/</link>
  <pubDate>Sun, 20 Mar 2022 23:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_iotop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/07/09/21/24/mazarine-blue-butterfly-6400060__340.jpg" referrerpolicy="no-referrer">
      </div>iotop 命令 是一个用来监视磁盘 I/O 使用状况的 top 类工具。iotop 具有与 top 相似的 UI，其中包括 PID、用户、I/O、进程等相关信息。Linux 下的 IO 统]]></description>
</item>
<item>
  <title>shell_history</title>
  <link>https://liudongdong1.github.io/shell_history/</link>
  <pubDate>Sun, 20 Mar 2022 23:25:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/shell_history/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/02/14/25/flower-7043267__340.jpg" referrerpolicy="no-referrer">
      </div>Linux 命令的历史记录，会持久化存储，默认位置是当前用户家目录的 .bash_history 文件。 当 Linux 系统启动一个 Shell 时，Shell 会从 .bash_history 文件中，读取历史记录，存储在相应内存]]></description>
</item>
<item>
  <title>TIDeviceCoding</title>
  <link>https://liudongdong1.github.io/tidevicecoding/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/tidevicecoding/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/bird-perched_RDHWPJKENF.jpg" referrerpolicy="no-referrer">
      </div>Since each of the samples are taken at equally spaced time intervals, we have a time log of what happened during the chirp. Every sample is a complex number, meaning we have captured some magnitude of power as well as the phase of the wave at that time. So, our object will theoretically appear as an increase in power in our samples. On the other hand, we can use the]]></description>
</item>
<item>
  <title>SignalBase</title>
  <link>https://liudongdong1.github.io/signalbase/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/signalbase/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/sunset-over-meadow-and-trees.jpg" referrerpolicy="no-referrer">
      </div>1. IQ Signals 1. Basic signal $$ basic \quad wave: v(t)=A*sin(2\pi ft+\phi)\ $$ 2. Simple Amplitude Modulation $$ simple\quad amplitude \quad modulation: v(t)=A(t)*sin(2\pi ft +\phi)\ $$ 3. Quadrature signals(正交信号) the amplitude of the &ldquo;in-phase&rdquo; signal =I: $I*cos(2\pi ft)$; the amplitude of the &ldquo;90 degree&rdquo; signal=Q: $Q*sin(2\pi ft)$ 4. Digital Modulation&ndash;Binary Phase Shift Keying $I(t)$ varies between [+1, -1];]]></description>
</item>
<item>
  <title>SAR-Synthetic-Aperture-Radar</title>
  <link>https://liudongdong1.github.io/sar-synthetic-aperture-radar/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sar-synthetic-aperture-radar/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/12/11/09/30/mobile-phone-1087845__340.jpg" referrerpolicy="no-referrer">
      </div>ISAR与SAR的主要区别在于，前者要求雷达载体静止不动而目标运动，作为一种主动发射和接收电磁波的雷达，它相比RGB相机有着不受天气、昼夜影]]></description>
</item>
<item>
  <title>projectRecord</title>
  <link>https://liudongdong1.github.io/projectrecord/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/projectrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/12/19/08/39/mobile-phone-1917737__340.jpg" referrerpolicy="no-referrer">
      </div>0. Tools .1. pymmw chrome-extension://ikhdkkncnoglghljlkmcimlnlhkeamad/pdf-viewer/web/viewer.html?file=https%3A%2F%2Fcore.ac.uk%2Fdownload%2Fpdf%2F225625415.pdf%23page%3D6#page=6 学习这里的每一个特征 Constapel, Manfred, Marco Cimdins, and Horst Hellbrück. &ldquo;A Practical Toolbox for Getting Started with mmWave FMCW Radar Sensors.&rdquo; 4th KuVS/GI Expert Talk on Localization (2019). [pdf] [code] a toolbox composed of Python scripts to interact with TI's evaluation module (BoosterPack) for IWRxx43 mmWave sensing devices. access]]></description>
</item>
<item>
  <title>mmwavestudio</title>
  <link>https://liudongdong1.github.io/mmwavestudio/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mmwavestudio/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/fence-background_WUDOJVTLB9.jpg" referrerpolicy="no-referrer">
      </div>1. 安装 下载mmwave_studio.exe 安装FTDI驱动，安装包已经在下载的mmwave_studio.包里面了，具体操作过程参考mmw]]></description>
</item>
<item>
  <title>mmWaveSDK</title>
  <link>https://liudongdong1.github.io/mmwavesdk/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mmwavesdk/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/NEGXTAK35R.jpg" referrerpolicy="no-referrer">
      </div>]]></description>
</item>
<item>
  <title>mmPaperRecord</title>
  <link>https://liudongdong1.github.io/mmpaperrecord/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mmpaperrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/snowdrop-flowers-spring-flower-plant-close-macro.jpg" referrerpolicy="no-referrer">
      </div>Authors: https://scholar.google.com/citations?hl=zh-CN&user=TvI47boAAAAJ&view_op=list_works&sortby=pubdate https://scholar.google.com/citations?hl=en&user=c5yUtPsAAAAJ&view_op=list_works&sortby=pubdate https://scholar.google.com/citations?hl=en&user=OxKLBqwAAAAJ&view_op=list_works&sortby=pubdate https://scholar.google.com/citations?hl=en&user=q9llreMAAAAJ&view_op=list_works&sortby=pubdate https://scholar.google.com/citations?hl=en&user=5-FDAmAAAAAJ&view_op=list_works&sortby=pubdate https://scholar.google.com/citations?hl=en&user=OxKLBqwAAAAJ&view_op=list_works&sortby=pubdate Application:[*vocalPrint_SenSys20.pdf]+(file:///D:/work_OneNote/OneDrive - tju.edu.cn/文档/work_组会比赛/mmwave/mmWave-sensing/papers/vocalPri]]></description>
</item>
<item>
  <title>DeviceSurvey</title>
  <link>https://liudongdong1.github.io/devicesurvey/</link>
  <pubDate>Thu, 19 Nov 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/devicesurvey/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201124211750356.png" referrerpolicy="no-referrer">
      </div>Millimeter wave (mmWave) is a special class of radar technology that uses shortwavelength electromagnetic waves. Radar systems transmit electromagnetic wave signals that objects in their path then reflect. By capturing the reflected signal, a radar system can determine the range, velocity and angle of the objects. operating at 76–81 GHz (with a corresponding wavelength of about 4 mm 0. mmWave Wei T, Zhang X. mtrack: High-precision]]></description>
</item>
<item>
  <title>Radarproduct</title>
  <link>https://liudongdong1.github.io/radarproduct/</link>
  <pubDate>Mon, 30 Nov 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/radarproduct/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/workspace-office_RVVFEKQTWA.jpg" referrerpolicy="no-referrer">
      </div>1. ZADAR ZADAR目前的产品线设置有3款，都是4D radar，分别是zPRIME，zSIGNAL以及zPROX，这几款产品的彼此定位不同。zPR]]></description>
</item>
<item>
  <title>PoseRelative</title>
  <link>https://liudongdong1.github.io/poserelative/</link>
  <pubDate>Wed, 30 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/poserelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/10/14/48/rain-6243559__340.jpg" referrerpolicy="no-referrer">
      </div>Meng, Zhen, et al. &ldquo;Gait recognition for co-existing multiple people using millimeter wave sensing.&rdquo; Proceedings of the AAAI Conference on Artificial Intelligence. Vol. 34. No. 01. 2020. CCF -A Paper: mmGait Summary build and publicly achieve a first-of-its-kind mmWave gait data set, which is collected from 95 volunteers and lasts about 30 hours in total; propose a new deep learning model mmGaitNet to exact features for each attribute of point]]></description>
</item>
<item>
  <title>Pdf&amp;Cdf&amp;Pmf</title>
  <link>https://liudongdong1.github.io/pdfcdfpmf/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pdfcdfpmf/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>1. PDF&amp;CDF&amp;PMF 2. code import numpy as np import matplotlib.pyplot as plt import os from scipy import stats import seaborn as sns def readTxt(path): f = open(path,&#39;r&#39;, encoding=&#39;UTF-8&#39;) dataList = [] dataList=[line.split(&#34;:&#34;)[-1].split(&#34;\n&#34;)[0] for line in f.readlines()] dataList=[float(i) for i in dataList] return dataList data=[&#39;52.20153254455275&#39;, &#39;48.421227186748&#39;, &#39;50.95434359918541&#39;] data=[float(i) for i in data] fs_xk = np.sort(data) hist, bin_edges = np.histogram(fs_xk) width = (bin_edges[1] - bin_edges[0]) * 0.95 plt.bar(bin_edges[1:], hist/sum(hist), width=width, color=&#39;#5B9BD5&#39;) cdf = np.]]></description>
</item>
<item>
  <title>NoiseRelated</title>
  <link>https://liudongdong1.github.io/noiserelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/noiserelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201129141030495.png" referrerpolicy="no-referrer">
      </div>1. Perlin Noise Perlin Noise is an extremely powerful algorithm that is used often in procedural content generation. It is especially useful for games and other visual media such as movies.
Input x, y, z coordinates, and [x,y,z]%1 to find the coordinate&rsquo;s location within the cube. on each of the 4 unit coordinates(for 2d), generate a pseudorandom gradient vector, and define a positive direction( in the direction that it points to).]]></description>
</item>
<item>
  <title>SentenceDistance</title>
  <link>https://liudongdong1.github.io/sentencedistance/</link>
  <pubDate>Thu, 15 Oct 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sentencedistance/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/FZ5NYSFTLG.jpg" referrerpolicy="no-referrer">
      </div>0. Relative API CountVectorizer() 词频统计 &gt;&gt;&gt; from sklearn.feature_extraction.text import CountVectorizer &gt;&gt;&gt; corpus = [ ... &#39;This is the first document.&#39;, ... &#39;This document is the second document.&#39;, ... &#39;And this is the third one.&#39;, ... &#39;Is this the first document?&#39;, ... ] &gt;&gt;&gt; vectorizer = CountVectorizer() &gt;&gt;&gt; X = vectorizer.fit_transform(corpus) &gt;&gt;&gt; print(vectorizer.get_feature_names()) [&#39;and&#39;, &#39;document&#39;, &#39;first&#39;, &#39;is&#39;, &#39;one&#39;, &#39;second&#39;, &#39;the&#39;, &#39;third&#39;, &#39;this&#39;] &gt;&gt;&gt; print(X.toarray()) [[0 1 1 1]]></description>
</item>
<item>
  <title>Mathbasic</title>
  <link>https://liudongdong1.github.io/mathbasic/</link>
  <pubDate>Sat, 17 Oct 2020 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mathbasic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/tennis-racke-and-ball-on-court.jpg" referrerpolicy="no-referrer">
      </div>每一个概念，被定义就是为了去解决一个实际问题（问Why&amp;What），接着寻找解决问题的方法（问How），这个“方法”在计算机领域被称]]></description>
</item>
<item>
  <title>FitFunction</title>
  <link>https://liudongdong1.github.io/t-sne/</link>
  <pubDate>Thu, 18 Mar 2021 07:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/t-sne/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/NHFG4FDXGH.jpg" referrerpolicy="no-referrer">
      </div>1. SNE 基本原理 2. 目标函数求解 3. 对称 SNE 4. t-SNE 在对称 的改进是，首先通过在高维空间中使用高斯分布将距离转换为概率分布，然后在低维空间中，使用更加偏重长]]></description>
</item>
<item>
  <title>SkLearn Record</title>
  <link>https://liudongdong1.github.io/sklearn-record/</link>
  <pubDate>Wed, 14 Apr 2021 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/sklearn-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210414084511.png" referrerpolicy="no-referrer">
      </div>Supervised learning 1.1. Linear Models 1.2. Linear and Quadratic Discriminant Analysis 1.3. Kernel ridge regression 1.4. Support Vector Machines 1.5. Stochastic Gradient Descent 1.6. Nearest Neighbors 1.7. Gaussian Processes 1.8. Cross decomposition 1.9. Naive Bayes 1.10. Decision Trees 1.11. Ensemble methods 1.12. Multiclass and multioutput algorithms 1.13. Feature selection 1.14. Semi-supervised learning 1.15. Isotonic regression 1.16. Probability calibration 1.17. Neural network models (supervised) Unsupervised learning 2.1. Gaussian mixture models 2.2.]]></description>
</item>
<item>
  <title>HighDimensionClassify</title>
  <link>https://liudongdong1.github.io/highdimensionclassify/</link>
  <pubDate>Mon, 18 Oct 2021 17:00:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/highdimensionclassify/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/2P4CSFCJYF.jpg" referrerpolicy="no-referrer">
      </div>Zhu Q, Deng W, Zheng Z, et al. A Spectral-Spatial-Dependent Global Learning Framework for Insufficient and Imbalanced Hyperspectral Image Classification[J]. IEEE Transactions on Cybernetics, 2021. code [pdf]
Paper: Summary a spectral-spatial dependent global learning (SSDGL) framework based on global convolutional long short-term memory (GCL) and global joint attention mechanism (GJAM) is proposed for insufficient and imbalanced HSI classification. in SSDGL, the hierarchically balanced(H-B) sampling strategy and the weighted softmax loss are proposed to address the imbalanced sample problem.]]></description>
</item>
<item>
  <title>SpringRelative</title>
  <link>https://liudongdong1.github.io/springrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/08/11/27/mushrooms-6320451__340.jpg" referrerpolicy="no-referrer">
      </div>Spring 是一种轻量级开发框架，旨在提高开发人员的开发效率以及系统的可维护性。Spring 官网：https://spring.io/。 1. Spring IOC&amp;AOP .1. IOC Io]]></description>
</item>
<item>
  <title>SpringDesignPattern</title>
  <link>https://liudongdong1.github.io/springdesignpattern/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springdesignpattern/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/07/16/50/woman-6318447__340.jpg" referrerpolicy="no-referrer">
      </div>1. 控制反转(IoC)和依赖注入(DI) IoC(Inversion of Control,控制反转) 是Spring 中一个非常非常重要的概念，它不是什么技术，而是一种解耦的设]]></description>
</item>
<item>
  <title>Annotation_Lombok</title>
  <link>https://liudongdong1.github.io/annotation_lombok/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/annotation_lombok/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/02/15/25/daisy-6304767__340.jpg" referrerpolicy="no-referrer">
      </div>1. @Getter and @Setter 使用@Getter和/或@Setter注释任何字段，以使lombok自动生成默认的getter / setter。 默认的getter只是]]></description>
</item>
<item>
  <title>frameSpring</title>
  <link>https://liudongdong1.github.io/framespring/</link>
  <pubDate>Sun, 30 May 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/framespring/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/01/16/49/housefly-6221535__340.jpg" referrerpolicy="no-referrer">
      </div>Spring 框架指的都是 Spring Framework，它是很多模块的集合，使用这些模块可以很方便地协助我们进行开发。这些模块是：核心容器、数据访问/集成,、W]]></description>
</item>
<item>
  <title>springbootJPA</title>
  <link>https://liudongdong1.github.io/springbootjpa/</link>
  <pubDate>Thu, 10 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springbootjpa/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/01/09/59/city-6220689__340.jpg" referrerpolicy="no-referrer">
      </div>SpringData：其实SpringData就是Spring提供了一个操作数据的框架。而SpringData JPA只是SpringData]]></description>
</item>
<item>
  <title>Annotation_JPA</title>
  <link>https://liudongdong1.github.io/annotation_jpa/</link>
  <pubDate>Wed, 16 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/annotation_jpa/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/06/10/28/cygnets-6233080__340.jpg" referrerpolicy="no-referrer">
      </div>JPA基本注解 @Entity @Entity 标注用于实体类声明语句之前，指出该Java 类为实体类，将映射到指定的数据库表。如声明一个实体类 Custom，它将映射到数据]]></description>
</item>
<item>
  <title>springbootAOP</title>
  <link>https://liudongdong1.github.io/springaop/</link>
  <pubDate>Fri, 18 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springaop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/11/07/11/32/laptop-1031224__340.jpg" referrerpolicy="no-referrer">
      </div>OOP引入封装、继承、多态等概念来建立一种对象层次结构，用于模拟公共行为的一个集合。不过OOP只允许开发者定义纵向的关系，但并不适合定义横向]]></description>
</item>
<item>
  <title>SpringAnnotation</title>
  <link>https://liudongdong1.github.io/springannotation/</link>
  <pubDate>Sat, 19 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springannotation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/27/14/40/anemone-6288318__340.jpg" referrerpolicy="no-referrer">
      </div>1. @SpringBootApplication @SpringBootApplication public class SpringSecurityJwtGuideApplication { public static void main(java.lang.String[] args) { SpringApplication.run(SpringSecurityJwtGuideApplication.class, args); } } 我们可以把 @SpringBootApplication看作是 @Configuration、@EnableA]]></description>
</item>
<item>
  <title>SpringWebEngine</title>
  <link>https://liudongdong1.github.io/springwebengine/</link>
  <pubDate>Sun, 27 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springwebengine/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/12/14/09/40/facebook-1905890__340.jpg" referrerpolicy="no-referrer">
      </div>1. Freemarker https://blog.csdn.net/weixin_43848040/article/details/112257113 2. Thymeleaf 3. Beetl 4. Enjoy ]]></description>
</item>
<item>
  <title>SpringException</title>
  <link>https://liudongdong1.github.io/springexception/</link>
  <pubDate>Sun, 27 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springexception/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/02/15/25/daisy-6304767__340.jpg" referrerpolicy="no-referrer">
      </div>Spring MVC 通过 HandlerExceptionResolver 处理程序的异常，包括 Handler映射、数据绑定以及目标方法执行 时发生的异常。SpringMVC 提供的 HandlerExceptionResolver 的实现类 1. 全局异常捕获处理]]></description>
</item>
<item>
  <title>Annotation_basic</title>
  <link>https://liudongdong1.github.io/annotation_basic/</link>
  <pubDate>Sun, 27 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/annotation_basic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/10/05/09/45/cobweb-3725540__340.jpg" referrerpolicy="no-referrer">
      </div>java注解是JDK1.5引入的一种注释机制，java语言的类、方法、变量、参数和包都可以被注解标注。和Javadoc不同，java注解可以]]></description>
</item>
<item>
  <title>SpringProperties</title>
  <link>https://liudongdong1.github.io/springproperties/</link>
  <pubDate>Sun, 27 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springproperties/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/11/07/01/42/nature-4607496__340.jpg" referrerpolicy="no-referrer">
      </div>1. application.properties配置 |--src |--main |--resources |--application.properties #启用调试日志。 debug=false #启用跟踪日志。 trace=false #-------------------------------------- # LOGGING 日记 #-------------------------------------- # 日志配置文件的位置。 例如，Log]]></description>
</item>
<item>
  <title>SpringAdmin</title>
  <link>https://liudongdong1.github.io/springadmin/</link>
  <pubDate>Sun, 27 Jun 2021 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springadmin/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/01/04/11/38/spider-web-3060448__340.jpg" referrerpolicy="no-referrer">
      </div>Spring Boot Actuator 的使用，Spring Boot Actuator 提供了对单个 Spring Boot 的监控，信息包含：应用状态、内存、线程、堆栈等等，比较全面的监控了 Spring Boot 应用的整个生命周期。 Spring Boot]]></description>
</item>
<item>
  <title>SpringActuator</title>
  <link>https://liudongdong1.github.io/springactuator/</link>
  <pubDate>Sun, 27 Jun 2021 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springactuator/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/06/03/13/57/digital-marketing-1433427__340.jpg" referrerpolicy="no-referrer">
      </div>Spring Boot Actuator 模块提供了生产级别的功能，比如健康检查，审计，指标收集，HTTP 跟踪等，帮助我们监控和管理Spring Boot 应用。这个模块是一个采集应用内]]></description>
</item>
<item>
  <title>SpringLog</title>
  <link>https://liudongdong1.github.io/springlog/</link>
  <pubDate>Mon, 28 Jun 2021 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springlog/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/01/02/10/47/search-engine-optimization-586422__340.jpg" referrerpolicy="no-referrer">
      </div>Logback is one of the most widely used logging frameworks in the Java Community. It&rsquo;s a replacement for its predecessor, Log4j. Logback offers a faster implementation than Log4j, provides more options for configuration, and more flexibility in archiving old log files. slf4j是一系列的日志接口，而log4j和logback]]></description>
</item>
<item>
  <title>springboot缓存机制</title>
  <link>https://liudongdong1.github.io/springboot%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link>
  <pubDate>Wed, 18 Aug 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/springboot%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QSUEDKLFWO.jpg" referrerpolicy="no-referrer">
      </div>Spring从3.1开始定义了org.springframework.cache.Cache和org.springframework.cac]]></description>
</item>
<item>
  <title>Template</title>
  <link>https://liudongdong1.github.io/template/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/template/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>level: author: date: keyword: Paper: Summary Research Objective Application Area: Purpose: Proble Statement previous work: Methods Problem Formulation: system overview: 【Qustion 1】 Evaluation Environment: Dataset: Conclusion Notes 去加强了解 Paper: LIRe Summary 现象，辅助支撑材料，目前按解决方案不足, 介于此，我们想]]></description>
</item>
<item>
  <title>AnchorIntroduce</title>
  <link>https://liudongdong1.github.io/anchorintroduce/</link>
  <pubDate>Tue, 25 Aug 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/anchorintroduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/laptop-disposable-cup-and-yellow-flowers-in-vase-on-table.jpg" referrerpolicy="no-referrer">
      </div>在网络最后的输出中，对于每个grid cell产生3个bounding box，每个bounding box的输出有三类参数：一个是对象的box参]]></description>
</item>
<item>
  <title>AndroidPytorch</title>
  <link>https://liudongdong1.github.io/androidpytorch/</link>
  <pubDate>Fri, 21 May 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/androidpytorch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/19/05/12/maple-6808150__340.jpg" referrerpolicy="no-referrer">
      </div>1. 模型转化 import torch import torchvision from torch.utils.mobile_optimizer import optimize_for_mobile model = torchvision.models.mobilenet_v3_small(pretrained=True) #model.load_state_dict(torch.load(model_pth)) # 加载参数 model.eval() example = torch.rand(1, 3, 224, 224) traced_script_module = torch.jit.trace(model, example) # 模型转化 optimized_traced_model = optimize_for_mobile(traced_script_module) optimized_traced_model.save(&#34;model.pt&#34;) # 保存文件 optimized_traced_model._save_for_lite_interpreter(&#34;app/src/main/assets/model.pt&#34;) 2. Gradle 依赖 implementation &#39;org.pytorch:pytorch_android_lite:1.9.0&#39; implementation &#39;org.pytorch:pytorch_android_torchvision:1.9.0&#39; 3. 封装函数 public class MainActivity extends AppCompatActivity { @Override protected void]]></description>
</item>
<item>
  <title>ThingsBoardLearning</title>
  <link>https://liudongdong1.github.io/thingsboardlearning/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/thingsboardlearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/circuit-macro_MADL8CN3KW.jpg" referrerpolicy="no-referrer">
      </div>ThingsBoard is an open-source IoT platform that enables rapid development, management, and scaling of IoT projects. Our goal is to provide the out-of-the-box IoT cloud or on-premises solution that will enable server-side infrastructure for your IoT applications.
scalable: the horizontally scalable platform, built using leading open-source technologies. fault-tolerant: no single-point-of-failure, every node in the cluster is identical. robust and efficient: a single server node can handle tens or even hundreds of thousands of devices, depending on the use-case.]]></description>
</item>
<item>
  <title>SnowBoy</title>
  <link>https://liudongdong1.github.io/snowboy/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/snowboy/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/28/04/12/snow-6898585__340.jpg" referrerpolicy="no-referrer">
      </div>snowboy 是一个开源的、轻量级语音唤醒引擎，可以通过它很轻松地创建属于自己的类似“hey, Siri” 的唤醒词。它的主要特性如下： 高度可定制性。可自由]]></description>
</item>
<item>
  <title>SmartHome</title>
  <link>https://liudongdong1.github.io/smarthome/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/smarthome/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110455.png" referrerpolicy="no-referrer">
      </div>keyword: Human-centered computing , LoRa Paper: WIDESEE WIDESEE presents solutions across software and hardware to overcome two aspects of challenges for wide-range contactless sensing: the interference brought by the device mobility and LoRa’s high sensitvity the ambiguous target information such as location when employing just a single pair of transceivers Research Objective Application Area: Purpose: Proble Statement limited sensing range, which hinders its applications in]]></description>
</item>
<item>
  <title>skinSense</title>
  <link>https://liudongdong1.github.io/skinsense/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/skinsense/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110547.png" referrerpolicy="no-referrer">
      </div>人类的皮肤可以感知法向力和剪切力的细微变化(即自解耦)，并能够以更高的分辨率感知刺激（即超分辨）。换句话说，人类的指尖可以感受到压力和纹理，]]></description>
</item>
<item>
  <title>OrientationRelative</title>
  <link>https://liudongdong1.github.io/orientationrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/orientationrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/01/06/07/53/social-3064515__340.jpg" referrerpolicy="no-referrer">
      </div>1.计算机视觉-相机位姿 指给定若干图像，估计其中相机运动的问题，最终目标是获得表征相机运动的旋转矩阵R和平移向量t。求解方法通常分特征点法和]]></description>
</item>
<item>
  <title>IoTWorkRelated</title>
  <link>https://liudongdong1.github.io/iotworkrelated/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/iotworkrelated/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200703094358519.png" referrerpolicy="no-referrer">
      </div>Concentrate your bets: focus on select use cases and tackle barriers to adoption such as security, ROI, IT and operational technology integration. Package IoT solutions into scalable products that you then can roll out to customers. Don&rsquo;t try alone: partnerships tend to be more effective with selective approach based on the use case; level: author: Kartikeya Bhardwaj, CA,USA; WeiChen(Carnegie Mellon University); Radu Marculescu(Texas at Austing) date: 2020 keyword: Federated Learning;]]></description>
</item>
<item>
  <title>HumanCenteredSensing</title>
  <link>https://liudongdong1.github.io/humancenteredsensing/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/humancenteredsensing/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/02/07/21/03/computer-1185626__340.jpg" referrerpolicy="no-referrer">
      </div>1. 人体存在感知 **目标：**检测环境中的所有人体，标记出每个人体的坐标位置；不限人体数量，适应中低空斜拍、人体轻度遮挡、截断等场景 .1. WAYV AIR WAYV AIR]]></description>
</item>
<item>
  <title>HapticsRelative</title>
  <link>https://liudongdong1.github.io/hapticsrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/hapticsrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/blue-abstract-glass-balls.jpg" referrerpolicy="no-referrer">
      </div>在未来，随着可穿戴和智能手机的发展，力触觉设备小型化和与智能手机、可穿戴设备集成，将为时不远。彼时，或许我们真的可以借助力触觉安慰远在它乡哭]]></description>
</item>
<item>
  <title>HanTTS</title>
  <link>https://liudongdong1.github.io/chinese_text_to_speech/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/chinese_text_to_speech/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/27/16/05/christmas-6828416__340.jpg" referrerpolicy="no-referrer">
      </div>1. HanTTS ]]></description>
</item>
<item>
  <title>EIT</title>
  <link>https://liudongdong1.github.io/eit/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/eit/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/EKIMATYVZF.jpg" referrerpolicy="no-referrer">
      </div>生物电阻抗断层成像(Electrical Impedance Tomography，EIT)技术是一种新型医学功能成像技术，它的原理是在人体表面电极上施加一微弱]]></description>
</item>
<item>
  <title>AIOTSummary</title>
  <link>https://liudongdong1.github.io/aiotsummary/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/aiotsummary/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210527203453.png" referrerpolicy="no-referrer">
      </div>智能物联网（AIoT）是2018年兴起的概念，指系统通过各种信息传感器实时采集 各类信息（一般是在监控、互动、连接情境下的），在终端设备、边缘]]></description>
</item>
<item>
  <title>AIOTFrameWork</title>
  <link>https://liudongdong1.github.io/aiotframework/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/aiotframework/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://image.shutterstock.com/image-photo/digital-marketing-businessman-using-modern-260nw-1053868622.jpg" referrerpolicy="no-referrer">
      </div>Resource IoT 项目汇总：https://github.com/phodal/awesome-iot]]></description>
</item>
<item>
  <title>CameraOpencv</title>
  <link>https://liudongdong1.github.io/cameraopencv/</link>
  <pubDate>Mon, 25 May 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cameraopencv/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/15/14/52/strawberries-6338813__340.jpg" referrerpolicy="no-referrer">
      </div>import cv2 from PyQt5.QtCore import QTimer class Camera(object): def __init__(self,timesInterval): self.device = 0 self.timesInterval =timesInterval #ms self.cap = cv2.VideoCapture() self.timer = QTimer() #A single-shot timer fires only once, non-single-shot timers fire every interval milliseconds. def stop(self): self.timer.stop() self.cap.release() return True def pause(self): self.timer.stop() def begin(self): self.timer.start(self.timesInterval) def start(self, device): if self.cap.isOpened(): self.cap.release() self.timer.start(self.timesInterval) self.cap.open(device) self.device = device return True def restart(self): self.start(self.device) @property def is_pause(self): return self.cap.isOpened() and not self.timer.isActive()]]></description>
</item>
<item>
  <title>Multi-Sense</title>
  <link>https://liudongdong1.github.io/multi-sense/</link>
  <pubDate>Wed, 24 Jun 2020 19:30:32 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/multi-sense/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/apple-iphone-smartphone-technology-1.jpg" referrerpolicy="no-referrer">
      </div>level: IEEE Robotics and automation letters date: &lsquo;2019,10&rsquo; keyword: Deep learning in robotics and automation,action segmentation,ergonomic safety. Paper: Ergonomic Risk predition we present a first of its kind end-to-end deep learning system for ergonomic risk assessment during indoor object manipulation using camera videos. Our learning system is based on action segmentation*, where an action class (with a corresponding risk label) is predicted for every video frame. The REBA model assigns]]></description>
</item>
<item>
  <title>IoT比赛项目</title>
  <link>https://liudongdong1.github.io/iot%E6%AF%94%E8%B5%9B%E9%A1%B9%E7%9B%AE/</link>
  <pubDate>Sat, 11 Jul 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/iot%E6%AF%94%E8%B5%9B%E9%A1%B9%E7%9B%AE/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/smartphone-camera_TBGNSSQV6B.jpg" referrerpolicy="no-referrer">
      </div>1. 基于颜色的产品分拣系统 控制器电路由一个连接在它上面的摄像头组成，它可以检测前面小物体的颜色。电动机用来将物体送入摄像室。一旦检测到颜色，一]]></description>
</item>
<item>
  <title>BandWatchSurvey</title>
  <link>https://liudongdong1.github.io/bandwatchsurvey/</link>
  <pubDate>Sat, 11 Jul 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bandwatchsurvey/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/59.jpeg" referrerpolicy="no-referrer">
      </div>MetaSensors, comes in a small package that includes motion and environmental sensors. Our Sensors communicate to Devices including Smartphone, Tablets, Computers, Gateway Hubs and RaspberryPis using Bluetooth Low Energy. 1. Fitbit Sense手表 EDA(即皮肤电活动)传感器基本上可以跟踪皮肤汗液中的电变化,可]]></description>
</item>
<item>
  <title>ObjectCenteredSensing</title>
  <link>https://liudongdong1.github.io/objectcenteredsensing/</link>
  <pubDate>Wed, 19 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/objectcenteredsensing/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/10/12/22/17/business-2846221__340.jpg" referrerpolicy="no-referrer">
      </div>1. 物体检测 .1. 流体 D. V. Q. Rodrigues, D. Rodriguez and C. Li, &ldquo;Liquid Aerosol Detection Based on Sub-THz Portable Doppler Radars,&rdquo; 2020 IEEE Asia-Pacific Microwave Conference (APMC), 2020, pp. 504-506, doi: 10.1109/APMC47863.2020.9331483. [pdf] Bala B S, Swetha M, Tamilarasi M, et al. Survey on women safety using IOT[J]. International Journal of Computer Engineering in Research Trends, 2018, 5(2): 16-24. [pdf] .2. 材质分类]]></description>
</item>
<item>
  <title>SmartWatchRelative</title>
  <link>https://liudongdong1.github.io/smartwatchrelative/</link>
  <pubDate>Sat, 24 Oct 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/smartwatchrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>level: author: Gutao date: 2018
Zhang, Yu, et al. &ldquo;Findroidhr: Smartwatch gesture input with optical heartrate monitor.&rdquo; Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies 2.1 (2018): 1-42.
Paper: Findroidhr ]]></description>
</item>
<item>
  <title>HandRecognition</title>
  <link>https://liudongdong1.github.io/handrecognition/</link>
  <pubDate>Sat, 24 Oct 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/handrecognition/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>1. IMU，肌电信号 1.1. Serendipity Wen, Hongyi, Julian Ramos Rojas, and Anind K. Dey. &ldquo;Serendipity: Finger gesture recognition using an off-the-shelf smartwatch.&rdquo; Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems. 2016. 107 1.1.1. Relative Expanding interaction space: SkinWatch [9] provides gesture input by sensing deformation of skin. Abracadabra [4] enables off-the-screen fine motor control by placing a magnet on the]]></description>
</item>
<item>
  <title>image</title>
  <link>https://liudongdong1.github.io/image/</link>
  <pubDate>Sun, 25 Apr 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/image/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/15/03/35/chrysanthemum-6337374__340.jpg" referrerpolicy="no-referrer">
      </div>1. imageHangle # WARNING: you are on the master branch, please refer to the examples on the branch that matches your `cortex version` import cv2 import numpy as np def resize_image(image, desired_width): current_width = image.shape[1] scale_percent = desired_width / current_width width = int(image.shape[1] * scale_percent) height = int(image.shape[0] * scale_percent) resized = cv2.resize(image, (width, height), interpolation=cv2.INTER_AREA) return resized def compress_image(image, grayscale=True, desired_width=416, top_crop_percent=0.45): if grayscale: image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY) image]]></description>
</item>
<item>
  <title>gps</title>
  <link>https://liudongdong1.github.io/gps/</link>
  <pubDate>Tue, 25 May 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gps/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/05/26/21/21/blueberries-3432295__340.jpg" referrerpolicy="no-referrer">
      </div># WARNING: you are on the master branch, please refer to the examples on the branch that matches your `cortex version` import serial, pynmea2, time, threading as td import logging logger = logging.getLogger(__name__) class ReadGPSData(td.Thread): &#34;&#34;&#34; Class to read the data off of the EC25-E&#39;s GPS module. Can be easily adapted to work with any other GPS module. &#34;&#34;&#34; def __init__(self, write_port, read_port, baudrate, name=&#34;GPS&#34;): &#34;&#34;&#34; write_port - The serial]]></description>
</item>
<item>
  <title>ThingsBoard_FileStructure</title>
  <link>https://liudongdong1.github.io/thingsboard_filestructure/</link>
  <pubDate>Wed, 10 Nov 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/thingsboard_filestructure/</guid>
  <description><![CDATA[1. 文件目录]]></description>
</item>
<item>
  <title>GIS Introduce</title>
  <link>https://liudongdong1.github.io/gisintroduce/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gisintroduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/flower-painting_Q01KCARQ6X.jpg" referrerpolicy="no-referrer">
      </div>1. 概念介绍 地理信息系统（Geographic Information System或 Geo－Information system，GIS）有时又称为“地学信息系统”。]]></description>
</item>
<item>
  <title>Android_网络</title>
  <link>https://liudongdong1.github.io/android_%E7%BD%91%E7%BB%9C/</link>
  <pubDate>Sun, 21 Nov 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E7%BD%91%E7%BB%9C/</guid>
  <description><![CDATA[学习的案例代码都采用了Handler机制进行UI和后台请求的消息传输. Android 支持JDK网络编程 ServerSocket， Socket，Datag]]></description>
</item>
<item>
  <title>Android_手势</title>
  <link>https://liudongdong1.github.io/android_%E6%89%8B%E5%8A%BF/</link>
  <pubDate>Sun, 21 Nov 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E6%89%8B%E5%8A%BF/</guid>
  <description><![CDATA[Android关于手势的操作提供两种形式：一种是针对用户手指在屏幕上划出的动作而进行移动的检测，这些手势的检测通过android提供的监听器]]></description>
</item>
<item>
  <title>Android_手机桌面开发</title>
  <link>https://liudongdong1.github.io/android_%E6%89%8B%E6%9C%BA%E6%A1%8C%E9%9D%A2%E5%BC%80%E5%8F%91/</link>
  <pubDate>Sun, 21 Nov 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E6%89%8B%E6%9C%BA%E6%A1%8C%E9%9D%A2%E5%BC%80%E5%8F%91/</guid>
  <description><![CDATA[1. 动态壁纸 public class LiveWallpaper extends WallpaperService { // 记录用户触碰点的位图 private Bitmap heart; // 实现WallpaperService必须实现的抽象方法 @Override public WallpaperService.Engine onCreateEngine() { // 加载心形图片 heart = BitmapFactory.decodeResource(getResources(), R.drawable.heart); //]]></description>
</item>
<item>
  <title>Android_快捷键</title>
  <link>https://liudongdong1.github.io/android_%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
  <pubDate>Sun, 21 Nov 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/24/02/48/christmas-6820100__340.jpg" referrerpolicy="no-referrer">
      </div>1. 快捷键 Ctrl + F 当前文件查找内容 Edit-Find-Replace Ctrl + H 全局查找内容 Edit-Find-Find in Path Double Shift 全局搜索，快速定位想打开的文件 Ctrl + E 显示最近编辑过的文件 Alt + Enter 显示快捷选项 (快速]]></description>
</item>
<item>
  <title>Android_快捷键</title>
  <link>https://liudongdong1.github.io/android-%E6%8A%80%E8%83%BD%E8%A6%81%E6%B1%82/</link>
  <pubDate>Sun, 21 Nov 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android-%E6%8A%80%E8%83%BD%E8%A6%81%E6%B1%82/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/24/02/48/christmas-6820100__340.jpg" referrerpolicy="no-referrer">
      </div>手机应用开发，rom开发，像手机厂商，车载多媒体娱乐系统，智能云镜系统，TV机顶盒等 性能优化方向：渲染速度、网络请求体验、I/O 优化、热修复]]></description>
</item>
<item>
  <title>Android_知识点todo</title>
  <link>https://liudongdong1.github.io/android%E7%9F%A5%E8%AF%86%E7%82%B9todo/</link>
  <pubDate>Fri, 24 Dec 2021 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android%E7%9F%A5%E8%AF%86%E7%82%B9todo/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/16/15/35/technology-6801334__340.jpg" referrerpolicy="no-referrer">
      </div>Binder死亡通知机制之linkToDeath：http://gityuan.com/2016/10/03/binder_linktode]]></description>
</item>
<item>
  <title>Mvp-arch</title>
  <link>https://liudongdong1.github.io/mvp-arch/</link>
  <pubDate>Mon, 21 Nov 2022 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mvp-arch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/24/02/48/christmas-6820100__340.jpg" referrerpolicy="no-referrer">
      </div>Architecture Blueprint Project Structure data: It contains all the data accessing and manipulating components. di: Dependency providing classes using Dagger2. ui: View classes along with their corresponding Presenters. service: Services for the application. utils: Utility classes. 数据层面 通过AppDataManager 提供数据库，网络数据，本地P]]></description>
</item>
<item>
  <title>Android_性能优化汇总</title>
  <link>https://liudongdong1.github.io/android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
  <pubDate>Sat, 24 Dec 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/16/15/35/technology-6801334__340.jpg" referrerpolicy="no-referrer">
      </div>性能问题排查： 1.数据埋点上报 2.使用控制台的NetWork、Performance等工具 3.webpack-bundle-analyzer]]></description>
</item>
<item>
  <title>通信机制</title>
  <link>https://liudongdong1.github.io/%E9%80%9A%E4%BF%A1%E6%9C%BA%E5%88%B6/</link>
  <pubDate>Wed, 15 Sep 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%80%9A%E4%BF%A1%E6%9C%BA%E5%88%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/VTRBWVOXY6.jpg" referrerpolicy="no-referrer">
      </div>一对一的交互方式： Request/response： 标准的请求/应答方式。客户端发送请求到服务并等待应答。客户端期待应答在适当的时间内到达。]]></description>
</item>
<item>
  <title>常用注意代码</title>
  <link>https://liudongdong1.github.io/%E5%B8%B8%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BB%A3%E7%A0%81/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%B8%B8%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BB%A3%E7%A0%81/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/5KV02LKPEL.jpg" referrerpolicy="no-referrer">
      </div>一、MyBatis 不要为了多个查询条件而写 1 = 1 当遇到多个查询条件，使用where 1=1 可以很方便的解决我们的问题，但是这样很可能会造成非常大的]]></description>
</item>
<item>
  <title>SpringRelative</title>
  <link>https://liudongdong1.github.io/website_architecture/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/website_architecture/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/04/09/22/03/strawberries-6165597__340.jpg" referrerpolicy="no-referrer">
      </div>1. 大型网站架构演化 2. 大型架构模式 3. 大型网站核心架构要素 4. 瞬时响应:网站的高性能架构 5. 万无一失:网站的高可用架构 6. 永无止境:网站的伸缩性架构 7.]]></description>
</item>
<item>
  <title>javaDoc</title>
  <link>https://liudongdong1.github.io/javadoc/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/javadoc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>第一段：概要描述，通常用一句或者一段话简要描述该类的作用，以英文句号作为结束 第二段：详细描述，通常用一段或者多段话来详细描述该类的作用，一般]]></description>
</item>
<item>
  <title>DL4J</title>
  <link>https://liudongdong1.github.io/dl4jusage/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dl4jusage/</guid>
  <description><![CDATA[Eclipse Deeplearning4j is the first commercial-grade, open-source, distributed deep-learning library written for Java and Scala. Integrated with Hadoop and Apache Spark, DL4J brings AI to business environments for use on distributed GPUs and CPUs.
1. DataPrepare Deeplearning4j works with a lot of different data types, such as images, CSV, plain text, images, audio, video and, pretty much any other data type you can think of.
.1. RecordReader .2. DataSetIterator ScoreIterationListener - (Source, Javadoc) - Logs the loss function score every N training iterations PerformanceListener - (Source, Javadoc) - Logs performance (examples per sec, minibatches per sec, ETL time), and optionally score, every N training iterations.]]></description>
</item>
<item>
  <title>CodeRegulation</title>
  <link>https://liudongdong1.github.io/coderegulation/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/coderegulation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210510221051.png" referrerpolicy="no-referrer">
      </div>先进行需求分析和系统设计，这样可以帮助我们正确的理解功能，然后再开发代码，在开发时应该边开发编写测试代码，保证开发的函数功能是正确的，否则都]]></description>
</item>
<item>
  <title>Android_Test</title>
  <link>https://liudongdong1.github.io/android_test/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_test/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/16/15/35/technology-6801334__340.jpg" referrerpolicy="no-referrer">
      </div>本地单元测试(Junit Test)， 本地单元测试是纯java代码的测试，只运行在本地电脑的JVM环境上，不依赖于Android框架的任何ap]]></description>
</item>
<item>
  <title>IOStream</title>
  <link>https://liudongdong1.github.io/iostream/</link>
  <pubDate>Mon, 10 May 2021 19:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/iostream/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210510212928.png" referrerpolicy="no-referrer">
      </div>字节流可以处理任何类型的数据，如图片，视频等; 字符流只能处理字符类型的数据。 读写单位不同：字节流以字节（8bit）为单位，字符流以字符为单位]]></description>
</item>
<item>
  <title>StateMode</title>
  <link>https://liudongdong1.github.io/statemode/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/statemode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/UJVB2QEHNH.jpg" referrerpolicy="no-referrer">
      </div>状态模式（State Pattern）：它主要用来解决对象在多种状态转换时，需要对外输出不同的行为的问题。状态和行为是一一对应的，状态之间可以]]></description>
</item>
<item>
  <title>ObserveMode</title>
  <link>https://liudongdong1.github.io/observemode/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/observemode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/NKQWPR6KVP.jpg" referrerpolicy="no-referrer">
      </div>观察者模式又被称为发布订阅（Publish/Subscribe）模式，属于对象行为型模式。它定义对象间的一种一对多的依赖关系，让多个观察者对]]></description>
</item>
<item>
  <title>FacadeMode</title>
  <link>https://liudongdong1.github.io/facademode/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/facademode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210514222616.png" referrerpolicy="no-referrer">
      </div>定义了一个高层、统一的接口，外部与通过这个统一的接口对子系统中的一群接口进行访问。通过创建一个统一的类，用来包装子系统中一个或多个复杂的类，]]></description>
</item>
<item>
  <title>FactorMode</title>
  <link>https://liudongdong1.github.io/factormode/</link>
  <pubDate>Sun, 23 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/factormode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210514222616.png" referrerpolicy="no-referrer">
      </div>1. 工厂方法 在工厂方法模式中，抽象产品类Product负责定义产品的共性，事项对事物最抽象的定义，Creator为抽象创建类，也就是抽象工厂，]]></description>
</item>
<item>
  <title>FlyweightMode</title>
  <link>https://liudongdong1.github.io/flyweightmode/</link>
  <pubDate>Sat, 03 Jul 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/flyweightmode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210514222616.png" referrerpolicy="no-referrer">
      </div>运用共享技术有效地支持大量细粒度对象的复用。系统只使用少量的对象，而这些对象都很相似，状态变化很小，可以实现对象的多次复用。由于享元模式要求]]></description>
</item>
<item>
  <title>Kubernetes-开放接口</title>
  <link>https://liudongdong1.github.io/kubernetes-%E5%BC%80%E6%94%BE%E6%8E%A5%E5%8F%A3/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes-%E5%BC%80%E6%94%BE%E6%8E%A5%E5%8F%A3/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>Kubernetes作为云原生应用的基础调度平台，相当于云原生的操作系统，为了便于系统的扩展，Kubernetes中开放的以下接口，可以分别]]></description>
</item>
<item>
  <title>Kubernetes-workload</title>
  <link>https://liudongdong1.github.io/kubernetes-practice/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes-practice/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/12/01/07/pacific-gull-7126935__340.jpg" referrerpolicy="no-referrer">
      </div>A workload is an application running on Kubernetes. Whether your workload is a single component or several that work together, on Kubernetes you run it inside a set of pods. In Kubernetes, a Pod represents a set of running containers on your cluster. Deployment and ReplicaSet (replacing the legacy resource ReplicationController). Deployment is a good fit for managing a stateless application workload on your cluster, where any Pod in the]]></description>
</item>
<item>
  <title>Kubernetes-Service&amp;Load Balancing&amp;Networking</title>
  <link>https://liudongdong1.github.io/kubernets-servicesload-balancenetworking/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernets-servicesload-balancenetworking/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/04/15/42/dog-7174266__340.jpg" referrerpolicy="no-referrer">
      </div>Kubernetes IP addresses exist at the Pod scope - containers within a Pod share their network namespaces - including their IP address and MAC address. This means that containers within a Pod can all reach each other&rsquo;s ports on localhost. This also means that containers within a Pod must coordinate port usage, but this is no different from processes in a VM. Containers within a Pod use networking to communicate]]></description>
</item>
<item>
  <title>Kubernetes-Storage</title>
  <link>https://liudongdong1.github.io/kubernetes-storage/</link>
  <pubDate>Mon, 23 May 2022 21:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes-storage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/18/01/11/beach-7019772__340.jpg" referrerpolicy="no-referrer">
      </div>in-tree：代码逻辑在 K8s 官方仓库中； out-of-tree：代码逻辑在 K8s 官方仓库之外，实现与 K8s 代码的解耦； PV：PersistentVo]]></description>
</item>
<item>
  <title>资源命名</title>
  <link>https://liudongdong1.github.io/03-%E8%B5%84%E6%BA%90%E5%91%BD%E5%90%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/03-%E8%B5%84%E6%BA%90%E5%91%BD%E5%90%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/workshop-wrench_O8DVPXYOIY.jpg" referrerpolicy="no-referrer">
      </div>在面向资源的API中，资源是命名实体，资源名称是资源的标识符。每个资源必须有其唯一的资源名称。资源名称由资源ID本身，父资源的ID和资源对应]]></description>
</item>
<item>
  <title>软件程序设计原则</title>
  <link>https://liudongdong1.github.io/%E8%BD%AF%E4%BB%B6%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>blinkfox</author>
  <guid>https://liudongdong1.github.io/%E8%BD%AF%E4%BB%B6%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="http://static.blinkfox.com/20181124-design.jpg" referrerpolicy="no-referrer">
      </div>一、设计模式原则 开闭原则：在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。使用接口和抽象类； 里氏代换原则：任何基类可以]]></description>
</item>
<item>
  <title>命名约定</title>
  <link>https://liudongdong1.github.io/08-%E5%91%BD%E5%90%8D%E7%BA%A6%E5%AE%9A/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/08-%E5%91%BD%E5%90%8D%E7%BA%A6%E5%AE%9A/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/MEOFNGJRRG.jpg" referrerpolicy="no-referrer">
      </div>为了在跨API开发中向开发者提供一致的开发体验，所有的命名应该保证： 简单 直观 一致 这适用于接口、资源、集合、方法以及消息的命名。 因为很多开发者]]></description>
</item>
<item>
  <title>面向资源设计</title>
  <link>https://liudongdong1.github.io/02-%E9%9D%A2%E5%90%91%E8%B5%84%E6%BA%90%E7%9A%84%E8%AE%BE%E8%AE%A1/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/02-%E9%9D%A2%E5%90%91%E8%B5%84%E6%BA%90%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/airplane-sky_KQLWXFOKMH.jpg" referrerpolicy="no-referrer">
      </div>2000年，为了与HTTP1.1搭配使用，REST架构风格出现。它的核心原则是定义用少量方法就能操作的命名资源。资源和方法可视为API的名词]]></description>
</item>
<item>
  <title>单元电路</title>
  <link>https://liudongdong1.github.io/%E5%8D%95%E5%85%83%E7%94%B5%E8%B7%AF/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%8D%95%E5%85%83%E7%94%B5%E8%B7%AF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/07/14/16/27/pen-4337521__340.jpg" referrerpolicy="no-referrer">
      </div>1、直流稳压电源电路； 2、运算放大器电路； 3、信号产生电路； 4、信号处理电路； 5、传感器应用电路； 6、功率驱动电路； 7、电平转换电路； 8、显]]></description>
</item>
<item>
  <title>错误资源命名</title>
  <link>https://liudongdong1.github.io/07-%E9%94%99%E8%AF%AF/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/07-%E9%94%99%E8%AF%AF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/YZ8OZGZJ6G.jpg" referrerpolicy="no-referrer">
      </div>错误模型 错误模型在逻辑上由google.rpc.Status定义，当API发生错误时，返回一个Status实例给客户端。 以下代码段显示了错误]]></description>
</item>
<item>
  <title>标准字段</title>
  <link>https://liudongdong1.github.io/06-%E6%A0%87%E5%87%86%E5%AD%97%E6%AE%B5/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/06-%E6%A0%87%E5%87%86%E5%AD%97%E6%AE%B5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/MSZ3ZOAWI1.jpg" referrerpolicy="no-referrer">
      </div>字段名 类型 描述 name string name字段应该包含相对资源名 parent string 对于资源定义和List/Create请求，parent字段应包含父级相对资源名 create_time Timestamp 一个实]]></description>
</item>
<item>
  <title>标准方法</title>
  <link>https://liudongdong1.github.io/04-%E6%A0%87%E5%87%86%E6%96%B9%E6%B3%95/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/04-%E6%A0%87%E5%87%86%E6%96%B9%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/grapes-closeup_V6MCEBULFC.jpg" referrerpolicy="no-referrer">
      </div>本章阐述标准方法的概念，包括了List, Get, Create, Update, and Delete。很多不同类型的API都拥有非常类似的语义，把它们归纳为标准方法能够显著降低复杂]]></description>
</item>
<item>
  <title>版本控制</title>
  <link>https://liudongdong1.github.io/12-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/12-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/DMB3G2QBVO.jpg" referrerpolicy="no-referrer">
      </div>提供了网络 API 的版本控制指南。由于一个 API 服务可能提供多个 [API 接口](17-术语表.md#API接口(API Interface))，因此 API 版本控制]]></description>
</item>
<item>
  <title>VideoRelative</title>
  <link>https://liudongdong1.github.io/zerocopy/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/zerocopy/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501105755.png" referrerpolicy="no-referrer">
      </div>对于RocketMQ来说这两个步骤使用的是mmap+write，而Kafka则是使用mmap+write持久化数据，发送数据使用sendfi]]></description>
</item>
<item>
  <title>uboot启动流程</title>
  <link>https://liudongdong1.github.io/uboot-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/uboot-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
  <description><![CDATA[.text: “以下是代码段” .data: “以下是初始化数据段” .bss: “以下是未初始化数据段” .global: 定义一个全局符号，通常是为ld使用。 .abort: 停止汇编 .align absexpr1, absexpr2 : 以某种对齐方式,]]></description>
</item>
<item>
  <title>ThreadPoolQueue</title>
  <link>https://liudongdong1.github.io/threadpoolqueue/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/threadpoolqueue/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/5ZAZEO70PJ.jpg" referrerpolicy="no-referrer">
      </div>当ThreadPoolExecutor线程池被创建的时候，里边是没有工作线程的，直到有任务进来（执行了execute方法）才开始创建线程去工]]></description>
</item>
<item>
  <title>TensorRT</title>
  <link>https://liudongdong1.github.io/tensorrt/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/tensorrt/</guid>
  <description><![CDATA[ONNX parser: Takes a converted PyTorch trained model into the ONNX format as input and populates a network object in TensorRT. Builder: Takes a network in TensorRT and generates an engine that is optimized for the target platform. Engine: Takes input data, performs inferences, and emits inference output. Logger: Associated with the builder and engine to capture errors, warnings, and other information during the build and inference phases. Convert the]]></description>
</item>
<item>
  <title>synchronized</title>
  <link>https://liudongdong1.github.io/java%E9%94%81%E6%9C%BA%E5%88%B6/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/java%E9%94%81%E6%9C%BA%E5%88%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210511091936.png" referrerpolicy="no-referrer">
      </div>修饰静态方法。锁的是当前类的class对象。 修饰普通方法。锁的是当前对象。(this) 修饰代码块。则锁的是指定的对象。 1. synchronized 是一种互斥锁, 一次]]></description>
</item>
<item>
  <title>JDK_JUC</title>
  <link>https://liudongdong1.github.io/jdk_juc/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdk_juc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/TRQLTMBFZY.jpg" referrerpolicy="no-referrer">
      </div>1. Condition 案例 class BoundedBuffer { final Lock lock = new ReentrantLock(); final Condition notFull = lock.newCondition(); final Condition notEmpty = lock.newCondition(); final Object[] items = new Object[100]; int putptr, takeptr, count; public void put(Object x) throws InterruptedException { lock.lock(); try { while (count == items.length) //防止虚假唤醒，Condition的awai]]></description>
</item>
<item>
  <title>JavaJVM_字节码指令</title>
  <link>https://liudongdong1.github.io/javajvm_%E5%AD%97%E8%8A%82%E7%A0%81%E6%8C%87%E4%BB%A4/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E5%AD%97%E8%8A%82%E7%A0%81%E6%8C%87%E4%BB%A4/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/HFVKAB39RI.jpg" referrerpolicy="no-referrer">
      </div>1. 字节码指令 字节码指令是一个字节长度的，代表着某种特殊操作含义的数字，总数不超过256条（全部字节码指令汇编）。对于大部分与数据类型相关的字]]></description>
</item>
<item>
  <title>JavaJVM_虚拟机字节码执行引擎</title>
  <link>https://liudongdong1.github.io/javajvm_%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AD%97%E8%8A%82%E7%A0%81%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AD%97%E8%8A%82%E7%A0%81%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/7AMTUQ1EKV.jpg" referrerpolicy="no-referrer">
      </div>区别是物理机的执行引擎是直接建立在处理器、硬件、指令集和操作系统层面上的，而虚拟机执行引擎是由自己实现的，因此可以自行制定指令集与执行引擎的]]></description>
</item>
<item>
  <title>JavaJVM_虚拟机类加载机制</title>
  <link>https://liudongdong1.github.io/javajvm_%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/FKID7EXJPL.jpg" referrerpolicy="no-referrer">
      </div>1. 类加载时机 一个类从被加载进内存，到卸载出内存，完整的生命周期包括：加载，验证，准备，解析，初始化，使用，卸载。不同的阶段往往是穿插着进行的]]></description>
</item>
<item>
  <title>JavaJVM_性能调优分析</title>
  <link>https://liudongdong1.github.io/javajvm_%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%88%86%E6%9E%90/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%88%86%E6%9E%90/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/TQNWBTLHLY.jpg" referrerpolicy="no-referrer">
      </div>1. 大内存硬件上的程序部署策略 一个15万PV/日左右的在线文档类型网站最近更换了硬件系统，服务器的硬件为四路志强处理器、16GB物理内存，操作]]></description>
</item>
<item>
  <title>JavaJVM_内存模型</title>
  <link>https://liudongdong1.github.io/javajvm_%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://image.shutterstock.com/image-photo/medicine-doctor-robotics-research-analysis-260nw-1673968429.jpg" referrerpolicy="no-referrer">
      </div>Java 内存模型（Java Memory Model 简称JMM）是一种抽象的概念，并不真实存在，它描述的一组规则或规范，通过这组规范定义了程序中各个变量（包括实例字段、]]></description>
</item>
<item>
  <title>JavaJVM_内存分配&amp;回收</title>
  <link>https://liudongdong1.github.io/javajvm_%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%9B%9E%E6%94%B6/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%9B%9E%E6%94%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/HYIOWCIBOY.jpg" referrerpolicy="no-referrer">
      </div>Serial / Serial Old收集器下（ParNew / Serial Old收集器组合的规则也基本一致）的内存分配和回收的策略。 1. 对象优先在Eden分配 大多数情况下，对象在]]></description>
</item>
<item>
  <title>JavaJVM_类文件结构</title>
  <link>https://liudongdong1.github.io/javajvm_%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/GMVNQWE50F.jpg" referrerpolicy="no-referrer">
      </div>**各种不同平台的虚拟机与所有平台都统一使用的程序存储格式——字节码是构成平台无关性的基石。**实现语言无关性的基础仍然是虚拟机和字节码存储]]></description>
</item>
<item>
  <title>JavaJVM_垃圾收集器</title>
  <link>https://liudongdong1.github.io/javajvm_%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QOXXIQTBJZ.jpg" referrerpolicy="no-referrer">
      </div>新生代的收集器包括： Serial； PraNew； Parallel Scavenge 老年代的收集器包括： Serial Old； Parallel Old； CMS 回收整个Java堆(新生代和老年代)： G1收集]]></description>
</item>
<item>
  <title>JavaJVM_操作系统</title>
  <link>https://liudongdong1.github.io/javajvm_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/7AMTUQ1EKV.jpg" referrerpolicy="no-referrer">
      </div>操作系统还像程序员提供了一层接口，叫做系统呼叫层，程序员可以面向这一层的接口编程，来实现对计算机的控制，而不同的操作系统 (或者说不同的 CPU 架构]]></description>
</item>
<item>
  <title>JavaJVM_Partion</title>
  <link>https://liudongdong1.github.io/javajvm_partion/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_partion/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/03/15/45/chameleon-6307349__340.jpg" referrerpolicy="no-referrer">
      </div>Java: 虚拟机分配,虚拟机维护. 出现内存溢出或内存泄露需要了解虚拟机机制才能够排查问题. 内存溢出：Out Of Memory，OOM。是指程序在申请内存]]></description>
</item>
<item>
  <title>JavaJVM_OutofMemory</title>
  <link>https://liudongdong1.github.io/javajvm_outofmemory/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_outofmemory/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/03/03/32/birds-6305827__340.jpg" referrerpolicy="no-referrer">
      </div>OutOfMemory异常原因：根据报错信息确定出是那个区域发生OutOfMemory异常，然后分析是内存泄露还是内存溢出。 内存泄漏：与GC]]></description>
</item>
<item>
  <title>JavaJVM_HotSpot算法</title>
  <link>https://liudongdong1.github.io/javajvm_hotspot%E7%AE%97%E6%B3%95/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_hotspot%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/SMGDPOX3W3.jpg" referrerpolicy="no-referrer">
      </div>1. 根节点枚举 迄今为止，所有收集器在根节点枚举这一步骤都是必须暂停用户线程的。即便是号称停顿时间可控、或者（几乎）不会发生停顿的 CMS、G1、]]></description>
</item>
<item>
  <title>JavaJVM_HotSpot</title>
  <link>https://liudongdong1.github.io/javajvm_hotspot/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_hotspot/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/04/06/09/cherries-6308871__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 对象创建 HotSpot VM遇到一条new 类型（）指令时，①首先在常量池中是否有这个类的符号引用(符号引用代表类是否已被加载、解析和初始化过)；②如果没]]></description>
</item>
<item>
  <title>JavaJVM_GC</title>
  <link>https://liudongdong1.github.io/javajvm_gc/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_gc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/EV5KEEEPLV.jpg" referrerpolicy="no-referrer">
      </div>java运行时，其中程序计数器，虚拟堆栈，本地方法栈三个区域随线程而生，随线程而灭，但时java堆和方法区则不一样，这部分内存分配和回收都是]]></description>
</item>
<item>
  <title>javabasic</title>
  <link>https://liudongdong1.github.io/javabasic/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javabasic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/08/05/13/acid-1807514__340.jpg" referrerpolicy="no-referrer">
      </div>0. JVM vs JDK vs JRE Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相]]></description>
</item>
<item>
  <title>Java_CMD</title>
  <link>https://liudongdong1.github.io/java_cmd/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/java_cmd/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/08/06/23/green-tea-6078275__340.jpg" referrerpolicy="no-referrer">
      </div>自动化的过程也已经成熟。 无需手动运行所有内容。 使用Java，我们可以运行单个或多个Shell命令，执行Shell脚本，运行终端/命令提示符，]]></description>
</item>
<item>
  <title>EffectJava_generic</title>
  <link>https://liudongdong1.github.io/effectjava_generic/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectjava_generic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210521113459.png" referrerpolicy="no-referrer">
      </div>1. 不要在新代码中使用原生类型 原始类型 List 和参数化类型 List&lt;Object&gt; 之间有什么区别？ 松散地说，前者已经选择了泛型类型系统，而后者明确地告诉编译器，它能够保存]]></description>
</item>
<item>
  <title>EffectJava_class&amp;Interface</title>
  <link>https://liudongdong1.github.io/effectjava_classinterface/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectjava_classinterface/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210521113446.png" referrerpolicy="no-referrer">
      </div>1. 使类和成员的可访问性最小化 让每个类或成员尽可能地不可访问。 换句话说，使用尽可能低的访问级别，与你正在编写的软件的对应功能保持一致。 公共类的]]></description>
</item>
<item>
  <title>EffectJava</title>
  <link>https://liudongdong1.github.io/effectjava/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectjava/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210511092056.png" referrerpolicy="no-referrer">
      </div>不要努力写快的程序，要努力写好程序；速度自然会提高。但是在设计系统时一定要考虑性能，特别是在设计API、线路层协议和持久数据格式时。当你完成]]></description>
</item>
<item>
  <title>EffectiveJava_Serialise</title>
  <link>https://liudongdong1.github.io/effectivejava_serialise/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectivejava_serialise/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/05/10/05/40/scarlet-mormon-butterfly-6242643__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 非常谨慎地实现 Serializable 实现 Serializable 接口的一个主要代价是，一旦类的实现被发布，它就会降低更改该类实现的灵活性。 当类实现 Serializable 时，其字节流编码（或序列化形式）]]></description>
</item>
<item>
  <title>EffectiveJava_Parrallel</title>
  <link>https://liudongdong1.github.io/effectivejava_parrallel/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectivejava_parrallel/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/12/17/10/04/glow-4701292__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 同步访问共享的可变数据 使用synchronized方法 package thread; import java.util.concurrent.TimeUnit; public class StopThreadSynch { private static boolean stopRequested; public static synchronized boolean isStopRequested() { return stopRequested; } public static synchronized void setStopRequested(boolean stopRequested) { StopThreadSynch.stopRequested = stopRequested; } public static void main(String[] args) throws InterruptedException { long startDate]]></description>
</item>
<item>
  <title>EffectiveJava_Methods</title>
  <link>https://liudongdong1.github.io/effectivejava_methods/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectivejava_methods/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2013/09/05/01/36/white-179005__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 检查参数有效性 清楚地在文档中记载所有这些限制，并在方法主体的开头用检查来强制执行。 应该尝试在错误发生后尽快检测到错误，这是一般原则的特殊情]]></description>
</item>
<item>
  <title>EffectiveJava_Exception</title>
  <link>https://liudongdong1.github.io/effectivejava_exception/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectivejava_exception/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/03/00/06/sheet-music-6305620__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 只对异常的情况下才使用异常 因为异常设计的初衷适用于不正常的情形，所有几乎没有 JVM 实现试图对他们进行优化，使它们与显式的测试一样快。 把代码放在]]></description>
</item>
<item>
  <title>EffectiveJava_Design</title>
  <link>https://liudongdong1.github.io/effectivejava_design/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectivejava_design/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/04/09/22/03/strawberries-6165597__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 局部变量作用域最小 如果循环终止后不需要循环变量的内容，那么优先选择 for 循环而不是 while 循环。 for-each 循环优于传统 for 循环 有损过滤（Destructive]]></description>
</item>
<item>
  <title>DDD 设计实践</title>
  <link>https://liudongdong1.github.io/ddd%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ddd%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/VTOEOEWR8J.jpg" referrerpolicy="no-referrer">
      </div>1. 基于SpringMVC+mybatis User Interface层：门面层，对外以各种协议提供服务，该层需要明确定义支持的服务协议、契约等。包含]]></description>
</item>
<item>
  <title>DDD 设计理念</title>
  <link>https://liudongdong1.github.io/ddd%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ddd%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/V9L6XXK3LB.jpg" referrerpolicy="no-referrer">
      </div>微服务架构，在集中式架构中，系统分析、设计和开发往往是独立进行的，而且各个阶段负责人可能不一样，那么就涉及到交流信息丢失的问题， 另外项目从分]]></description>
</item>
<item>
  <title>Concurrency</title>
  <link>https://liudongdong1.github.io/concurrency/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/concurrency/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/BR2IU3WKMP.jpg" referrerpolicy="no-referrer">
      </div>1. 并发问题的根源 可见性：一个线程对共享变量的修改，另外一个线程能够立刻看到。 原子性：即一个操作或者多个操作 要么全部执行并且执行的过程不会被任]]></description>
</item>
<item>
  <title>Android_启动流程</title>
  <link>https://liudongdong1.github.io/android-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>1. Bootloader U-boot启动流程 第一阶段：汇编代码：U-boot的第一条指令从cpu/armXXX/start.S文件开始 第二阶段：C代码：从文件/]]></description>
</item>
<item>
  <title>Android_Universal_Image_Loader</title>
  <link>https://liudongdong1.github.io/android_universal_image_loader/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/android_universal_image_loader/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/CJCMX14Z4F.jpg" referrerpolicy="no-referrer">
      </div>ImageLoader&ndash;对外接口 ImageLoader 单例建造者模式构建 public static void initImageLoader(Context context) { // This configuration tuning is custom. You can tune every option, you may tune some of them, // or you can create default configuration by // ImageLoaderConfiguration.createDefault(this); // method. ImageLoaderConfiguration.Builder config =]]></description>
</item>
<item>
  <title>JavaJVM_类加载执行子系统</title>
  <link>https://liudongdong1.github.io/javajvm_%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%89%A7%E8%A1%8C%E5%AD%90%E7%B3%BB%E7%BB%9F/</link>
  <pubDate>Tue, 30 Jun 2020 15:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%89%A7%E8%A1%8C%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/6YQWAGFSYS.jpg" referrerpolicy="no-referrer">
      </div>在Class文件格式和执行引擎这部分中，用户的程序能直接影响的内容并不太多，Class文件以何种格式存储，类型何时加载、如何连接，以及虚拟机]]></description>
</item>
<item>
  <title>嵌入式学习路线</title>
  <link>https://liudongdong1.github.io/temp-task/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/temp-task/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2023/04/09/20/04/flower-7912164__340.jpg" referrerpolicy="no-referrer">
      </div>1. 技能要求 .1. 嵌入式硬件开发 熟悉电路等知识，非常熟悉各种常用元器件，掌握模拟电路和数字电路设计的开发能力 熟悉硬件开发模式和设计模式，熟悉各种芯]]></description>
</item>
<item>
  <title>Seq2seq_Introduce</title>
  <link>https://liudongdong1.github.io/seq2seq_introduce/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/seq2seq_introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/sunset-over-lake-1.jpg" referrerpolicy="no-referrer">
      </div>A sequence-to-sequence model is a model that takes a sequence of items (words, letters, features of an images…etc) and outputs another sequence of items. The encoder processes each item in the input sequence, it compiles the information it captures into a vector (called the context). After processing the entire input sequence, the encoder sends the context over to the decoder,]]></description>
</item>
<item>
  <title>javaUtil</title>
  <link>https://liudongdong1.github.io/javautil/</link>
  <pubDate>Wed, 16 Dec 2020 23:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javautil/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/aerial-view-of-metal-items-on-white-background.jpg" referrerpolicy="no-referrer">
      </div>学习记录javaUtil各种工具使用； 1. StringRelative 1.1. StringTokenizer **StringTokenizer(String str)：**构造一个用来解析str的StringTokenizer对象。java默认的分隔]]></description>
</item>
<item>
  <title>FinalStatic</title>
  <link>https://liudongdong1.github.io/finalstatic/</link>
  <pubDate>Wed, 16 Dec 2020 23:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/finalstatic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210510221150.png" referrerpolicy="no-referrer">
      </div>1. final final 意为最终的、不可更改的，它可以用来修饰类、方法、属性、局部变量等。 .1. 修饰类 被 final 修改的类不能被其它类所继承，如 Integer、Strin]]></description>
</item>
<item>
  <title>ProxyMode</title>
  <link>https://liudongdong1.github.io/proxymode/</link>
  <pubDate>Wed, 13 Jan 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/proxymode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210514222616.png" referrerpolicy="no-referrer">
      </div>代理模式是一种设计模式，提供了对目标对象额外的访问方式，即通过代理对象访问目标对象，这样可以在不修改原目标对象的前提下，提供额外的功能操作，]]></description>
</item>
<item>
  <title>DrawUtil</title>
  <link>https://liudongdong1.github.io/drawutil/</link>
  <pubDate>Tue, 23 Mar 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/drawutil/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110043.png" referrerpolicy="no-referrer">
      </div>1. XChart XChart is a light-weight and convenient library for plotting data designed to go from data to chart in the least amount of time possible and to take the guess-work out of customizing the chart style.
Create a XYChart instance via QuickChart, add a series of data to it, and either display it or save it as a bitmap.]]></description>
</item>
<item>
  <title>EffectJava_Enum&amp;Annotate</title>
  <link>https://liudongdong1.github.io/effectjava_enumannotate/</link>
  <pubDate>Fri, 30 Apr 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/effectjava_enumannotate/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210521154948.png" referrerpolicy="no-referrer">
      </div>1. 使用枚举类型代替整型常量 它们是通过公共静态 final 属性为每个枚举常量导出一个实例的类。 由于没有可访问的构造方法，枚举类型实际上是 final 的。 由于客户既]]></description>
</item>
<item>
  <title>ExceptionHandle</title>
  <link>https://liudongdong1.github.io/exceptionhandle/</link>
  <pubDate>Mon, 10 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/exceptionhandle/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210510093804.png" referrerpolicy="no-referrer">
      </div>异常本质上是程序上的错误，包括程序逻辑错误和系统错误。比如使用空的引用、数组下标越界、内存溢出错误等. 错误在我们编写程序的过程中会经常发生，]]></description>
</item>
<item>
  <title>Code_OutputStream</title>
  <link>https://liudongdong1.github.io/code_outputstream/</link>
  <pubDate>Mon, 10 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/code_outputstream/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/10/05/44/wuzhen-7004638__340.jpg" referrerpolicy="no-referrer">
      </div>1. OutputStream抽象类 public abstract void write(int b) // 写入一个字节，可以看到这里的参数是一个 int 类型，对应上面的读方法，int 类型的 32 位，只有低 8 位才写]]></description>
</item>
<item>
  <title>IteratorMode</title>
  <link>https://liudongdong1.github.io/iteratormode/</link>
  <pubDate>Tue, 11 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/iteratormode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/macro-flower_FKID7EXJPL.jpg" referrerpolicy="no-referrer">
      </div>迭代器模式： 把在元素之间游走的责任交给迭代器，而不是聚合对象。简化了聚合的接口和实现，让聚合更专注在它所应该专注的事情上，这样做更加符合单一]]></description>
</item>
<item>
  <title>Code_InputStream</title>
  <link>https://liudongdong1.github.io/code_inputstream/</link>
  <pubDate>Tue, 11 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/code_inputstream/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/workspace-office_CB4OANNVNO.jpg" referrerpolicy="no-referrer">
      </div>1. InputStream 抽象类 public abstract int read() // 读取数据 public int read(byte b[]) // 将读取到的数据放在 byte 数组中，该方法实际上是根据下面的方法实现的，off 为 0，len 为数组的长度 public int read(byte b[],]]></description>
</item>
<item>
  <title>StrategyMode</title>
  <link>https://liudongdong1.github.io/strategymode/</link>
  <pubDate>Wed, 12 May 2021 12:59:57 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/strategymode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/10/05/10/29/horse-5628882__340.jpg" referrerpolicy="no-referrer">
      </div>1、封装变化（把可能变化的代码封装起来） 2、多用组合，少用继承（我们使用组合的方式，为客户设置了算法） 3、针对接口编程，不针对实现（对于Ro]]></description>
</item>
<item>
  <title>PrototypeMode</title>
  <link>https://liudongdong1.github.io/prototypemode/</link>
  <pubDate>Wed, 12 May 2021 12:59:57 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/prototypemode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/FGW3XGA04R.jpg" referrerpolicy="no-referrer">
      </div>原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。这种类型的设计模式属于创建型模式，它提供了一种创建对象的]]></description>
</item>
<item>
  <title>MementoMode</title>
  <link>https://liudongdong1.github.io/mementomode/</link>
  <pubDate>Wed, 12 May 2021 12:59:57 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/mementomode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://stocksnap.io/photo/watch-phone-4NCVIQK94J" referrerpolicy="no-referrer">
      </div>备忘录模式是指在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样，以后就可以将该对象恢复到原先保存的状态。 备忘]]></description>
</item>
<item>
  <title>TemplateMode</title>
  <link>https://liudongdong1.github.io/templatemode/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/templatemode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/CH8ETO2X4G.jpg" referrerpolicy="no-referrer">
      </div>模板方法模式适用于以下应用场景： —次性实现一个算法的不变的部分 ， 并将可变的行为留给子类来实现。利用模板方法将相同处理逻编的代码放到抽象父类中]]></description>
</item>
<item>
  <title>BuilderMode</title>
  <link>https://liudongdong1.github.io/buildermode/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/buildermode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210514222616.png" referrerpolicy="no-referrer">
      </div>将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。在构建的对象需要很多配置的时候可以考虑Builder模式，可以避免]]></description>
</item>
<item>
  <title>BridgeMode</title>
  <link>https://liudongdong1.github.io/bridgemode/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bridgemode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/RLPW5ERBK3.jpg" referrerpolicy="no-referrer">
      </div>桥接模式(Bridge Pattern)：将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Handl]]></description>
</item>
<item>
  <title>InnerClass</title>
  <link>https://liudongdong1.github.io/innerclass/</link>
  <pubDate>Fri, 14 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/innerclass/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210521113523.png" referrerpolicy="no-referrer">
      </div>内部类是一个编译时的概念，一旦编译成功，就会成为完全不同的两类。对于一个名为outer的外部类和其内部定义的名为inner的内部类。编译完成]]></description>
</item>
<item>
  <title>UnixIO</title>
  <link>https://liudongdong1.github.io/unixiojavanio/</link>
  <pubDate>Tue, 18 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/unixiojavanio/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/18/01/11/beach-7019771__340.jpg" referrerpolicy="no-referrer">
      </div>对于一个套接字上的输入操作，第一步通常涉及等待数据从网络中到达。当所等待分组到达时，它被复制到内核中的某个缓冲区。第二步就是把数据从内核缓冲]]></description>
</item>
<item>
  <title>VisitorMode</title>
  <link>https://liudongdong1.github.io/visitormode/</link>
  <pubDate>Thu, 20 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/visitormode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/SOZ81WXDU1.jpg" referrerpolicy="no-referrer">
      </div>系统访问，同一套系统，有很多功能不同的人访问到的结果不一样，运营人员，只拥有运营相关的权限，销售只拥有有关销售相关的功能权限，财务只拥有财务]]></description>
</item>
<item>
  <title>MediatorMode</title>
  <link>https://liudongdong1.github.io/mediatormode/</link>
  <pubDate>Sun, 23 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mediatormode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/purple-flowers_HFVKAB39RI.jpg" referrerpolicy="no-referrer">
      </div>提供了一个中介类，该类通常处理不同类之间的通信，并支持松耦合，使代码易于维护。 中介者模式简化了对象之间的交互，它用中介者和同事的一对多交互代]]></description>
</item>
<item>
  <title>JavaJVM_编译器</title>
  <link>https://liudongdong1.github.io/javajvm_%E7%BC%96%E8%AF%91%E5%99%A8/</link>
  <pubDate>Wed, 30 Jun 2021 08:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/HFVKAB39RI.jpg" referrerpolicy="no-referrer">
      </div>*.java 文件要首先被编译成 *.class 文件才能被 JVM 认识，这部分的工作主要由 Javac 来完成，类似于 Javac 这样的我们称之为前端编译器； 但是 *.class 文件也不是机器语言，怎么才能让]]></description>
</item>
<item>
  <title>CompositeMode</title>
  <link>https://liudongdong1.github.io/compositemode/</link>
  <pubDate>Mon, 05 Jul 2021 11:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/compositemode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210514222616.png" referrerpolicy="no-referrer">
      </div>组合模式(Composite Pattern)：组合多个对象形成树形结构以表示具有 &ldquo;整体—部分&rdquo; 关系的层次结构。组合模]]></description>
</item>
<item>
  <title>JavaJVM_JDK命令</title>
  <link>https://liudongdong1.github.io/javajvm_jkd%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Tue, 13 Jul 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/javajvm_jkd%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/OZYNX1DJHT.jpg" referrerpolicy="no-referrer">
      </div>给一个系统定位问题的时候，知识、经验是关键基础，数据是依据，工具是运用知识处理数据的手段。这里说的数据包括但不限于异常堆栈、虚拟机运行日志、]]></description>
</item>
<item>
  <title>DistributionAlgorithm</title>
  <link>https://liudongdong1.github.io/distributionalgorithm/</link>
  <pubDate>Sun, 18 Jul 2021 09:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/distributionalgorithm/</guid>
  <description><![CDATA[From: https://juejin.cn/post/6874218041136300040 1. 分布式理论：一致性算法 Paxos 在常见的分布式系统中，总会发生诸如机器宕机或者网络异常等情况。Paxos算法需要解决的问题就是如何在一个可能发]]></description>
</item>
<item>
  <title>DistributionTheory</title>
  <link>https://liudongdong1.github.io/distributiontheory/</link>
  <pubDate>Sun, 18 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/distributiontheory/</guid>
  <description><![CDATA[From: https://juejin.cn/post/6874599410802622472 1. 分布式架构系统回顾 .1. 分布式系统概念 分布式系统是一个硬件或软件组件分布在不同的网络计算机上，彼此之间仅仅通过消息传递进行通信和协调的系统]]></description>
</item>
<item>
  <title>Zookeeper</title>
  <link>https://liudongdong1.github.io/zookeeper/</link>
  <pubDate>Mon, 19 Jul 2021 10:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/zookeeper/</guid>
  <description><![CDATA[ZooKeeper是一个分布式的、开放源码的分布式协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件]]></description>
</item>
<item>
  <title>Lambda</title>
  <link>https://liudongdong1.github.io/lambda/</link>
  <pubDate>Wed, 11 Aug 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/lambda/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/BKHRBSRAUC.jpg" referrerpolicy="no-referrer">
      </div>能够使用Lambda的依据是必须有相应的函数接口（函数接口，是指内部只有一个抽象方法的接口）。 // Lambda表达式的书写形式 Runnable run = () -&gt; System.out.println(&#34;Hello World&#34;);// 1]]></description>
</item>
<item>
  <title>StreamAPI</title>
  <link>https://liudongdong1.github.io/streamapi/</link>
  <pubDate>Thu, 12 Aug 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/streamapi/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/EXPZ9PYOGY.jpg" referrerpolicy="no-referrer">
      </div>代码简洁函数式编程写出的代码简洁且意图明确，使用stream接口让你从此告别for循环。 多核友好，Java函数式编程使得编写并行程序从未如此]]></description>
</item>
<item>
  <title>StreamPipeline</title>
  <link>https://liudongdong1.github.io/streampipline/</link>
  <pubDate>Thu, 12 Aug 2021 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/streampipline/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/0LTBEMWP0T.jpg" referrerpolicy="no-referrer">
      </div>如果出于性能考虑，1. 对于简单操作推荐使用外部迭代手动实现，2. 对于复杂操作，推荐使用Stream API， 3. 在多核情况下，推荐使用并行Str]]></description>
</item>
<item>
  <title>微服务5种设计</title>
  <link>https://liudongdong1.github.io/%E5%BE%AE%E6%9C%8D%E5%8A%A15%E7%A7%8D%E8%AE%BE%E8%AE%A1/</link>
  <pubDate>Sun, 15 Aug 2021 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%BE%AE%E6%9C%8D%E5%8A%A15%E7%A7%8D%E8%AE%BE%E8%AE%A1/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/wheat-field_I10ZDYCG1P.jpg" referrerpolicy="no-referrer">
      </div>整个应用程序被拆分成相互独立但包含多个内部模块的子进程。 与模块化的单体应用（Modular Monoliths）或 SOA 相反，微服务应用程序根据业]]></description>
</item>
<item>
  <title>RxJava</title>
  <link>https://liudongdong1.github.io/rxjava/</link>
  <pubDate>Sat, 11 Sep 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rxjava/</guid>
  <description><![CDATA[Rxjava中最重要的其实是Rx思想，所谓的Rx思想，也就是响应式编程思想（下一步随上一步的变化而变化，点菜-&gt;下单-&gt;做菜）。]]></description>
</item>
<item>
  <title>TimeMeasure</title>
  <link>https://liudongdong1.github.io/timemeasure/</link>
  <pubDate>Wed, 03 Nov 2021 18:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/timemeasure/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/07/05/28/bird-6852282__340.jpg" referrerpolicy="no-referrer">
      </div>1. System.currentTimeMillis public class TimeIntervalTest { public static void main(String[] args) throws InterruptedException { // 开始时间 long stime = System.currentTimeMillis(); // 执行时间（1s） Thread.sleep(1000); // 结束时间 long etime = System.currentTimeMillis(); // 计算执行时间 System.out.printf(&#3]]></description>
</item>
<item>
  <title>CommonMath</title>
  <link>https://liudongdong1.github.io/commonmath/</link>
  <pubDate>Wed, 10 Nov 2021 23:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/commonmath/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/25/19/22/animal-6655641__340.jpg" referrerpolicy="no-referrer">
      </div>The Apache Commons Math project is a library of lightweight, self-contained mathematics and statistics components addressing the most common practical problems not immediately available in the Java programming language or commons-lang. 官方案例文档 org.apache.commons.math4.stat - statistics, statistical tests org.apache.commons.math4.analysis - rootfinding, integration, interpolation, polynomials org.apache.commons.math4.random - random numbers, strings and data generation org.apache.commons.math4.special - special functions (Gamma, Beta) org.apache.commons.math4.linear - matrices, solving linear systems org.apache.commons.math4.util -]]></description>
</item>
<item>
  <title>job投递相关</title>
  <link>https://liudongdong1.github.io/job/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/job/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>会议论文1：《RFID and Camera Fusion for Recognition of Human-object Interactions》，MobiCom21，CCF A， 学生一作 会议论文2：《An RFID and Computer Vision Fusion System for Book Inventory using]]></description>
</item>
<item>
  <title>middlewareOverview</title>
  <link>https://liudongdong1.github.io/middlewareoverview/</link>
  <pubDate>Thu, 15 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/middlewareoverview/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/plant-leaves_RP9VPMSKFG.jpg" referrerpolicy="no-referrer">
      </div>消息队列 已经逐渐成为企业应用系统 内部通信 的核心手段。它具有 低耦合、可靠投递、广播、流量控制、最终一致性 等一系列功能。 当前使用较多的 消息队列 有]]></description>
</item>
<item>
  <title>servicemesh</title>
  <link>https://liudongdong1.github.io/servicemesh/</link>
  <pubDate>Thu, 22 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/servicemesh/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/46YBDQQ43I.jpg" referrerpolicy="no-referrer">
      </div>From: https://zhuanlan.zhihu.com/p/61901608 微服务 (Microservices) 是一种软件架构风格，它是以专注于单一责任与功能的小型功能区块 (Small Building Blocks) 为基础，利用模块化的方式组合出复杂的大型应用程序，各功能区块使]]></description>
</item>
<item>
  <title>rpc_ecology</title>
  <link>https://liudongdong1.github.io/rpc_ecology/</link>
  <pubDate>Sun, 25 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rpc_ecology/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/0IBRE3AARG.jpg" referrerpolicy="no-referrer">
      </div>RPC（Remote Procedure Call）—远程过程调用，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。这里的屏蔽底层网]]></description>
</item>
<item>
  <title>RPC 框架的可靠性设计</title>
  <link>https://liudongdong1.github.io/rpc-%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%AF%E9%9D%A0%E6%80%A7%E8%AE%BE%E8%AE%A1/</link>
  <pubDate>Sat, 25 Jun 2022 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rpc-%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%AF%E9%9D%A0%E6%80%A7%E8%AE%BE%E8%AE%A1/</guid>
  <description><![CDATA[https://www.infoq.cn/article/bzekar1wxqg-2dpare9o 1. 背景 1.1 分布式调用引入的故障 在传统的单体架构中，业务服务调用都是本地方法调用，不会涉及到网络通信、协议栈、消息序列化和反序列化等，当使用 RPC]]></description>
</item>
<item>
  <title>rpc框架-mercury</title>
  <link>https://liudongdong1.github.io/rpc%E6%A1%86%E6%9E%B6_mercury/</link>
  <pubDate>Mon, 25 Jul 2022 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rpc%E6%A1%86%E6%9E%B6_mercury/</guid>
  <description><![CDATA[Mercury is a Remote Procedure Call (RPC) framework specifically designed for use in High-Performance Computing (HPC) systems with high-performance fabrics. Objective &amp; comparision Objective: Create a reusable RPC libraryfor use in HPC that can serve as a basis for services such as storage systems, I/O forwarding, analysis frameworks and other forms of inter-application communication 优势： takes advantage of low-level HPC network fabrics and facilitates the development of user-level]]></description>
</item>
<item>
  <title>面经_消息队列</title>
  <link>https://liudongdong1.github.io/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E7%BB%8F/</link>
  <pubDate>Thu, 22 Sep 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E7%BB%8F/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>1. 消息队列优缺点 优点 消息队列的优点就是：解耦、异步、削峰。 缺点 降低系统的可用性：系统引入的外部依赖越多，越容易挂掉； 系统复杂度提高：使用 MQ 后]]></description>
</item>
<item>
  <title>炼丹</title>
  <link>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%82%BC%E4%B8%B9/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/wooden-spoon_8M7MVSJMUK.jpg" referrerpolicy="no-referrer">
      </div>1. 学习率 越大的batch-size使用越大的学习率。原理很简单，越大的batch-size意味着我们学习的时候，收敛方向的confidenc]]></description>
</item>
<item>
  <title>PytorchBasic</title>
  <link>https://liudongdong1.github.io/basic/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/basic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/03/18/19/56/keyboard-6105750__340.jpg" referrerpolicy="no-referrer">
      </div>autograd 包为张量上的所有操作提供了自动求导机制。它是一个在运行时定义(define-by-run）的框架，这意味着反向传播是根据代码如何运行来决定]]></description>
</item>
<item>
  <title>Pytorch_预训练模型</title>
  <link>https://liudongdong1.github.io/pytorch_%E9%A2%84%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch_%E9%A2%84%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/keyboard-typing_UATQGKPFOH.jpg" referrerpolicy="no-referrer">
      </div>1. 模型下载 import re import os import glob import torch from torch.hub import download_url_to_file from torch.hub import urlparse import torchvision.models as models def download_model(url, dst_path): parts = urlparse(url) filename = os.path.basename(parts.path) HASH_REGEX = re.compile(r&#39;-([a-f0-9]*)\.&#39;) hash_prefix = HASH_REGEX.search(filename).group(1) if os.path.exists(os.path.join(dst_path, filename)): return filename download_url_to_file(url, os.path.join(dst_path, filename), hash_prefix, True) return filename def saveToFolder(path): #其他各种模型可以在这个目录下进]]></description>
</item>
<item>
  <title>pytorch_Tools</title>
  <link>https://liudongdong1.github.io/pytorch_tools/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch_tools/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210517232252.png" referrerpolicy="no-referrer">
      </div>1. Pytorch Lightning Pytorch Lightning是一款基于Pytorch的轻量级高级计算框架，相较于Pytorch而言最大特征是简洁易用，相当于Pytorch版本]]></description>
</item>
<item>
  <title>Pytorch_LearningRate</title>
  <link>https://liudongdong1.github.io/pytorch_learningrate/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorch_learningrate/</guid>
  <description><![CDATA[a. 有序调整：等间隔调整(Step)，按需调整学习率(MultiStep)，指数衰减调整(Exponential)和 余弦退火CosineAnn]]></description>
</item>
<item>
  <title>TorchVision_Models</title>
  <link>https://liudongdong1.github.io/torchvision_models/</link>
  <pubDate>Fri, 16 Oct 2020 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/torchvision_models/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201129141709288.png" referrerpolicy="no-referrer">
      </div>Torchvision.Models contain different models like: image classification, pixelwise semantic segmentation, object detection, instance segmentation, person keypoint detection and video classification. 1. Classification Models AlexNet VGGResNetSqueezeNetDenseNetInception v3GoogLeNetShuffleNet v2MobileNet v2ResNeXtWide ResNetMNASNet 1.1. Random weights import torchvision.models as models resnet18 = models.resnet18() alexnet = models.alexnet() vgg16 = models.vgg16() squeezenet = models.squeezenet1_0() densenet = models.densenet161() inception = models.inception_v3() googlenet = models.googlenet() shufflenet = models.shufflenet_v2_x1_0() mobilenet = models.mobilenet_v2() resnext50_32x4d = models.resnext50_32x4d() wide_resnet50_2 = models.wide_resnet50_2() mnasnet]]></description>
</item>
<item>
  <title>TorchVision_DataLoad</title>
  <link>https://liudongdong1.github.io/torchvision_dataload/</link>
  <pubDate>Sat, 17 Oct 2020 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/torchvision_dataload/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/39.jpeg" referrerpolicy="no-referrer">
      </div>All datasets are subclasses of torch.utils.data.Dataset i.e, they have __getitem__ and __len__ methods implemented. Hence, they can all be passed to a torch.utils.data.DataLoader which can load multiple samples parallelly using torch.multiprocessing workers. Dataloader： offer a way to parallelly load data, batch load, and offer shuffle policy. Dataset: the dataset entry, offer getitem function., Transformer function 在这里执行]]></description>
</item>
<item>
  <title>TorchVision_Transforms</title>
  <link>https://liudongdong1.github.io/torchvision_transforms/</link>
  <pubDate>Sat, 17 Oct 2020 15:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/torchvision_transforms/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201017144214641.png" referrerpolicy="no-referrer">
      </div>Offering transformation pipeline;
transforms.Compose([ transforms.CenterCrop(10), transforms.ToTensor(), ]) 1. PIL Image Op CenterCrop(size) # Crops the given PIL Image at the center. ColorJitter(brightness=0, contrast=0, saturation=0, hue=0)#Randomly change the brightness, contrast and saturation of an image. FiveCrop(size) #Crop the given PIL Image into four corners and the central crop Grayscale(num_output_channels=1) # convert image to grayscale RandomAffine(degrees, translate=None, scale=None, shear=None, resample=False, fillcolor=0)#Random affine transformation of the image keeping center invariant RandomCrop(size, padding=None, pad_if_needed=False, fill=0, padding_mode=&#39;constant&#39;)#Crop the given PIL Image at a random location.]]></description>
</item>
<item>
  <title>PytorchSegmentCode</title>
  <link>https://liudongdong1.github.io/pytorchsegmentcode/</link>
  <pubDate>Tue, 20 Oct 2020 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorchsegmentcode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/tourists-in-sea.jpg" referrerpolicy="no-referrer">
      </div>0. 基础配置 0.1. 设置随机种子 def set_seeds(seed, cuda): &#34;&#34;&#34; Set Numpy and PyTorch seeds. &#34;&#34;&#34; np.random.seed(seed) torch.manual_seed(seed) if cuda: torch.cuda.manual_seed_all(seed) print (&#34;==&gt; Set NumPy and PyTorch seeds.&#34;) 0.2. 张量处理与转化 tensor.type() # Data type tensor.size() # Shape of the tensor. It is a subclass of Python tuple tensor.dim() # Number of dimensions. # Type convertions. tensor = tensor.cuda()]]></description>
</item>
<item>
  <title>Yolo5_pytorch</title>
  <link>https://liudongdong1.github.io/yolo5_pytorch/</link>
  <pubDate>Sat, 31 Oct 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/yolo5_pytorch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/23.jpeg" referrerpolicy="no-referrer">
      </div>1. Introduce https://github.com/ultralytics/yolov5 pip install -r requirements.txt Model APval APtest AP50 SpeedGPU FPSGPU params FLOPS YOLOv5s 37.0 37.0 56.2 2.4ms 416 7.5M 13.2B YOLOv5m 44.3 44.3 63.2 3.4ms 294 21.8M 39.4B YOLOv5l 47.7 47.7 66.5 4.4ms 227 47.8M 88.1B YOLOv5x 49.2 49.2 67.7 6.9ms 145 89.0M 166.4B YOLOv5x + TTA 50.8 50.8 68.9 25.5ms 39 89.0M 354.3B YOLOv3-SPP 45.6 45.5 65.2 4.5ms 222 63.0M 118.0B 1.1. Environment Google Colab Notebook]]></description>
</item>
<item>
  <title>SkLearnDataFlow</title>
  <link>https://liudongdong1.github.io/sklearndataflow/</link>
  <pubDate>Wed, 24 Feb 2021 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sklearndataflow/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210522212739.png" referrerpolicy="no-referrer">
      </div>Scikit-learn is an open source machine learning library that supports supervised and unsupervised learning. It also provides various tools for model fitting, data preprocessing, model selection and evaluation, and many other utilities. 1. Fit&amp;Predict The samples matrix (or design matrix) (https://scikit-learn.org/stable/glossary.html#term-X). The size of X is typically (n_samples, n_features), which means that samples are represented as rows and features are represented as columns. The target values y which are real]]></description>
</item>
<item>
  <title>DataPreprocessing</title>
  <link>https://liudongdong1.github.io/datapreprocessing/</link>
  <pubDate>Wed, 24 Feb 2021 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/datapreprocessing/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210522212626.png" referrerpolicy="no-referrer">
      </div>0. Preprocessing preprocessing.Binarizer(*[, threshold, copy]) Binarize data (set feature values to 0 or 1) according to a threshold. preprocessing.FunctionTransformer([func, …]) Constructs a transformer from an arbitrary callable. preprocessing.KBinsDiscretizer([n_bins, …]) Bin continuous data into intervals. preprocessing.KernelCenterer() Center a kernel matrix. preprocessing.LabelBinarizer(*[, neg_label, …]) Binarize labels in a one-vs-all fashion. preprocessing.LabelEncoder() Encode target labels with value between 0 and n_classes-1. preprocessing.MultiLabelBinarizer(*[, …]) Transform between]]></description>
</item>
<item>
  <title>PoetryGen</title>
  <link>https://liudongdong1.github.io/poetrygen/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/poetrygen/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2014/12/22/19/59/macbook-577758__340.jpg" referrerpolicy="no-referrer">
      </div>AI和文学艺术不断交融，产生了很多有趣的研究方向，如自动绘画生成、诗歌生成、音乐生成、小说生成等。这些研究在学术界和普通人群中都引起了热烈的]]></description>
</item>
<item>
  <title></title>
  <link>https://liudongdong1.github.io/opensource/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opensource/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/caudata-strelitzia-bird-of-paradise-flower-1.jpg" referrerpolicy="no-referrer">
      </div>1. FinBert 网络结构：其中前者采用了 12 层 Transformer 结构，后者采用了 24 层 Transformer 结构。 训练语料： 金融财经类新闻：从公开渠道采集的最近十年的金融财经类新闻资讯，约 100 万]]></description>
</item>
<item>
  <title>projectRelativeWord</title>
  <link>https://liudongdong1.github.io/projectrelativeword/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/projectrelativeword/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210509213035.png" referrerpolicy="no-referrer">
      </div>1. 计划阶段 1.1. 项目信息表 1.2. 项目实施方案 项目背景、目标、范围 项目总体计划 项目周期为：5个月 需求调研 7月29日~8月15日 系统设计 8月15日~8月]]></description>
</item>
<item>
  <title>LogicPaper</title>
  <link>https://liudongdong1.github.io/logicpaper/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/logicpaper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/08/02/23/58/people-2574170__340.jpg" referrerpolicy="no-referrer">
      </div>1. PaperReading&amp;Writing Abstraction 要做什么事情，这件事情在什么样的场景下有什么样的意义； 采用了什么样的技术路线，解决了什么样的问题，和这个问题相关的解决方法有什么不同；]]></description>
</item>
<item>
  <title>麦肯锡意识</title>
  <link>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E6%84%8F%E8%AF%86/</link>
  <pubDate>Sat, 30 May 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E6%84%8F%E8%AF%86/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/17/10/39/kangaroo-6803201__340.jpg" referrerpolicy="no-referrer">
      </div>1. 界定问题 对MECE原则应用自如 使用前辈经验，不要做重复劳动（由下而上思维） 在第一次会议上解决问题 透过表象看本质 使用结构来强化思维，使用假设]]></description>
</item>
<item>
  <title>DifferentKindsLogic</title>
  <link>https://liudongdong1.github.io/differentkindslogic/</link>
  <pubDate>Wed, 05 Aug 2020 09:54:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/differentkindslogic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111914.png" referrerpolicy="no-referrer">
      </div>1. 挑战杯 2. SWOT 分析法 SWOT分析应该算是一个众所周知的工具。来自于麦肯锡咨询公司的SWOT分析，包括分析企业的优势（Strengths）、劣势]]></description>
</item>
<item>
  <title>soc</title>
  <link>https://liudongdong1.github.io/socialnegotiation/</link>
  <pubDate>Wed, 19 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/socialnegotiation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501112304.png" referrerpolicy="no-referrer">
      </div>1.沟通不是辩论 聊天偶尔伴随一些争议，如果不是必要的是非，大可把无谓的胜利让给对方。 懂得认输的人往往都很懂说话，偏执于输赢的人在他人眼中往往]]></description>
</item>
<item>
  <title>Writingphycology</title>
  <link>https://liudongdong1.github.io/writingphycology/</link>
  <pubDate>Wed, 31 Mar 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/writingphycology/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501112336.png" referrerpolicy="no-referrer">
      </div>精炼：写一句话不超过3行内容，不超过2个句子； 不重复：同一个句子不要重复使用相同的词语（必须要用的名词除外），同一个段落不要重复使用相同的句]]></description>
</item>
<item>
  <title>AbilityFoster</title>
  <link>https://liudongdong1.github.io/abilityfoster/</link>
  <pubDate>Mon, 05 Apr 2021 09:54:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/abilityfoster/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111834.png" referrerpolicy="no-referrer">
      </div>不懂得做产品，你不懂得营销，你不懂得供应链，你不懂得财务，你不懂得法律，你不懂得和人沟通，你不懂得管理; 1. 理解一个行业 学习好的行业报告，大纲]]></description>
</item>
<item>
  <title>videoProduct</title>
  <link>https://liudongdong1.github.io/videoproduct/</link>
  <pubDate>Fri, 30 Apr 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/videoproduct/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501105435.png" referrerpolicy="no-referrer">
      </div>1. 作品类宣传视频 法诺设计吹风机 整个产品外观， 各个功能按键作用，产品内部组成建模，有什么特色组件；使用场景和功能特色； 科勒卫浴 科技，美学特典引]]></description>
</item>
<item>
  <title>架构入门介绍</title>
  <link>https://liudongdong1.github.io/%E6%9E%B6%E6%9E%84%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Sat, 10 Jul 2021 10:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%9E%B6%E6%9E%84%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pink-blossoms_3DEVZBRZDQ.jpg" referrerpolicy="no-referrer">
      </div>1. 业务架构 2. 技术架构 3. 部署架构 4. 数据架构 .1. 数据设计 5. 架构师素质 数据架构 部署架构 技术架构]]></description>
</item>
<item>
  <title>架构评审文档模板</title>
  <link>https://liudongdong1.github.io/%E6%9E%B6%E6%9E%84%E8%AF%84%E5%AE%A1%E6%96%87%E6%A1%A3%E6%A8%A1%E6%9D%BF/</link>
  <pubDate>Fri, 30 Jul 2021 20:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%9E%B6%E6%9E%84%E8%AF%84%E5%AE%A1%E6%96%87%E6%A1%A3%E6%A8%A1%E6%9D%BF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/mushroom-fungus_IOZLY8KJRT.jpg" referrerpolicy="no-referrer">
      </div>架构评审作为项目研发的一个重要节点，一般发生在项目立项之后、正式的代码开始开发之前，由开发人员从架构的角度思考项目落地方案的合理性、规范性、]]></description>
</item>
<item>
  <title>开发逻辑</title>
  <link>https://liudongdong1.github.io/%E5%BC%80%E5%8F%91%E9%80%BB%E8%BE%91/</link>
  <pubDate>Thu, 05 Aug 2021 09:54:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%BC%80%E5%8F%91%E9%80%BB%E8%BE%91/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/PWGFE09BRN.jpg" referrerpolicy="no-referrer">
      </div>1. 开发代码之前 需求的背景（why） 要解决什么问题（Target） 要解决到什么程度（质量） 有多少资源（时间和人力） 解决方案的流程是什么样的（整]]></description>
</item>
<item>
  <title>提问艺术</title>
  <link>https://liudongdong1.github.io/%E6%8F%90%E9%97%AE%E8%89%BA%E6%9C%AF/</link>
  <pubDate>Fri, 05 Nov 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%8F%90%E9%97%AE%E8%89%BA%E6%9C%AF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/08/03/20/36/plants-6520443__340.jpg" referrerpolicy="no-referrer">
      </div>随机组合：3V（词汇（Vocabulary）、价值（ Value）、理想（Vision）)与5W1H（时间（when）、地点（where）、人]]></description>
</item>
<item>
  <title>学会提问</title>
  <link>https://liudongdong1.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE/</link>
  <pubDate>Sun, 05 Dec 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/15/02/07/windows-6938478__340.jpg" referrerpolicy="no-referrer">
      </div>十年定律、一万小时定律中都提到 —— 卓越的技能源于长时间的持续刻意练习。 对教科书，杂志或者因特网上文章，论证进行批判性思考 判断一个报告或者演讲]]></description>
</item>
<item>
  <title>麦肯锡用人标准</title>
  <link>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E7%94%A8%E4%BA%BA%E6%A0%87%E5%87%86/</link>
  <pubDate>Fri, 10 Dec 2021 10:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E7%94%A8%E4%BA%BA%E6%A0%87%E5%87%86/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/26/17/26/desert-6826299__340.jpg" referrerpolicy="no-referrer">
      </div>1. 受到误解的录用标准 .1. 关于面试案例 这个人是否喜欢思考，他的思考模式是什么，他是否知道公司需要什么样的人才 一个喜欢思考的人，无论遇到什么样的问]]></description>
</item>
<item>
  <title>麦肯锡39个习惯</title>
  <link>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A139%E4%B8%AA%E4%B9%A0%E6%83%AF/</link>
  <pubDate>Sun, 02 Jan 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A139%E4%B8%AA%E4%B9%A0%E6%83%AF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/01/17/52/snow-6838768__340.jpg" referrerpolicy="no-referrer">
      </div>通用的解决问题框架： 1. 掌握真正的问题。2. 对问题进行整理。3. 搜集情报。4. 提出假设。5. 验证假设。6. 思考解决办法。7. 实行解决办法。 解决]]></description>
</item>
<item>
  <title>年度计划</title>
  <link>https://liudongdong1.github.io/%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</link>
  <pubDate>Mon, 03 Jan 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/10/07/15/12/wine-6688901__340.jpg" referrerpolicy="no-referrer">
      </div>日行动：你的每日任务清单。 周复盘：以周为单位，对一周进行复盘，比如本周看过的书，盘点有成就感，幸福感的事件，主要目的是向月目标推进。 月复盘：]]></description>
</item>
<item>
  <title>麦肯锡问题分析与解决</title>
  <link>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E5%86%B3/</link>
  <pubDate>Wed, 05 Jan 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E5%86%B3/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/14/18/36/telework-6795505__340.jpg" referrerpolicy="no-referrer">
      </div>核心能力是解决问题的能力；分析能力是解决问题的必要技术；有解决问题的技术，专业才能得以发挥（例如：如何因对顾客的申诉，如何迅速回收账款，如何]]></description>
</item>
<item>
  <title>麦肯锡解决方法与技巧</title>
  <link>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/</link>
  <pubDate>Wed, 05 Jan 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%BA%A6%E8%82%AF%E9%94%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/08/07/27/lily-6923417__340.jpg" referrerpolicy="no-referrer">
      </div>除了技术理论之外，自身的人格魅力，对工作的态度，对事物的看法，思考的逻辑都特别重要，只有基于事实采取某种行动，信息才能有价值。今后是头脑的时]]></description>
</item>
<item>
  <title>动态实例化与Register</title>
  <link>https://liudongdong1.github.io/%E5%8A%A8%E6%80%81%E5%AE%9E%E4%BE%8B%E5%8C%96%E4%B8%8Eregister/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%8A%A8%E6%80%81%E5%AE%9E%E4%BE%8B%E5%8C%96%E4%B8%8Eregister/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/3H1PTCEQYT.jpg" referrerpolicy="no-referrer">
      </div>写具体的网络结构，它往往是一个Class，并且往往是一个单独的文件 配置文件中会指定我们使用哪一个网络结构，往往是Class name 在训练过程的某一]]></description>
</item>
<item>
  <title>LeapMotionRelative</title>
  <link>https://liudongdong1.github.io/leapmotionrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/leapmotionrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133339.png" referrerpolicy="no-referrer">
      </div>1. Leap Motion Introduce Leap Motion是一种检测和跟踪hands, fingers and finger-like tools的设备。该设备在一个较近的环境中操作，精度高，跟踪帧速率高。Leap Motion 视野]]></description>
</item>
<item>
  <title>FaceRecognition</title>
  <link>https://liudongdong1.github.io/facerecognition/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/facerecognition/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/laptop-notebook-working-outside.jpg" referrerpolicy="no-referrer">
      </div>1. 人脸检测问题 在实际工程应用中，常常会面临非常复杂的工况。一方面算法准确度会受到很多因素影响，例如目标遮挡、光线变化、小尺寸人脸等等。另一方]]></description>
</item>
<item>
  <title>Network</title>
  <link>https://liudongdong1.github.io/network/</link>
  <pubDate>Thu, 16 Jul 2020 23:28:40 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/network/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/desk-designer-typography-brochure.jpg" referrerpolicy="no-referrer">
      </div>level: CVPR CCF A author: Eddy IIg date: 2017 keyword: Optical Flow Paper: FlowNET2.0不理解 Summary 文章以实验主导,数据的顺序, 模型的叠加,各种算法结果 Note 去加强 https://lmb.informatik.uni-freiburg.de/ Proble Statement previous work: End-to-End optical flow estimation with CNNs was first]]></description>
</item>
<item>
  <title>Multi-Camera Basic</title>
  <link>https://liudongdong1.github.io/multi-camera-basic/</link>
  <pubDate>Tue, 30 Jun 2020 08:57:33 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/multi-camera-basic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/5.jpeg" referrerpolicy="no-referrer">
      </div>利用计算机视觉技术对场景中的人进行智能分析是当前最重要的研究问题之一，但挑战仍未被完全解决，比如遮挡、运动模糊、尺度变化、光照变化、适应新场]]></description>
</item>
<item>
  <title>DataSet_Record</title>
  <link>https://liudongdong1.github.io/dataset-record/</link>
  <pubDate>Mon, 13 Jul 2020 10:30:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dataset-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/33.jpeg" referrerpolicy="no-referrer">
      </div>在以数据驱动的人工智能时代，本文用于平时学习或者阅读论文中所涉及到的开源数据集积累。dataset知识图谱 More:https://www.codetd.com/article/7219369 Dataset: https://www.cnblogs.com/xiaojianliu/p/9446358.html FaceScape 一个大规模高质量的3D人脸]]></description>
</item>
<item>
  <title>OpticalFlow</title>
  <link>https://liudongdong1.github.io/opticalflow/</link>
  <pubDate>Sat, 07 Nov 2020 11:18:21 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opticalflow/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132829.png" referrerpolicy="no-referrer">
      </div>光流（optical flow）是空间运动物体在观察成像平面上的像素运动的瞬时速度。光流法是利用图像序列中像素在时间域上的变化以及相邻帧之间的]]></description>
</item>
<item>
  <title>PictureFeature</title>
  <link>https://liudongdong1.github.io/picturefeature/</link>
  <pubDate>Fri, 22 Jan 2021 11:18:21 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/picturefeature/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132803.png" referrerpolicy="no-referrer">
      </div>Suárez, Iago, et al. &ldquo;BEBLID: Boosted efficient binary local image descriptor.&rdquo; Pattern Recognition Letters 133 (2020): 366-372. Paper: BEBLID: Summary BEBLID, an efficient learned binary image descriptor; achieves an accuracy close to SIFT and better computational efficiency than ORB. BEBLID details: use the integral image to efficiently compute the difference between the mean gray values in a pair of square image regions. use the]]></description>
</item>
<item>
  <title>InNomalDetection</title>
  <link>https://liudongdong1.github.io/innomaldetection/</link>
  <pubDate>Fri, 30 Apr 2021 08:57:33 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/innomaldetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/5.jpeg" referrerpolicy="no-referrer">
      </div>异常是指偏离预期的事件或项目。与标准事件的频率相比，异常事件的频率较低。产品中可能出现的异常通常是随机的，例如颜色或纹理的变化、划痕、错位、]]></description>
</item>
<item>
  <title>VideoStability</title>
  <link>https://liudongdong1.github.io/videostability/</link>
  <pubDate>Wed, 19 May 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/videostability/</guid>
  <description><![CDATA[1. 3D Video Stabilization with Depth Estimation by CNN-based Optimization （CVPR 2021） [论文][项目] 基于CNN优化的深度估计三维视频稳定我们提出了一种新的基于深度的三维视频稳定学习方法]]></description>
</item>
<item>
  <title>嵌入式学习路线</title>
  <link>https://liudongdong1.github.io/embededlearning/</link>
  <pubDate>Fri, 19 Aug 2022 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/embededlearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/86.jpeg" referrerpolicy="no-referrer">
      </div>接口的幂等性 查询操作 唯一索引 token机制，防止重复提交 数据库的delete/update操作 乐观锁 悲观锁 Redis、zookeeper 分布]]></description>
</item>
<item>
  <title>Flask_BookManageSystem</title>
  <link>https://liudongdong1.github.io/flask_bookmanagesystem/</link>
  <pubDate>Wed, 19 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/flask_bookmanagesystem/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/86.jpeg" referrerpolicy="no-referrer">
      </div>1. JavaScript 1.1. 函数 var cars = [&#34;Saab&#34;, &#34;Volvo&#34;, &#34;BMW&#34;]; var txt = &#34;string&#34;; var b2=new Boolean(1); var x = Math.PI; // 返回PI var y = Math.sqrt(16); // 返回16的平方根 var num = new Number(value); try { adddlert(&#34;Welcome&#34;); } catch(err) { document.getElementById(&#34;demo&#34;).innerHTML = err.name + &#34;&lt;br&gt;&#34; + err.message; } 1.2. DOM 在 HTML DOM (Document Object Model) 中 , 每]]></description>
</item>
<item>
  <title>sqlite</title>
  <link>https://liudongdong1.github.io/sqlite/</link>
  <pubDate>Sun, 15 Nov 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sqlite/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/67.jpeg" referrerpolicy="no-referrer">
      </div>1. Sqlite installation 进入D:/software/sqlite目录并打开sqlite3命令。它将如下所示： tar xvfz sqlite-autoconf-3071502.tar.gz cd sqlite-autoconf-3071502 ./configure --prefix=/usr/local make make install #----- usage # 创建数据库 sqlite3 DatabaseName.db #退出 sqlite&gt; .quit]]></description>
</item>
<item>
  <title>WSGI_Learning</title>
  <link>https://liudongdong1.github.io/wsgi_learning/</link>
  <pubDate>Sat, 26 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wsgi_learning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/10/22/10/04/woman-2877322__340.jpg" referrerpolicy="no-referrer">
      </div>WSGI有两方：“服务器”或“网关”一方，以及“应用程序”或“应用框架”一方。服务方调用应用方，提供环境信息，以及一个回调函数（提供给应用程]]></description>
</item>
<item>
  <title>TFLearn</title>
  <link>https://liudongdong1.github.io/tflearn/</link>
  <pubDate>Sun, 26 Apr 2020 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/tflearn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210512141236.png" referrerpolicy="no-referrer">
      </div>TFlearn is a modular and transparent deep learning library built on top of Tensorflow. It was designed to provide a higher-level API to TensorFlow in order to facilitate and speed-up experimentations, while remaining fully transparent and compatible with it. 1. layers File Layers core input_data, fully_connected, dropout, custom_layer, reshape, flatten, activation, single_unit, highway, one_hot_encoding, time_distributed conv conv_2d, conv_2d_transpose, max_pool_2d, avg_pool_2d, upsample_2d, conv_1d, max_pool_1d, avg_pool_1d, residual_block, residual_bottleneck, conv_3d, max_pool_3d, avg_pool_3d, highway_conv_1d,]]></description>
</item>
<item>
  <title>文件系统Fuse</title>
  <link>https://liudongdong1.github.io/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-fuse/</link>
  <pubDate>Sat, 30 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-fuse/</guid>
  <description><![CDATA[filesystem types: 文件系统类型 superblock: 整个文件系统的元信息 inode: 单个文件的元信息 dentry: 目录项，一个文件目录对应一个dentry file: 进程打开的一个文件 基于块设备的文件系统(]]></description>
</item>
<item>
  <title>HDFSRelative</title>
  <link>https://liudongdong1.github.io/hdfsrelative/</link>
  <pubDate>Wed, 13 May 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/hdfsrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132327.png" referrerpolicy="no-referrer">
      </div>HDFS是hadoop实现的一个分布式文件系统。(Hadoop Distributed File System)来源于Google的GFS论文。它的设计目标有：非常巨大的分]]></description>
</item>
<item>
  <title>ObjectDetection</title>
  <link>https://liudongdong1.github.io/objectdetection/</link>
  <pubDate>Wed, 25 Nov 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/objectdetection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>1. NanoDet NanoDet 是一个速度超快和轻量级的移动端 Anchor-free 目标检测模型。该模型具备以下优势： 超轻量级：模型文件大小仅 1.8m； 速度超快：在移动 ARM CPU 上的速度达到 9]]></description>
</item>
<item>
  <title>复盘思维</title>
  <link>https://liudongdong1.github.io/%E5%A4%8D%E7%9B%98%E6%80%9D%E7%BB%B4/</link>
  <pubDate>Mon, 03 Jan 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%A4%8D%E7%9B%98%E6%80%9D%E7%BB%B4/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/28/04/12/snow-6898585__340.jpg" referrerpolicy="no-referrer">
      </div>复盘包括四个阶段：回顾目标和过程，反思原因，探究规律，提升能力。 小事及时复盘，大事阶段性复盘，事后全面复盘，任何时间，任何点点，任何事件，只]]></description>
</item>
<item>
  <title>vscodeModelPNG</title>
  <link>https://liudongdong1.github.io/vscodemodelpng/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/vscodemodelpng/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/08/19/05/17/large-895567__340.jpg" referrerpolicy="no-referrer">
      </div>1. ResMLP ResMLP, an architecture built entirely upon multi-layer perceptrons for image classification. It is a simple residual network that alternates (i) a linear layer in which image patches interact, independently and identically across channels, and (ii) a two-layer feed-forward network in which channels interact independently per patch. When trained with a modern training strategy using heavy data-augmentation and optionally distillation, it attains surprisingly good accuracy/complexity trade-offs on ImageNet.
2. VIT Touvron, Hugo, et al.]]></description>
</item>
<item>
  <title>One-hot</title>
  <link>https://liudongdong1.github.io/one-hot/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/one-hot/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210524155210.png" referrerpolicy="no-referrer">
      </div>1. 离散特征的编码 离散特征的取值之间没有大小的意义，比如color：[red,blue],那么就使用one-hot编码 离散特征的取值有大小的意]]></description>
</item>
<item>
  <title>CrossDomain</title>
  <link>https://liudongdong1.github.io/crossdomain/</link>
  <pubDate>Thu, 03 Dec 2020 18:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/crossdomain/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/fall-leaf_VUPSHHDWZB.jpg" referrerpolicy="no-referrer">
      </div>UDA refers to a set of transfer learning methods for transferring knowledge learned from th source domain to the target domain under the assumption of domain discrepancy. Domain adaptation generally assumes that the two domains have the same conditional distributions, but different marginal distributions. 1. Resource Paper List: https://github.com/zhaoxin94/awesome-domain-adaptation Project List: https://github.com/jindongwang/transferlearning Na J, Jung H, Chang H J, et al. FixBi: Bridging Domain Spaces for Unsupervised Domain Adaptation[C] //Proceedings]]></description>
</item>
<item>
  <title>MetaLearning</title>
  <link>https://liudongdong1.github.io/metalearning/</link>
  <pubDate>Thu, 03 Dec 2020 18:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/metalearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/01/19/16/49/laptop-1149412__340.jpg" referrerpolicy="no-referrer">
      </div>Few-shot classification aims to learn a classifier to recognize unseen classes during training with limited labeled examples. meta-learning paradigm: transferable knowledge is extracted and propagated from a collection of tasks to prevent over fitting and improve generalization. model initialization based methods; metric learning methods hallucination based methods directly predicting the weighs of the classifiers for novel classes Relative Work
Initialization based methods: good model initialization: to learn to fine-tune, learn with limited number of labeled examples and small number of gradient update steps; learning an optimizer: LSTM-based meta-learner for replacing the stochastic gradient decent optimizer.]]></description>
</item>
<item>
  <title>BatchNormalization</title>
  <link>https://liudongdong1.github.io/batchnormalization/</link>
  <pubDate>Mon, 31 Aug 2020 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/batchnormalization/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/artificial-intelligence-2167835__340.webp" referrerpolicy="no-referrer">
      </div>1. Internal Covariate Shift 统计学习中的一个很重要的假设就是输入的分布是相对稳定的。如果这个假设不满足，则模型的收敛会很慢，甚至无法收敛。所以，对于一般的统计学]]></description>
</item>
<item>
  <title>ErrorRecord</title>
  <link>https://liudongdong1.github.io/errorrecord/</link>
  <pubDate>Mon, 26 Apr 2021 21:38:11 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/errorrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2014/07/01/12/34/office-381228__340.jpg" referrerpolicy="no-referrer">
      </div>1. 错误记录 RuntimeError: Given groups=1, weight of size [64, 1, 3, 3], expected input[1, 3, 512, 512] to have 1 channels, but got 3 channels instead # img = Image.open(&#39;test.png&#39;) if img.mode != &#39;L&#39;: img = img.convert(&#39;L&#39;) #[1, 1, 512, 512] TypeError: can’t multiply sequence by non-int of type &lsquo;float’ 不]]></description>
</item>
<item>
  <title>ModeType</title>
  <link>https://liudongdong1.github.io/modeltype/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/modeltype/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210523233155.png" referrerpolicy="no-referrer">
      </div>1. 回归问题 回归问题通常是用来预测一个值，如预测房价、未来的天气情况等等，例如一个产品的实际价格为500元，通过回归分析预测值为499元，我们]]></description>
</item>
<item>
  <title>ModelEvaluation</title>
  <link>https://liudongdong1.github.io/modelevaluation/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/modelevaluation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210523231245.png" referrerpolicy="no-referrer">
      </div>0. Sklearn Metric .1. Classification metrics See the Classification metrics section of the user guide for further details. metrics.accuracy_score(y_true, y_pred, *[, …]) Accuracy classification score. metrics.auc(x, y) Compute Area Under the Curve (AUC) using the trapezoidal rule. metrics.average_precision_score(y_true, …) Compute average precision (AP) from prediction scores. metrics.balanced_accuracy_score(y_true, …) Compute the balanced accuracy. metrics.brier_score_loss(y_true, y_prob, *) Compute the Brier score loss. metrics.classification_report(y_true, y_pred, *) Build a text]]></description>
</item>
<item>
  <title>lightModel</title>
  <link>https://liudongdong1.github.io/lightmodel/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/lightmodel/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/HW0F1MGKHV.jpg" referrerpolicy="no-referrer">
      </div>轻量型模型汇总https://mp.weixin.qq.com/s/Ako1-LftttHyL1YnxVB8tA]]></description>
</item>
<item>
  <title>layerIntroduce</title>
  <link>https://liudongdong1.github.io/layerintroduce/</link>
  <pubDate>Tue, 06 Apr 2021 17:23:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/layerintroduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/23/14/37/apple-1853259__340.jpg" referrerpolicy="no-referrer">
      </div>1. 卷积层 卷积运算：卷积核在输入图像上滑动，相应位置上进行相加。卷积过程类似于用一个模板去图像上寻找与他相似的区域，与卷积核模式越相似，激活值]]></description>
</item>
<item>
  <title>Ghost</title>
  <link>https://liudongdong1.github.io/ghostnetpaper/</link>
  <pubDate>Tue, 26 Jan 2021 23:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ghostnetpaper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/07/17/22/43/student-849824__340.jpg" referrerpolicy="no-referrer">
      </div> Han, Kai, et al. &ldquo;Ghostnet: More features from cheap operations.&rdquo; Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 2020.
Paper: Ghost Summary apply a series of linear transformations with cheap cost to generate many ghost feature maps that could fully reveal information undelying intrinsic features; source code:https://github.com/huawei-noah/ghostnet ]]></description>
</item>
<item>
  <title>WalabotRelative</title>
  <link>https://liudongdong1.github.io/walabotrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/walabotrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/06/24/16/36/office-820390__340.jpg" referrerpolicy="no-referrer">
      </div>Walabot is a pocket-sized device that provides cutting-edge technology for Radio Frequency (RF) tridimensional (3D) sensing and image processing, enabling sophisticated applications such as:
Breathing monitoring Object tracking and fall detection In-wall pipe and wire detection .1. Image Features .1. Scan Profiles Short-range: Short-range, penetrative scanning inside dielectric materials such as walls. Profiles for distance scanning: Sensor: High-resolution images, but slower capture rate. Sensor narrow: Lower-resolution images for a fast capture rate.]]></description>
</item>
<item>
  <title>嵌入式Linux应用开发--完全手册阅读</title>
  <link>https://liudongdong1.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8Flinux%E5%BC%80%E5%8F%91/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8Flinux%E5%BC%80%E5%8F%91/</guid>
  <description><![CDATA[SCM: 又称单片微型计算机，简称单片机，随着大规模集成电路的出现及其发展，计算机的CPU、RAM、ROM、定时数器和多种I/O接口集成在一片芯片上]]></description>
</item>
<item>
  <title>softmax</title>
  <link>https://liudongdong1.github.io/softmax/</link>
  <pubDate>Wed, 24 Mar 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/softmax/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113610.png" referrerpolicy="no-referrer">
      </div>1. softmax函数 softmax用于多分类过程中，它将多个神经元的输出，映射到（0,1）区间内。假设我们有一个数组，V，Vi表示V中的第i]]></description>
</item>
<item>
  <title>LossFunction</title>
  <link>https://liudongdong1.github.io/lossfunction/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/lossfunction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/12/18/16/56/laptop-5842509__340.jpg" referrerpolicy="no-referrer">
      </div>1. logSoftmax CLASStorch.nn.``LogSoftmax(dim=None) Input: (*)(∗) where * means, any number of additional dimensions Output: (*)(∗) , same shape as the input dim (int) – A dimension along which LogSoftmax will be computed. 参数dim=1表示对每一行求softmax，那么每一行的]]></description>
</item>
<item>
  <title>LinearLayer</title>
  <link>https://liudongdong1.github.io/linearlay/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/linearlay/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/06/01/09/05/facebook-793048__340.jpg" referrerpolicy="no-referrer">
      </div>torch.nn.``Linear(in_features, out_features, bias=True) [docs]class Linear(Module): r&#34;&#34;&#34;Applies a linear transformation to the incoming data: :math:`y = xA^T + b` Examples:: &gt;&gt;&gt; m = nn.Linear(20, 30) &gt;&gt;&gt; input = torch.randn(128, 20) &gt;&gt;&gt; output = m(input) &gt;&gt;&gt; print(output.size()) torch.Size([128, 30]) &#34;&#34;&#34; __constants__ = [&#39;in_features&#39;, &#39;out_features&#39;] in_features: int out_features: int weight: Tensor def __init__(self, in_features: int, out_features: int, bias: bool = True) -&gt; None: super(Linear, self).__init__() self.in_features = in_features self.out_features = out_features self.weight =]]></description>
</item>
<item>
  <title>Layernorm</title>
  <link>https://liudongdong1.github.io/layernorm/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/layernorm/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/29/11/52/computer-1869306__340.jpg" referrerpolicy="no-referrer">
      </div>BN，LN，IN，GN从学术化上解释差异： BatchNorm：batch方向做归一化，算NHW的均值，对小batchsize效果不好；BN主]]></description>
</item>
<item>
  <title>Embedding</title>
  <link>https://liudongdong1.github.io/embedding/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/embedding/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/05/08/14/47/seo-758264__340.jpg" referrerpolicy="no-referrer">
      </div>1. Embedding CLASStorch.nn.``Embedding(num_embeddings, embedding_dim, padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False, _weight=None) num_embeddings (int) – size of the dictionary of embeddings，nn.embedding的输入只能是编号，不能是隐藏变量，比如one-hot，或者]]></description>
</item>
<item>
  <title>Dropout</title>
  <link>https://liudongdong1.github.io/dropout/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dropout/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/07/08/04/12/work-5382501__340.jpg" referrerpolicy="no-referrer">
      </div> torch.nn.``Dropout(p=0.5, inplace=False)
During training, randomly zeroes some of the elements of the input tensor with probability p using samples from a Bernoulli distribution`.
proven to be an effective technique for regularization and preventing the co-adaptation of neurons as described in the paper Improving neural networks by preventing co-adaptation of feature detectors . [docs]class Dropout(_DropoutNd): def forward(self, input: Tensor) -&gt; Tensor: return F.dropout(input, self.p, self.training, self.inplace) ]]></description>
</item>
<item>
  <title>ActivateFunction</title>
  <link>https://liudongdong1.github.io/activatefunction/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/activatefunction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210524093626.png" referrerpolicy="no-referrer">
      </div>神经网络中的每个神经元节点接受上一层神经元的输出值作为本神经元的输入值，并将输入值传递给下一层，输入层神经元节点会将输入属性值直接传递给下一]]></description>
</item>
<item>
  <title>读书计划</title>
  <link>https://liudongdong1.github.io/ainetworkprediction/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ainetworkprediction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>0. Java知识整理 Jvm 调优阅读笔记回顾 effective java 阅读笔记回顾 无锁循环队列 ##### Hystrix 具体实现 线程池设计使用 7Spring Cloud Gateway 8Spring Cloud Config 9Spring Cloud Alibaba是什么 10Spring Cloud Alibaba Nacos 11Spring Cloud Alibaba]]></description>
</item>
<item>
  <title>Resnet</title>
  <link>https://liudongdong1.github.io/resnet/</link>
  <pubDate>Tue, 13 Oct 2020 09:47:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/resnet/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201129141316442.png" referrerpolicy="no-referrer">
      </div>&#34;&#34;&#34; ResNet( (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False) (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) (relu): ReLU(inplace) (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False) (layer1): Sequential( (0): BasicBlock( (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False) (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) (relu): ReLU(inplace) (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False) (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) ) (1): BasicBlock( (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False) (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.]]></description>
</item>
<item>
  <title>MEALv2</title>
  <link>https://liudongdong1.github.io/mealv2/</link>
  <pubDate>Sat, 19 Sep 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mealv2/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/sunset-over-lake-1.jpg" referrerpolicy="no-referrer">
      </div>level: author: Zhiqiang Shen Marios Savvides(Carnegie Mello University) date: 2020,9,17 keyword: knowledge distillation; discriminators; Paper: MEALv2 Summary simplify MEAL by several methods: adopting the similarity loss and discriminator only on the final outputs; using the average of softmax probabilities from all teacher ensembles as the stronger supervision for distillation; the first to boost vanilla resnet-50 to surpass 80% on ImageNet without architecture modification or additional training data; only relies on]]></description>
</item>
<item>
  <title>面经_计算机网络</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
  <pubDate>Mon, 21 Mar 2022 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/24/15/17/cat-7032641__340.jpg" referrerpolicy="no-referrer">
      </div>计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和]]></description>
</item>
<item>
  <title>OpenHarmony 临时学习记录</title>
  <link>https://liudongdong1.github.io/openharmony%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/openharmony%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>1. 系统架构 内核层 内核子系统：采用多内核（Linux内核或者LiteOS）设计，支持针对不同资源受限设备选用适合的OS内核。内核抽象层（KAL]]></description>
</item>
<item>
  <title>云计算课程</title>
  <link>https://liudongdong1.github.io/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%BE%E7%A8%8B/</link>
  <pubDate>Thu, 22 Apr 2021 21:00:00 &#43;0000</pubDate>
  <author>liudongdong</author>
  <guid>https://liudongdong1.github.io/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%BE%E7%A8%8B/</guid>
  <description><![CDATA[计算设备也称为计算资源，计算资源包括 CPU、内存、硬盘和网络。而在机房中，磁盘只是存储大类中的一种，存储还包括磁带库、阵列、SAN、NAS 等]]></description>
</item>
<item>
  <title>面经_docker</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_docker/</link>
  <pubDate>Thu, 24 Mar 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_docker/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/21/08/49/salix-caprea-7082638__340.jpg" referrerpolicy="no-referrer">
      </div>Docker 容器是轻量级的虚拟技术，占用更少系统资源。 使用 Docker 容器，不同团队（如开发、测试，运维）之间更容易合作。 可以在任何地方部署 Docker 容器，比如在任何物]]></description>
</item>
<item>
  <title>将博客搬至CSDN</title>
  <link>https://liudongdong1.github.io/csdn%E5%8D%9A%E5%AE%A2%E5%A3%B0%E6%98%8E/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/csdn%E5%8D%9A%E5%AE%A2%E5%A3%B0%E6%98%8E/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2023/09/04/16/21/spider-8233129_640.jpg" referrerpolicy="no-referrer">
      </div>1. 为什么写博客： ​ 我是在大二的时候进入到老师实验室的，期间老师给我们分配了一些任务，之前我一直是在图书馆看书，在电脑上逐行打出demo，然后]]></description>
</item>
<item>
  <title>NLPHotTopic</title>
  <link>https://liudongdong1.github.io/nlphottopic/</link>
  <pubDate>Sat, 15 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/nlphottopic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113138.png" referrerpolicy="no-referrer">
      </div>This week i get a summary knowledge of NLP, and learn some direction for further learning. And in this blog, i will record what i learned this weak by searching some information on Internet, the content is organized as follows: the Preparatory knowledge which need to be master in the following years, and some direction in NLP areas from model sides, application sides and the scene task, and some paper]]></description>
</item>
<item>
  <title>TaskMind</title>
  <link>https://liudongdong1.github.io/taskmind/</link>
  <pubDate>Sat, 13 Jun 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/taskmind/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/10/18/19/40/anatomy-1751201__340.png" referrerpolicy="no-referrer">
      </div>算法刷题，sql刷题； 1. 技术栈 1. java 基础 精通io、多线程、集合等基础框架，熟悉设计模式和代码规范，很强的代码编写能力、java虚拟机诊断和调优]]></description>
</item>
<item>
  <title>定时任务</title>
  <link>https://liudongdong1.github.io/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/V6FI5U7UW8.jpg" referrerpolicy="no-referrer">
      </div>1. 系统自带 .1. Linux crontab crontab [参数] [文件名]; 运行crontab -e，可以编辑定时器; crontab 文件具体语法： [分] [小时] [日期] [月] [星期] 具体任务 0]]></description>
</item>
<item>
  <title>保留俩位小数</title>
  <link>https://liudongdong1.github.io/%E4%BF%9D%E7%95%99%E4%BF%A9%E4%BD%8D%E5%B0%8F%E6%95%B0/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E4%BF%9D%E7%95%99%E4%BF%A9%E4%BD%8D%E5%B0%8F%E6%95%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/02/25/00/17/kitten-4018756__340.jpg" referrerpolicy="no-referrer">
      </div>1. BigDecimal public static String format1(double value) { BigDecimal bd = new BigDecimal(value); bd = bd.setScale(2, RoundingMode.HALF_UP); return bd.toString(); } 2. DecimalFormat public static String format2(double value) { DecimalFormat df = new DecimalFormat(&#34;0.00&#34;); df.setRoundingMode(RoundingMode.HALF_UP); return df.format(value); } 3. NumberFormat public static String format3(double value) { NumberFormat nf = NumberFormat.getNumberInstance(); nf.setMaximumFractionDigits(2); /* * setMinimumFraction]]></description>
</item>
<item>
  <title>WindowStructure</title>
  <link>https://liudongdong1.github.io/windowstructure/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/windowstructure/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/02/09/21/19/dog-walk-snow-6000001__340.jpg" referrerpolicy="no-referrer">
      </div>1. CircularFifoQueue 通过改变start 和end的索引位置，实现先进先出的操作，同时获取值的时候按照进入的顺序。 依赖包：implementation group: &lsquo;org.apache.commons&rsquo;, name: &lsquo;commons-collections4&rsquo;, version:]]></description>
</item>
<item>
  <title>RandomFunction</title>
  <link>https://liudongdong1.github.io/randomfunction/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/randomfunction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/27/19/01/sheeps-6828766__340.jpg" referrerpolicy="no-referrer">
      </div>1. Random Random 使用的随机算法为 linear congruential pseudorandom number generator (LGC) 线性同余法伪随机数。在随机数生成时，随机算法的起源数字称为种子数（seed），在种子数的基础上进行一定的变]]></description>
</item>
<item>
  <title>ExamplesDL4J</title>
  <link>https://liudongdong1.github.io/examplesdl4j/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/examplesdl4j/</guid>
  <description><![CDATA[dl4j-examples This project contains a set of examples that demonstrate use of the high level DL4J API to build a variety of neural networks. Some of these examples are end to end, in the sense they start with raw data, process it and then build and train neural networks on it. tensorflow-keras-import-examples This project contains a set of examples that demonstrate how to import Keras h5 models and TensorFlow frozen pb models into the DL4J ecosystem.]]></description>
</item>
<item>
  <title>C# Reference&amp;&amp;Valuepassing</title>
  <link>https://liudongdong1.github.io/c-reference-valuepassing/</link>
  <pubDate>Wed, 13 May 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/c-reference-valuepassing/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/vintage-camera-on-wooden-table.jpg" referrerpolicy="no-referrer">
      </div>Java中传参都是值传递，如果是基本类型，就是对值的拷贝，如果是对象，就是对引用地址的拷贝。C# 中传递的参数是基元类型（int，float等]]></description>
</item>
<item>
  <title>byteIntRelative</title>
  <link>https://liudongdong1.github.io/byteintrelative/</link>
  <pubDate>Wed, 13 May 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/byteintrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132102.png" referrerpolicy="no-referrer">
      </div>1byte = 8 bit； 1. 强制转化截取和 精确转化 int强转成byte，而不是本文所说的int转byte[]。通过前一个问题我们知道int占32位，而b]]></description>
</item>
<item>
  <title>JDK_CollectionThreadSafe</title>
  <link>https://liudongdong1.github.io/jdk_collectionthreadsafe/</link>
  <pubDate>Tue, 13 Oct 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdk_collectionthreadsafe/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/HB4IJY3TPI.jpg" referrerpolicy="no-referrer">
      </div>CopyOnWriteArrayList的写操作与Vector的遍历操作性能消耗尤其严重，不推荐使用。 CopyOnWriteArrayLis]]></description>
</item>
<item>
  <title>JDK_Collection</title>
  <link>https://liudongdong1.github.io/jdk_collection/</link>
  <pubDate>Tue, 13 Oct 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdk_collection/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/VEZBQZBINB.jpg" referrerpolicy="no-referrer">
      </div>1. set .1. TreeSet 基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如 HashSet，HashSet 查找的时间复杂度为 O(]]></description>
</item>
<item>
  <title>Collection</title>
  <link>https://liudongdong1.github.io/jdk_collection0/</link>
  <pubDate>Tue, 13 Oct 2020 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdk_collection0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210510230128.png" referrerpolicy="no-referrer">
      </div>**数组（可以存储基本数据类型）**是用来存现对象的一种容器，但是数组的长度固定，不适合在对象数量未知的情况下使用。 集合（只能存储对象，对象]]></description>
</item>
<item>
  <title>Number</title>
  <link>https://liudongdong1.github.io/number/</link>
  <pubDate>Mon, 10 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/number/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210510093856.png" referrerpolicy="no-referrer">
      </div>8种基本数据类型并不支持面向对象的特征，它们既不是类，也不能调用方法。 1. Number BigDecimal 和 BigInteger 用于高精度计算。AtomicInteger 和 AtomicLong 用于多线程应用]]></description>
</item>
<item>
  <title>HutoolLearning</title>
  <link>https://liudongdong1.github.io/hutoollearning/</link>
  <pubDate>Fri, 11 Jun 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/hutoollearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/12/04/14/05/code-1076536__480.jpg" referrerpolicy="no-referrer">
      </div>Hutool是一个小而全的Java工具类库，通过静态方法封装，降低相关API的学习成本，提高工作效率，使Java拥有函数式语言般的优雅，让J]]></description>
</item>
<item>
  <title>Basic_String</title>
  <link>https://liudongdong1.github.io/basic_string/</link>
  <pubDate>Tue, 13 Jul 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/basic_string/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/22/16/50/landscape-6887936__340.jpg" referrerpolicy="no-referrer">
      </div>字符串广泛应用 在 Java 编程中，在 Java 中字符串属于对象，Java 提供了 String 类来创建和操作字符串。 1. 创建 String s1 = &#34;Runoob&#34;; // String 直接创建 String s2 = &#34;Runoob&#34;; // String 直接创建 String s3 = s1;]]></description>
</item>
<item>
  <title>JavaFloatConvert</title>
  <link>https://liudongdong1.github.io/doublefloatconvert/</link>
  <pubDate>Sun, 10 Oct 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/doublefloatconvert/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/28/22/28/rose-leaf-6831355__340.jpg" referrerpolicy="no-referrer">
      </div>Double.floatValue(), Double.doubleValue() 是准确的，但是Float.doubleValue()是不准确的, 单精度转双精度的时候，双精度会对单精度进行补位。导致出现偏差。 Float f=new Float(14.1); System.out.println(f.floatValue()); System.out.println(f.doubleValue());]]></description>
</item>
<item>
  <title>面经_JVM</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_jvm/</link>
  <pubDate>Mon, 21 Mar 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_jvm/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/04/20/15/04/hare-6194141__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 简述垃圾回收机制 在 JVM 中，有一个垃圾回收线程，它是低优先级的，在正常情况下是不会执行的，只有在虚拟机空闲或者当前堆内存不足时，才会触发执行，]]></description>
</item>
<item>
  <title>AllenNLPIntroduce</title>
  <link>https://liudongdong1.github.io/allennlpintroduce/</link>
  <pubDate>Tue, 20 Oct 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/allennlpintroduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501113113.png" referrerpolicy="no-referrer">
      </div>you can write your own script to construct the dataset reader and model and run the training loop, or you can write a configuration file and use the allennlp train command 1. Text Classification Spam filtering Detect and filter spam emails Email Spam / Not spam Sentiment analysis Detect the polarity of text Tweet, review Positive / Negative Topic detection Detect the topic of text News article, blog post Business]]></description>
</item>
<item>
  <title>SPDK_paper</title>
  <link>https://liudongdong1.github.io/spdk_paper/</link>
  <pubDate>Fri, 29 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/spdk_paper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/08/03/42/squirrel-7181213__340.jpg" referrerpolicy="no-referrer">
      </div>Ziye Yang, James R. Harris, Benjamin Walker, Daniel Verkamp, Changpeng Liu, Cunyin Chang, Gang Cao, Jonathan Stern, Vishal Verma, Luse E. Paul:SPDK: A Development Kit to Build High Performance Storage Applications. CloudCom 2017: 154-161
Paper: SPDK provide a set of tools and libraries for writing high performance, scalable, user-mode strong applications. achieves high performance by moving the necessary drivers into user space and operating them in a polled mode instead of interrupt mode and lockless resource access.]]></description>
</item>
<item>
  <title>SPDK_IO栈&amp;线程对比</title>
  <link>https://liudongdong1.github.io/spdk-io%E6%A0%88%E7%BA%BF%E7%A8%8B%E5%AF%B9%E6%AF%94/</link>
  <pubDate>Sun, 29 May 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/spdk-io%E6%A0%88%E7%BA%BF%E7%A8%8B%E5%AF%B9%E6%AF%94/</guid>
  <description><![CDATA[IO栈对比 无论使用传统内核NVMe驱动，还是使用vhost，虚拟机内部的IO处理流程都是一样的：IO请求下发时需要从用户态应用程序中切换到内]]></description>
</item>
<item>
  <title>SPDK_IO 流程</title>
  <link>https://liudongdong1.github.io/spdk-io%E6%B5%81%E7%A8%8B/</link>
  <pubDate>Sun, 29 May 2022 20:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/spdk-io%E6%B5%81%E7%A8%8B/</guid>
  <description><![CDATA[首先，从虚拟机视角来说，它看到的是一个virtio-blk-pci设备，该pci设备内部包含一条virtio总线，其上又连接了virtio-]]></description>
</item>
<item>
  <title>贪心算法</title>
  <link>https://liudongdong1.github.io/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/10/13/59/star-6860582__340.jpg" referrerpolicy="no-referrer">
      </div>将问题分解为若干个子问题 找出适合的贪心策略（常识性推导加上举反例） 求解每一个子问题的最优解 将局部最优解堆叠成全局最优解 1. 分发饼干 假设你是一位]]></description>
</item>
<item>
  <title>前缀和</title>
  <link>https://liudongdong1.github.io/%E5%89%8D%E7%BC%80%E5%92%8C/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%89%8D%E7%BC%80%E5%92%8C/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/02/08/11/00/kitten-5994369__340.jpg" referrerpolicy="no-referrer">
      </div>1.除自身以外数组的乘积 给你一个整数数组 nums，返回 数组 answer ，其中 answer[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积 。题目数据 保证 数组 nums 之中任意元素的全部前]]></description>
</item>
<item>
  <title>链表操作</title>
  <link>https://liudongdong1.github.io/%E9%93%BE%E8%A1%A8%E6%93%8D%E4%BD%9C/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%93%BE%E8%A1%A8%E6%93%8D%E4%BD%9C/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/04/10/31/cow-6992475__340.jpg" referrerpolicy="no-referrer">
      </div>0. 解题策略 注意合理的使用 当前节点，上一个节点，以及下一个节点 .1. 哑节点 哑结点是指数据域为空，指针域指向链表头节点的节点，它是为了简化边界条件而]]></description>
</item>
<item>
  <title>矩阵类</title>
  <link>https://liudongdong1.github.io/%E7%9F%A9%E9%98%B5%E7%B1%BB/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%9F%A9%E9%98%B5%E7%B1%BB/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/18/01/10/gull-7019761__340.jpg" referrerpolicy="no-referrer">
      </div>数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址 数组元素可以覆盖 数组在内存中是连续的地址空间，不]]></description>
</item>
<item>
  <title>回溯算法</title>
  <link>https://liudongdong1.github.io/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/28/11/38/trees-6899050__340.jpg" referrerpolicy="no-referrer">
      </div>组合问题：N个数里面按一定规则找出k个数的集合 切割问题：一个字符串按一定规则有几种切割方式 子集问题：一个N个数的集合里有多少符合条件的子集 排]]></description>
</item>
<item>
  <title>滑动窗口类</title>
  <link>https://liudongdong1.github.io/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%B1%BB/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%B1%BB/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/21/21/18/animal-7027635__340.jpg" referrerpolicy="no-referrer">
      </div>「滑动窗口」是固定大小的，「双指针」是不固定大小的； 「滑动窗口」一定是同向移动的，「双指针」可以相向移动。 1. 滑动窗口最大值 239 每当我们向右移动]]></description>
</item>
<item>
  <title>哈希表</title>
  <link>https://liudongdong1.github.io/%E5%93%88%E5%B8%8C%E8%A1%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%93%88%E5%B8%8C%E8%A1%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/02/23/09/26/cat-6042858__340.jpg" referrerpolicy="no-referrer">
      </div>1. 有效数字异或 242 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。若 s 和 t 中每个字符出现的次数都相同，则称 s 和 t 互为字母异位词]]></description>
</item>
<item>
  <title>二分查找</title>
  <link>https://liudongdong1.github.io/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid>
  <description><![CDATA[1. 绝对差值和 todo 给你两个正整数数组 nums1 和 nums2 ，数组的长度都是 n 。数组 nums1 和 nums2 的 绝对差值和 定义为所有 |nums1[i] - nums2[i]|（0 &lt;= i &lt; n）的 总和（下标从]]></description>
</item>
<item>
  <title>动态规划</title>
  <link>https://liudongdong1.github.io/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/09/17/22/cat-7003849__340.jpg" referrerpolicy="no-referrer">
      </div>确定 dp 数组（dp table）以及下标的含义 确定递推公式 dp 数组如何初始化 确定遍历顺序 举例推导 dp 数组 1. 最大子数组和 给你一个整数数组 nums ，请你找出一]]></description>
</item>
<item>
  <title>递归系列问题</title>
  <link>https://liudongdong1.github.io/%E9%80%92%E5%BD%92%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%80%92%E5%BD%92%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/11/18/05/easter-eggs-7126346__340.jpg" referrerpolicy="no-referrer">
      </div>1. 汉诺塔问题 我们有由底至上为从大到小放置的 n 个圆盘，和三个柱子（分别为左 / 中 / 右即 left/mid/right），开始时所有圆盘都放在左边的]]></description>
</item>
<item>
  <title>单调栈</title>
  <link>https://liudongdong1.github.io/%E5%8D%95%E8%B0%83%E6%A0%88/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%8D%95%E8%B0%83%E6%A0%88/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/06/18/18/39/baby-2416718__340.jpg" referrerpolicy="no-referrer">
      </div>一、 单调栈一般有以下四种作用（以单调递增栈为例）： 确定离当前元素最近的更小元素的位置 由 1，递增栈可确定以当前元素为最小值的子数组的左右边界 由]]></description>
</item>
<item>
  <title>c&#43;&#43;容器类题目</title>
  <link>https://liudongdong1.github.io/c-%E5%AE%B9%E5%99%A8%E7%B1%BB%E9%A2%98%E7%9B%AE/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/c-%E5%AE%B9%E5%99%A8%E7%B1%BB%E9%A2%98%E7%9B%AE/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/19/21/48/eurasian-pygmy-owl-6881984__340.jpg" referrerpolicy="no-referrer">
      </div>1. 序列容器 .1. vector vector&lt;int&gt;first; vector&lt;int&gt; second(4,100); int myints[]={1，2，3，4}; vector&lt;int&gt; third(myints,myints+sizeof(muints)/sizeof(int)); vector&lt;int&gt;fifth={1,2,3,4}; //--------------二维vector系列-----------]]></description>
</item>
<item>
  <title></title>
  <link>https://liudongdong1.github.io/iotsolutionrecord/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/iotsolutionrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201121141104762.png" referrerpolicy="no-referrer">
      </div>工业物联网应用领域涵盖了工厂内外的各种物物连接。例如，工厂内部有许多基于IoT的工厂自动化控制项目，包括涵盖生产车间监控、车间可穿戴设备和增]]></description>
</item>
<item>
  <title>RobotService</title>
  <link>https://liudongdong1.github.io/robotservice/</link>
  <pubDate>Mon, 20 Jan 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/robotservice/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20210121163740234.png" referrerpolicy="no-referrer">
      </div>服务机器人是指利用计算机视觉、深度学习、自然语言处理、深度语义交互、语音识别等数字化技术，来实现部分人工服务的自动化或是半自动化的替代。 1. 物]]></description>
</item>
<item>
  <title>Python Property</title>
  <link>https://liudongdong1.github.io/python-%E5%86%85%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%87%BD%E6%95%B0/</link>
  <pubDate>Fri, 20 Mar 2020 14:29:26 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/python-%E5%86%85%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%87%BD%E6%95%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/pexels-photo-4050292.jpg" referrerpolicy="no-referrer">
      </div>Python内置的@property装饰器就是负责把一个方法变成属性调用的, 属性是对事物某种特性的抽象，面向对象编程中一个重要概念；区别于字]]></description>
</item>
<item>
  <title></title>
  <link>https://liudongdong1.github.io/python-module-invoking/</link>
  <pubDate>Tue, 12 May 2020 00:16:58 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/python-module-invoking/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/woman-3219507__340.webp" referrerpolicy="no-referrer">
      </div>​ 无论我们选择用何种语言进行程序设计时，都不可能只有一个文件（除了“hello world”），通常情况下，我们都需要在一个文件中调用另外一个]]></description>
</item>
<item>
  <title>Matlabdraw</title>
  <link>https://liudongdong1.github.io/matlabdraw/</link>
  <pubDate>Sat, 23 May 2020 20:11:26 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/matlabdraw/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201206180344948.png" referrerpolicy="no-referrer">
      </div>1. Matlab 绘图 1.1. Plot 函数 x=-pi:pi/10:pi; %以pi/10为步长 y=tan(sin(x))-sin(tan(x)); %求出各点上的函数值 plot(x,y,&#39;--rs&#39;,... %绘制红色的虚线，且每个转折点上用正方形表示。 &#39;LineWidth&#39;,2,... % 设置线宽为2 &#39;MarkerEdgeColor&#39;,&#39;k&#39;,...% 设置标记点边框]]></description>
</item>
<item>
  <title>Matlab Learning Record</title>
  <link>https://liudongdong1.github.io/matlab-learning-record/</link>
  <pubDate>Sat, 23 May 2020 20:11:26 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/matlab-learning-record/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/voice-recognition-speech-detect-deep-260nw-694633963.webp" referrerpolicy="no-referrer">
      </div>MATLAB是一种语法简单用途广泛的编程语言，既可以用于编写脚本，函数，也可以用于面向对象的程序开发或开发GUI界面。MATLAB被广泛应用]]></description>
</item>
<item>
  <title>Configpy</title>
  <link>https://liudongdong1.github.io/configpy/</link>
  <pubDate>Mon, 25 May 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/configpy/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/15/11/33/three-master-flower-6338258__340.jpg" referrerpolicy="no-referrer">
      </div>When develop the server applications, you could encounter a problem for managing the configuration. This issue can be encountered in every place where configuration management is needed as well as server applications. 1. built-in data structure .1. Constant config.py # config.py DATABASE_CONFIG = { &#39;host&#39;: &#39;localhost&#39;, &#39;dbname&#39;: &#39;company&#39;, &#39;user&#39;: &#39;user&#39;, &#39;password&#39;: &#39;password&#39;, &#39;port&#39;: 3306 } main.py import pymysql import config def connect_db(dbname): if dbname != config.DATABASE_CONFIG[&#39;dbname&#39;]: raise ValueError(&#34;Couldn&#39;t not find]]></description>
</item>
<item>
  <title>Panda Tutorial</title>
  <link>https://liudongdong1.github.io/panda-tutorial/</link>
  <pubDate>Fri, 29 May 2020 12:13:25 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/panda-tutorial/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/golden-gate-bridge-river-bridge-suspension-bridge.jpg" referrerpolicy="no-referrer">
      </div>1. 文件读写 pd.read_csv(filepath_or_buffer, sep=’,’, delimiter=None, header=’infer’, names=None, index_col=None, usecols=None, squeeze=False, converters=None, true_values=None, false_values=None, skiprows=None, nrows=None, na_values=None) filepath_or_buffer：文件名、文件具体或相对]]></description>
</item>
<item>
  <title>树莓派车牌识别</title>
  <link>https://liudongdong1.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB/</link>
  <pubDate>Sat, 30 May 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/01/17/20/22/analytics-3088958__340.jpg" referrerpolicy="no-referrer">
      </div>检测到车牌&amp;识别每个车牌边界框内的文本。 1. 硬件设计 2. 模型选择 Yolo3: https://github.com/experiencor/keras-yolo3 https://github.com/ThorPham/License-plate-detection CRAFT &amp; CRNN: https://github.com/faustomorales/keras-ocr 首先，YOLOv3 模型从摄像机处接收到一帧帧图像，然后在每]]></description>
</item>
<item>
  <title>条形码检测</title>
  <link>https://liudongdong1.github.io/%E6%9D%A1%E5%BD%A2%E7%A0%81%E6%A3%80%E6%B5%8B/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%9D%A1%E5%BD%A2%E7%A0%81%E6%A3%80%E6%B5%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210517223001.png" referrerpolicy="no-referrer">
      </div>将搭建一个基于机器视觉的流水线检测手机条码平台，把产品放置于流水线上，高速工业相机对其逐一采集后传送到计算机进行一系列的处理，最终检测出条码]]></description>
</item>
<item>
  <title>Vision Career</title>
  <link>https://liudongdong1.github.io/vision-career/</link>
  <pubDate>Sun, 05 Jul 2020 08:43:49 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/vision-career/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/38.jpeg" referrerpolicy="no-referrer">
      </div>1. 视频物联 视频监控：视频监控占安防产品市场5成左右， 主要由安防摄像头构成。安防摄像头经历了模拟、 数字、 网络、 高清的升级过程， 目前在向AI智能]]></description>
</item>
<item>
  <title>笔记合成</title>
  <link>https://liudongdong1.github.io/%E7%AC%94%E8%AE%B0%E5%90%88%E6%88%90/</link>
  <pubDate>Sun, 30 Aug 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%AC%94%E8%AE%B0%E5%90%88%E6%88%90/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/street-sign_BFO6I0XZMH.jpg" referrerpolicy="no-referrer">
      </div>Facebook AI最新出品的“文字风格刷”（TextStyleBrush），它只需要一张笔迹的照片，就能完美还原出一整套文本字迹来。为了同时实现图像分割]]></description>
</item>
<item>
  <title>RelationExtraction</title>
  <link>https://liudongdong1.github.io/relationextraction/</link>
  <pubDate>Mon, 19 Oct 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/relationextraction/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>1. Challenges **数据规模问题：**人工精准地标注句子级别的数据代价十分高昂，需要耗费大量的时间和人力。在实际场景中，面向数以千计的关系、数以千万计的]]></description>
</item>
<item>
  <title>Torchtext</title>
  <link>https://liudongdong1.github.io/torchtext_vocab/</link>
  <pubDate>Tue, 27 Oct 2020 08:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/torchtext_vocab/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/32.jpeg" referrerpolicy="no-referrer">
      </div>torchtext.data.Example : 用来表示一个样本，数据+标签 torchtext.vocab.Vocab: 词汇表相关 torchtext.data.Datasets: 数据集类，getitem 返回 Example实例 torchtext.data.Field : 用来定义字段的处理方法（文本字段，标签字段）]]></description>
</item>
<item>
  <title>Trycatch</title>
  <link>https://liudongdong1.github.io/trycatch/</link>
  <pubDate>Thu, 12 Nov 2020 00:16:58 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/trycatch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/bench-forest-trees-path.jpg" referrerpolicy="no-referrer">
      </div>1. try-catch 结构 1.1. try-catch结构 # 捕获指定异常 try: f =open(&#39;我为什么是个文件.txt&#39;) print(f.read()) f.close() except OSError as reason: print(&#39]]></description>
</item>
<item>
  <title>Lambda</title>
  <link>https://liudongdong1.github.io/lambda/</link>
  <pubDate>Fri, 13 Nov 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/lambda/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/attraction-binoculars-tourists-viewing-platform.jpg" referrerpolicy="no-referrer">
      </div>1. 普通函数嵌套 定义一个普通的python函数并嵌入Lambda，函数接收传入的一个参数x。然后将此参数添加到lambda函数提供的某个未知参]]></description>
</item>
<item>
  <title>Recommandation</title>
  <link>https://liudongdong1.github.io/recommandation/</link>
  <pubDate>Sun, 15 Nov 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/recommandation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201129142519025.png" referrerpolicy="no-referrer">
      </div>Recommendation Summary User 数据（用户的基础属性数据，如性别、年龄、关系链、兴趣偏好等） 对于用户兴趣偏好，一般简单地采用文本 embedding 方法来得到各标签的 embedding 向量，然后根据用]]></description>
</item>
<item>
  <title>globalVariable&amp;Lock</title>
  <link>https://liudongdong1.github.io/globalvariablelock/</link>
  <pubDate>Sun, 13 Dec 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/globalvariablelock/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/14/08/06/flower-6335202__340.jpg" referrerpolicy="no-referrer">
      </div>1. 本文件中 # 定义全局变量 num = 1 # 使用全局变量，并对其赋值 def fun1(): global num print(&#34;num= &#34; + str(num)) num = 10 print(&#34;num= &#34; + str(num)) 2. 使用其他文件中 teest1.py # 定义全局变量 num = 1 # 设置变量值 def set_num(p):]]></description>
</item>
<item>
  <title>TrashBin</title>
  <link>https://liudongdong1.github.io/trashbin/</link>
  <pubDate>Sat, 19 Dec 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/trashbin/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/06/24/15/45/laptop-820274__340.jpg" referrerpolicy="no-referrer">
      </div>1. Company .1. ECUBE .2. Alibaba .3. TOWNEW智能感应垃圾桶 2. Paper De Carolis, Berardina, Francesco Ladogana, and Nicola Macchiarulo. &ldquo;YOLO TrashNet: Garbage Detection in Video Streams.&rdquo; 2020 IEEE Conference on Evolving and Adaptive Intelligent Systems (EAIS). IEEE, 2020. [pdf] Utomo, Slamet Kristanto Tirto, Takeo HamadaNoboru Koshizuka, and Noboru Koshizuka. &ldquo;Blockchain-based Incentive System for Public Trash Bin.&rdquo; 2020 IEEE 9th]]></description>
</item>
<item>
  <title>Distribution</title>
  <link>https://liudongdong1.github.io/distribution/</link>
  <pubDate>Sun, 14 Mar 2021 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/distribution/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501132505.png" referrerpolicy="no-referrer">
      </div>import numpy as np import matplotlib.pyplot as plt import os from scipy.stats import norm import math #均值 def average(data): return np.sum(data)/len(data) #标准差 def sigmaHandle(data,avg): sigma_squ=np.sum(np.power((data-avg),2))/len(data) return np.power(sigma_squ,0.6) #高斯分布概率 def prob(data,avg,sig): sqrt_2pi=np.power(2*np.pi,0.6) coef=1/(sqrt_2pi*sig) powercoef=-1/(2*np.power(sig,2)) mypow=powercoef*(np.power((data-avg),2)) return coef*(np.exp(mypow)) #高斯连续分布 def curricularProb(data,avg,sig): gauss = norm(loc=avg, scale=sig) # loc: mean 均值， scale: standard deviation 标]]></description>
</item>
<item>
  <title>Socket</title>
  <link>https://liudongdong1.github.io/socket/</link>
  <pubDate>Mon, 10 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/socket/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210510110733.png" referrerpolicy="no-referrer">
      </div>socket屏蔽了各个协议的通信细节，使得程序员无需关注协议本身，直接使用socket提供的接口来进行互联的不同主机间的进程的通信。 1.API .1. socket 接]]></description>
</item>
<item>
  <title>Framework_Transformers</title>
  <link>https://liudongdong1.github.io/framework_transformers/</link>
  <pubDate>Thu, 13 May 2021 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/framework_transformers/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/DYRNHWZGAN.jpg" referrerpolicy="no-referrer">
      </div>provides thousands of pretrained models to perform tasks on texts such as classification, information extraction, question answering, summarization, translation, text generation and more. [code] tutorial Transformers is backed by the three most popular deep learning libraries&ndash;Jax, PyTorch, and TensorFlow. Masked word completion with BERT Name Entity Recognition with Electra Text generation with GPT-2 Natural Language Inference with RoBERTa Summarization with BART Question answering with DistilBERT Translation with T5 1. Example]]></description>
</item>
<item>
  <title>IndustryMachine</title>
  <link>https://liudongdong1.github.io/industrymachine/</link>
  <pubDate>Fri, 25 Jun 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/industrymachine/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/20/08/28/wheat-grass-6350274__340.jpg" referrerpolicy="no-referrer">
      </div>Accommodation &amp; Food Food
RobotChef - Refining recipes based on user reviews.
Food Amenities - Predicting the demand for food amenities using neural networks
Recipe Cuisine and Rating - Predict the rating and type of cuisine from a list of ingredients.
Food Classification - Classification using Keras.
Image to Recipe - Translate an image to a recipe using deep learning.
Calorie Estimation - Estimate calories from photos of food.
Fine Food Reviews - Sentiment analysis on Amazon Fine Food Reviews.]]></description>
</item>
<item>
  <title>TreeRelativeC&#43;&#43;</title>
  <link>https://liudongdong1.github.io/treerelativec-/</link>
  <pubDate>Fri, 14 Jan 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/treerelativec-/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/28/11/38/trees-6899050__340.jpg" referrerpolicy="no-referrer">
      </div>1. 根据二叉树创建字符串 给你二叉树的根节点 root ，请你采用前序遍历的方式，将二叉树转化为一个由括号和整数组成的字符串，返回构造出的字符串。 string tree2str(TreeNode *root){ if(root==nullptr){]]></description>
</item>
<item>
  <title>TreeRelative</title>
  <link>https://liudongdong1.github.io/treerelative/</link>
  <pubDate>Fri, 14 Jan 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/treerelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/28/11/38/trees-6899050__340.jpg" referrerpolicy="no-referrer">
      </div>Learning from：https://programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%80%BB%]]></description>
</item>
<item>
  <title>字符串系列</title>
  <link>https://liudongdong1.github.io/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B3%BB%E5%88%97/</link>
  <pubDate>Wed, 19 Jan 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B3%BB%E5%88%97/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/02/15/30/tealights-6763542__340.jpg" referrerpolicy="no-referrer">
      </div>1. 重复的子字符串 将两个 s连在一起，并移除第一个和最后一个字符。如果 s是该字符串的子串，那么 s就满足题目要求。 public boolean repeatedSubstringPattern(String s) { return (s + s).indexOf(s, 1) != s.length(); // 字符串]]></description>
</item>
<item>
  <title>查找算法</title>
  <link>https://liudongdong1.github.io/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link>
  <pubDate>Thu, 20 Jan 2022 08:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/07/28/22/12/autumn-865157__340.jpg" referrerpolicy="no-referrer">
      </div>1.数据流中的第 K 大元素 设计一个找到数据流中第 k 大元素的类（class）。注意是排序后的第 k 大元素，不是第 k 个不同的元素。 请实现 KthLargest 类： KthLargest(int k, int[]]]></description>
</item>
<item>
  <title>跳表</title>
  <link>https://liudongdong1.github.io/%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84--%E8%B7%B3%E8%A1%A8/</link>
  <pubDate>Sun, 13 Feb 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84--%E8%B7%B3%E8%A1%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/07/28/22/12/autumn-865157__340.jpg" referrerpolicy="no-referrer">
      </div>SkipList(跳表)这种数据结构是由William Pugh于1990年在在 Communications of the ACM June 1990, 33(6) 668-676 发表了Skip lists: a probabilistic alternative to balanced trees 原理及实现 其实跳表]]></description>
</item>
<item>
  <title>缓存结构-LRU</title>
  <link>https://liudongdong1.github.io/%E7%BC%93%E5%AD%98%E7%BB%93%E6%9E%84-lru/</link>
  <pubDate>Sun, 13 Feb 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%BC%93%E5%AD%98%E7%BB%93%E6%9E%84-lru/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/07/28/22/12/autumn-865157__340.jpg" referrerpolicy="no-referrer">
      </div>相关的Cache 实现代码 以及 通用的cache_bench 工具 已经单独摘出来，并在其上补充了一些更好展示cache内部状态的功能，代码路径：h]]></description>
</item>
<item>
  <title>排序算法</title>
  <link>https://liudongdong1.github.io/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
  <pubDate>Mon, 14 Feb 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/21/21/18/animal-7027635__340.jpg" referrerpolicy="no-referrer">
      </div>非线性时间比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此称为非线性时间比较类排序。 url 解释 线性时间]]></description>
</item>
<item>
  <title>HashMap</title>
  <link>https://liudongdong1.github.io/hashmap/</link>
  <pubDate>Sat, 19 Feb 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/hashmap/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/22/03/22/passiflora-7027917__340.jpg" referrerpolicy="no-referrer">
      </div>HashMap基于哈希表的Map接口实现，是以key-value存储形式存在，即主要用来存放键值对。HashMap 的实现不是同步的，这意味着]]></description>
</item>
<item>
  <title>栈操作</title>
  <link>https://liudongdong1.github.io/%E6%A0%88%E6%93%8D%E4%BD%9C/</link>
  <pubDate>Sun, 20 Feb 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%A0%88%E6%93%8D%E4%BD%9C/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/05/15/05/flower-7049453__340.jpg" referrerpolicy="no-referrer">
      </div>1. 最小栈 设计一个数据结构，使得每个元素 a 与其相应的最小值 m 时刻保持一一对应。因此我们可以使用一个辅助栈，与元素栈同步插入与删除，用于存储与每]]></description>
</item>
<item>
  <title>区间问题</title>
  <link>https://liudongdong1.github.io/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</link>
  <pubDate>Mon, 28 Feb 2022 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/19/07/17/tree-blossoms-7022041__340.jpg" referrerpolicy="no-referrer">
      </div>1. 区间合并问题 56 给出一堆区间，要求合并所有有交集的区间 （端点处相交也算有交集）。最后问合并之后的区间个数。 按照区间左端点从小到大排序: 维护前]]></description>
</item>
<item>
  <title>Arrays工具</title>
  <link>https://liudongdong1.github.io/arrays%E5%B7%A5%E5%85%B7/</link>
  <pubDate>Tue, 01 Mar 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/arrays%E5%B7%A5%E5%85%B7/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/08/13/42/flower-7055775__340.jpg" referrerpolicy="no-referrer">
      </div>JDK 提供的 java.util.Arrays 类，包含了常用的数组操作。Arrays 类包含了：排序、查找、填充、打印内容等常见的操作。 1.Arrays.toString () 打印数组 public static void main(String args[]) { int[] a = { 1, 2 }; System.out.println(a); //]]></description>
</item>
<item>
  <title>数组类</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E7%BB%84%E7%B1%BB/</link>
  <pubDate>Wed, 09 Mar 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E7%BB%84%E7%B1%BB/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/23/17/08/planets-7031048__340.jpg" referrerpolicy="no-referrer">
      </div>1. 多数元素 public int majorityElement(int[] nums) { Arrays.sort(nums); return nums[nums.length / 2]; } 2.递增的三元子序列 给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。 如果存在这样的三元组下标]]></description>
</item>
<item>
  <title>位运算</title>
  <link>https://liudongdong1.github.io/%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
  <pubDate>Thu, 10 Mar 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E4%BD%8D%E8%BF%90%E7%AE%97/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/15/21/39/rose-6799477__340.jpg" referrerpolicy="no-referrer">
      </div>1. 数组中重复的数据 给你一个长度为 n 的整数数组 nums ，其中 nums 的所有整数都在范围 [1, n] 内，且每个整数出现 一次 或 两次 。请你找出所有出现 两次 的整数，并以数]]></description>
</item>
<item>
  <title>背包问题</title>
  <link>https://liudongdong1.github.io/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</link>
  <pubDate>Thu, 10 Mar 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/22/17/25/stork-7029266__340.jpg" referrerpolicy="no-referrer">
      </div>1. 01 背包问题 有 n 种物品，第 i 个物品的体积为 vi，价格为 wi，有一个体积限制 v，每种物品有一个，可以选或者不选 .1. 最值问题（最大或者最小值） 你有]]></description>
</item>
<item>
  <title>ACM模式输入</title>
  <link>https://liudongdong1.github.io/acm%E6%A8%A1%E5%BC%8F%E8%BE%93%E5%85%A5/</link>
  <pubDate>Sun, 13 Mar 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/acm%E6%A8%A1%E5%BC%8F%E8%BE%93%E5%85%A5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/07/28/22/12/autumn-865157__340.jpg" referrerpolicy="no-referrer">
      </div>Scanner 类是获取键盘输入的一个类，首先先创建 Scanner 对象Scanner sc = new Scanner(System.in); next() 方法：只能读取到空格之前的字符串； nextLine(): 可以读取空格的字符串, 表示第一行; 使]]></description>
</item>
<item>
  <title>面经_Linux</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_linux/</link>
  <pubDate>Tue, 22 Mar 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_linux/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/24/13/39/nature-7089143__340.jpg" referrerpolicy="no-referrer">
      </div>Linux，全称 GNU/Linux，是一种免费使用和自由传播的类 UNIX 操作系统，其内核由林纳斯・本纳第克特・托瓦兹于 1991 年 10 月 5 日首次发布，它主要]]></description>
</item>
<item>
  <title>面经_操作系统</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
  <pubDate>Wed, 23 Mar 2022 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/27/18/00/feather-7095765__340.jpg" referrerpolicy="no-referrer">
      </div>操作系统（operating system，简称 OS）是管理计算机硬件与软件资源的计算机程序。操作系统需要处理如管理与配置内存、决定系统资源供]]></description>
</item>
<item>
  <title>面经_C&#43;&#43;</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_c-/</link>
  <pubDate>Thu, 24 Mar 2022 08:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_c-/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/02/21/18/09/iceland-1214063__340.jpg" referrerpolicy="no-referrer">
      </div>.1. 构造函数和析构函数 C++ 中构造函数和析构函数只会在编译阶段运行一次，无论你定义了多少不同的构造函数，在一般情况下只会让编译器选择其中一个进行执]]></description>
</item>
<item>
  <title>面经_数据库</title>
  <link>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
  <pubDate>Wed, 30 Mar 2022 22:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%9D%A2%E7%BB%8F_%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/25/12/53/tree-6966126__480.jpg" referrerpolicy="no-referrer">
      </div>内存中，虽然 说存取速度快，但是会导致数据不能永久的保存 文件中，可以解决数据永久保存的问题, 速度比内存操作慢，频繁的 IO 操作，而且查询数据不方便]]></description>
</item>
<item>
  <title>数组系列C&#43;&#43;</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E7%BB%84%E7%B3%BB%E5%88%97c-/</link>
  <pubDate>Sun, 10 Apr 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E7%BB%84%E7%B3%BB%E5%88%97c-/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2020/07/04/20/12/green-lizard-5370821__340.jpg" referrerpolicy="no-referrer">
      </div>1. Remove Duplicates from Sorted Array int removeDuplicates(vector&lt;int&gt;&amp; nums){ if(nums.empty()){ return 0; } int index=0; for(int i=1;i&lt;nums.size();i++){ if(nums[i]!=nums[index]){ nums[++index]=nums[i]; } } return index+1; } //STL return distance(nums.begin(),unique(nums.begin(),nums.end()); 2. Remove Duplicates from Sorted Array 2 int removeDuplicates(vector&lt;int&gt;&amp; nums) { if (nums.size() &lt;= 2) return nums.size(); int index = 2; for (int i = 2; i &lt; nums.size(); i++){ if (nums[i] != nums[index - 2]) nums[index++] = nums[i]; } return index; }]]></description>
</item>
<item>
  <title>几何类</title>
  <link>https://liudongdong1.github.io/%E5%87%A0%E4%BD%95%E7%B1%BB/</link>
  <pubDate>Tue, 10 May 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%87%A0%E4%BD%95%E7%B1%BB/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/25/22/59/pestle-7034940__340.jpg" referrerpolicy="no-referrer">
      </div>1. 直线上最多的点数 给你一个数组 points ，其中 points[i] = [xi, yi] 表示 X-Y 平面上的一个点。求最多有多少个点在同一条直线上。先枚举两条点（确定一条线），然后检查其余]]></description>
</item>
<item>
  <title>DFS &amp; BFS系列</title>
  <link>https://liudongdong1.github.io/dfs-bfs%E7%B3%BB%E5%88%97/</link>
  <pubDate>Sat, 14 May 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dfs-bfs%E7%B3%BB%E5%88%97/</guid>
  <description><![CDATA[1. 寻找重复的子树 1 / \ 2 3 / \ 4 5 例如上面这棵树序列化结果为 1,2,#,#,3,4,#,#,5,#,#。每棵不同子树的序列化结果都是唯一的。]]></description>
</item>
<item>
  <title>值传递&amp;引用传递</title>
  <link>https://liudongdong1.github.io/%E5%80%BC%E4%BC%A0%E9%80%92%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%80%BC%E4%BC%A0%E9%80%92%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/20/06/24/swans-7208744__340.jpg" referrerpolicy="no-referrer">
      </div>1. 值类型 定义：变量直接指向存在内存中的值，我们称之为值类型。 值类型的变量的值存储在栈中。 值类型，将一个变量赋值给另一个变量，称为值拷贝。 package main]]></description>
</item>
<item>
  <title>栈内存&amp;堆内存&amp;逃逸分析</title>
  <link>https://liudongdong1.github.io/go%E5%BA%93-nethttp/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/go%E5%BA%93-nethttp/</guid>
  <description><![CDATA[1. 栈内存 栈内存由编译器自动分配和释放，开发者无法控制。栈内存一般存储函数中的局部变量、参数等，函数创建的时候，这些内存会被自动创建；函数返回]]></description>
</item>
<item>
  <title>虚拟化技术介绍</title>
  <link>https://liudongdong1.github.io/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/08/14/30/couple-7182248__340.jpg" referrerpolicy="no-referrer">
      </div>虚拟化技术（virtualization technology，VT）是云计算的基础。简单的说，虚拟化使得在一台物理的服务器上可以跑多台虚拟机]]></description>
</item>
<item>
  <title>虚拟化存储</title>
  <link>https://liudongdong1.github.io/%E8%99%9A%E6%8B%9F%E5%8C%96%E5%AD%98%E5%82%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E8%99%9A%E6%8B%9F%E5%8C%96%E5%AD%98%E5%82%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/03/13/00/heart-7045303__340.jpg" referrerpolicy="no-referrer">
      </div>存储虚拟化 (Storage Virtualization) 最通俗的理解就是对存储硬件资源进行抽象化表现。通过将一个（或多个）目标（Target）服务或功能与其它附加的功能集成，统一提供]]></description>
</item>
<item>
  <title>通道</title>
  <link>https://liudongdong1.github.io/%E9%80%9A%E9%81%93/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%80%9A%E9%81%93/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/23/13/43/bird-7087260__340.jpg" referrerpolicy="no-referrer">
      </div>在 Go 语言里，你不仅可以使用原子函数和互斥锁来保证对共享资源的安全访问以及消除竞争状态，还可以使用通道，通过发送和接收需要共享的资源，在 goroutine 之间]]></description>
</item>
<item>
  <title>锁</title>
  <link>https://liudongdong1.github.io/%E9%94%81/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%94%81/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2013/05/09/09/06/waves-circles-109964__340.jpg" referrerpolicy="no-referrer">
      </div>1. 竞争状态 // 这个示例程序展示如何在程序里造成竞争状态 // 实际上不希望出现这种情况 package main import ( &#34;fmt&#34; &#34;runtime&#34; &#34;sync&#34; ) var ( // counter是所有goroutine都]]></description>
</item>
<item>
  <title>多副本&amp;纠删码</title>
  <link>https://liudongdong1.github.io/%E5%A4%9A%E5%89%AF%E6%9C%AC%E7%BA%A0%E5%88%A0%E7%A0%81/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%A4%9A%E5%89%AF%E6%9C%AC%E7%BA%A0%E5%88%A0%E7%A0%81/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/11/16/55/animal-7126221__340.jpg" referrerpolicy="no-referrer">
      </div>一、Erasure Coding（纠删码）和Raid比较 （1）EC算法是跨节点的，4+2:1的冗余允许1个节点故障而不丢失数据，RAID5一般]]></description>
</item>
<item>
  <title>存储阵列技术</title>
  <link>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E9%98%B5%E5%88%97%E6%8A%80%E6%9C%AF/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E9%98%B5%E5%88%97%E6%8A%80%E6%9C%AF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/10/15/29/wind-mills-6928590__340.jpg" referrerpolicy="no-referrer">
      </div>存储阵列硬件系统又两部分组成： 控制框：控制框用于处理各种存储业务，并管理级联在控制框下面的硬盘框。 硬盘框：硬盘框主要用于容纳各种硬盘，为应用]]></description>
</item>
<item>
  <title>存储系统架构</title>
  <link>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/10/19/09/46/nature-6723133__340.jpg" referrerpolicy="no-referrer">
      </div>1. 存储系统架构 1. 中低端 SAN/NAS 融合存储架构：双控制器 写入数据在双控 CACHE 中各保存一份，避免单控故障导致数据丢失。 每个控制板的后端分别接入物理磁盘的环路]]></description>
</item>
<item>
  <title>存储架构</title>
  <link>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/08/04/05/49/baby-2579144__340.jpg" referrerpolicy="no-referrer">
      </div>高性能，高可用，可伸缩，安全性，扩展性（功能的扩展） 分层设计（应用，服务，数据，管理，分析） 集：一个应用/模块/功能部署在多台物理机器上，通]]></description>
</item>
<item>
  <title>存储技术发展</title>
  <link>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/09/05/24/squirrel-7120786__340.jpg" referrerpolicy="no-referrer">
      </div>广义上存储都是指数据中心里面使用的存储设备，这里面包含了存储硬件系统、软件系统、存储网络和存储解决方案。存储软件系统对存储中的数据提供管理，]]></description>
</item>
<item>
  <title>并发</title>
  <link>https://liudongdong1.github.io/%E5%B9%B6%E5%8F%91/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%B9%B6%E5%8F%91/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/12/13/04/fresh-strawberries-7191555__340.jpg" referrerpolicy="no-referrer">
      </div>虽然 Go 程序编译后生成的是本地可执行代码，但是这些可执行代码必须运行在Go 语言的运行时（Runtime ）中。Go 运行时类似 Java 和 .NET 语言所用到的虚]]></description>
</item>
<item>
  <title>备份技术</title>
  <link>https://liudongdong1.github.io/%E5%A4%87%E4%BB%BD%E6%8A%80%E6%9C%AF/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%A4%87%E4%BB%BD%E6%8A%80%E6%9C%AF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/11/16/55/animal-7126221__340.jpg" referrerpolicy="no-referrer">
      </div>为应付文件、数据丢失或损坏等可能出现的意外情况，将电子计算机存储设备中的数据复制到磁带等大容量存储设备中。备份实际就是一种 “复制” 操作，备份]]></description>
</item>
<item>
  <title>安装目录&amp;工作区&amp;源码&amp;命令.md</title>
  <link>https://liudongdong1.github.io/%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95%E5%B7%A5%E4%BD%9C%E5%8C%BA%E6%BA%90%E7%A0%81%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95%E5%B7%A5%E4%BD%9C%E5%8C%BA%E6%BA%90%E7%A0%81%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/05/10/21/spider-7113290__340.jpg" referrerpolicy="no-referrer">
      </div>GOROOT: Go 语言安装路径。 GOPATH: 若干工作区目录的路径。是我们自己定义的工作空间。在 Go Module 模式之前非常重要，现在基本上用来存放使用 go get 命令获取的项目。 GOBIN: Go 编]]></description>
</item>
<item>
  <title>unsafe</title>
  <link>https://liudongdong1.github.io/go%E5%BA%93-unsafe/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/go%E5%BA%93-unsafe/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/17/16/40/bike-ride-6804105__340.jpg" referrerpolicy="no-referrer">
      </div>可以绕过 Go 的内存安全机制，直接对内存进行读写。所以有时候出于性能需要，还是会冒险使用它来对内存进行操作。 1. 指针类型转换 unsafe.Pointer 是一种特殊意义的指针]]></description>
</item>
<item>
  <title>Tornado</title>
  <link>https://liudongdong1.github.io/tornado/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/tornado/</guid>
  <description><![CDATA[Tornado 是一个Python web框架和异步网络库 起初由 FriendFeed 开发. 通过使用非阻塞网络I/O, Tornado 可以支持上万级的连接，处理 长连接, WebSockets, 和其他 需要与每个用户]]></description>
</item>
<item>
  <title>string操作</title>
  <link>https://liudongdong1.github.io/string%E6%93%8D%E4%BD%9C/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/string%E6%93%8D%E4%BD%9C/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/07/15/21/25/chaka-salt-lake-6469432__340.jpg" referrerpolicy="no-referrer">
      </div>Go 语言中字符串的内部实现使用 UTF-8 编码，通过 rune 类型，可以方便地对每个 UTF-8 字符进行访问。当然， Go 语言也支持按照传统的 ASCII 码方式逐字符进行访问。 字符串是]]></description>
</item>
<item>
  <title>STL序列容器-stack</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-stack/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-stack/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/13/05/13/squirrel-7129452__340.jpg" referrerpolicy="no-referrer">
      </div>stack所有元素进出都符合先进后出，只有stack顶端的元素才可以被外界访问 stack不提供迭代器功能，以底部容器完成所有工作 1. 数据结构 template]]></description>
</item>
<item>
  <title>STL序列容器-queue</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-queue/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-queue/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/09/05/24/squirrel-7120786__340.jpg" referrerpolicy="no-referrer">
      </div>先进先出操作，由底部容器完成所有的工作 1. 数据结构 template &lt;class T, class Sequence = deque&lt;T&gt; &gt; class queue { friend bool operator== __STL_NULL_TMPL_ARGS (const queue&amp; x, const queue&amp; y); friend bool operator&lt; __STL_NULL_TMPL_ARGS (const queue&amp; x, const queue&amp; y); public: typedef typename Sequence::value_type value_type; typedef typename Sequence::size_type size_type; typedef typename Sequence::reference reference; typedef typename]]></description>
</item>
<item>
  <title>STL序列容器-priority_queue</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-priority_queue/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-priority_queue/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/09/19/40/easter-7122161__340.jpg" referrerpolicy="no-referrer">
      </div>1. 数据结构 template &lt;class T, class Sequence = vector&lt;T&gt; , class Compare = less&lt;typename Sequence::value_type&gt; &gt; class priority_queue { public: typedef typename Sequence::value_type value_type; typedef typename Sequence::size_type size_type; typedef typename Sequence::reference reference; typedef typename Sequence::const_reference const_reference; protected: Sequence c; Compare comp; public: priority_queue() : c() {} explicit priority_queue(const Compare&amp; x) : c(), comp(x) {} template &lt;class InputIterator&gt; priority_queue(InputIterator first, InputIterator last, const Compare&amp; x) : c(first, last),]]></description>
</item>
<item>
  <title>STL序列容器-heap</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-heap/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-heap/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/27/18/00/feather-7095765__340.jpg" referrerpolicy="no-referrer">
      </div>heap并不归属于STL容器组件，但是作为priority queue的底层实现 1. push_heap template &lt;class RandomAccessIterator&gt; inline void push_heap(RandomAccessIterator first, RandomAccessIterator last) { //此函数被调用时，新元素已经位于底部]]></description>
</item>
<item>
  <title>STL算法-数值算法</title>
  <link>https://liudongdong1.github.io/stl%E7%AE%97%E6%B3%95-%E6%95%B0%E5%80%BC%E7%AE%97%E6%B3%95/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E7%AE%97%E6%B3%95-%E6%95%B0%E5%80%BC%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/11/04/33/easter-eggs-7124718__340.jpg" referrerpolicy="no-referrer">
      </div>template &lt;class InputIterator, class T&gt; T accumulate(InputIterator first, InputIterator last, T init) { for ( ; first != last; ++first) init = init + *first; return init; } template &lt;class InputIterator, class T, class BinaryOperation&gt; T accumulate(InputIterator first, InputIterator last, T init, BinaryOperation binary_op) { for ( ; first != last; ++first) init = binary_op(init, *first); return init; } template &lt;class InputIterator1, class InputIterator2, class T&gt; T inner_product(InputIterator1 first1, InputIterator1]]></description>
</item>
<item>
  <title>STL算法-常用算法</title>
  <link>https://liudongdong1.github.io/stl%E7%AE%97%E6%B3%95-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E7%AE%97%E6%B3%95-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/11/17/14/year-6786741__340.jpg" referrerpolicy="no-referrer">
      </div>STL 算法部分主要由头文件 ,, 组成。要使用 STL 中的算法函数必须包含头文件 ，对于数值算法须包含 ， 中则定义了一些模板类，用来声明函数对象。 非可变序列算法]]></description>
</item>
<item>
  <title>STL空间配置器</title>
  <link>https://liudongdong1.github.io/stl%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/12/14/00/feather-7009025__340.jpg" referrerpolicy="no-referrer">
      </div>Resource https://github.com/FunctionDou/STL/blob/master/10%20uninitialized.md 内存池模型：https://github.com/FunctionDou/STL/blob/master/4%20%E5%86%85%E]]></description>
</item>
<item>
  <title>STL概述</title>
  <link>https://liudongdong1.github.io/stl%E6%A6%82%E8%BF%B0/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E6%A6%82%E8%BF%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/09/17/30/coffee-7121939__340.jpg" referrerpolicy="no-referrer">
      </div>STL(Standard Template Library，标准模板库)，是惠普实验室开发的一系列软件的统称。现主要出现在 C++ 中，STL 从广义上分为：容器 (container)、算法]]></description>
</item>
<item>
  <title>SPDK_Reactor 介绍</title>
  <link>https://liudongdong1.github.io/spdk-reactor%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/spdk-reactor%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[reactor线程总流程 spdk/app/vhost/vhost.c: int main(int argc, char *argv[]) { struct spdk_app_opts opts = {}; int rc; /* 首先进行参数解析，解析后的结果保存于opts中 */ vhost_app_opts_init(&amp;opts); if ((rc = spdk_app_parse_args(argc, argv, &amp;opts, &#34;f:S:&#34;, vhost_parse_arg, vhost_usage)) != SPDK_APP_PARSE_ARGS_SUCCESS) { exit(rc); } /* 接着根]]></description>
</item>
<item>
  <title>SPDK_bdev子系统</title>
  <link>https://liudongdong1.github.io/spdk-bdev%E5%AD%90%E7%B3%BB%E7%BB%9F/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/spdk-bdev%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
  <description><![CDATA[SPDK从功能角度将各个独立的部分划分为“子系统“。例如对各种后端存储的访问属于bdev子系统，又例如对虚拟机呈现各种设备属于vhost子系]]></description>
</item>
<item>
  <title>Solr</title>
  <link>https://liudongdong1.github.io/solr/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/solr/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/28/04/12/snow-6898585__340.jpg" referrerpolicy="no-referrer">
      </div>Solr 是Apache下的一个顶级开源项目，采用Java开发，它是基于Lucene的全文搜索服务。Solr提供了比Lucene更为丰富的查询语言，]]></description>
</item>
<item>
  <title>RDMA 介绍</title>
  <link>https://liudongdong1.github.io/rdma%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rdma%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/21/13/54/peach-blossom-7083263__340.jpg" referrerpolicy="no-referrer">
      </div>RDMA (RemoteDirect Memory Access) 技术全称远程直接内存访问，就是为了解决网络传输中服务器端数据处理的延迟而产生的。它将数据直接从一台计算机的内存传输到另一台计算机，无]]></description>
</item>
<item>
  <title>RAID技术</title>
  <link>https://liudongdong1.github.io/raid%E6%8A%80%E6%9C%AF/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/raid%E6%8A%80%E6%9C%AF/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/12/01/08/pacific-gull-7126937__340.jpg" referrerpolicy="no-referrer">
      </div>RAID（Redundant Array of Independent Disks）：独立冗余磁盘阵列，简称磁盘阵列。 RAID 的主要实现方式分为硬件 RAID 方式和软件 RAID 方式。 硬件 RAID：采]]></description>
</item>
<item>
  <title>Minikube-tutorial</title>
  <link>https://liudongdong1.github.io/minikube-tutorial/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/minikube-tutorial/</guid>
  <description><![CDATA[Minikube 是一种轻量化的 Kubernetes 集群，是 Kubernetes 社区为了帮助开发者和学习者能够更好学习和体验 k8s 功能而推出的，借助个人 PC 的虚拟化环境就可以实现 Kubernetes 的快速构建启动。 1.]]></description>
</item>
<item>
  <title>Kubernetes-介绍</title>
  <link>https://liudongdong1.github.io/kubernets%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernets%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/01/10/49/flower-7167287__340.jpg" referrerpolicy="no-referrer">
      </div>Kubernetes is a portable, extensible, open source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. Service discovery and load balancing Kubernetes can expose a container using the DNS name or using their own IP address. If traffic to a container is high, Kubernetes is able to load balance and distribute the network traffic so that the deployment is stable. Storage orchestration Kubernetes allows you]]></description>
</item>
<item>
  <title>Kubernetes-存储介绍</title>
  <link>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/08/25/05/01/boat-6572384__340.jpg" referrerpolicy="no-referrer">
      </div>Docker插件机制-架构&amp;评价 Docker volumn 插件 名称 描述 地址 Azure File Storage plugin Lets you mount Microsoft Azure File Storage shares to Docker containers as volumes using the SMB 3.0 protocol. Learn more. https://github.com/Azure/azurefile dockervolumedriver BeeGFS Volume Plugin An open source volume plugin to create persistent volumes in a]]></description>
</item>
<item>
  <title>Kubernetes-存储NFS实践</title>
  <link>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8nfs%E5%AE%9E%E8%B7%B5/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8nfs%E5%AE%9E%E8%B7%B5/</guid>
  <description><![CDATA[一、storage存储原理 二、storage存储实战 2.1 安装nfs存储集群 #所有机器安装 yum install -y nfs-utils #nfs主节点 echo &#34;/nfs/data/ *(insecure,rw,sync,no_root_squash)&#34; &gt; /etc/exports mkdir -p /nfs/data systemctl enable rpcbind --now systemctl enable nfs-server --now]]></description>
</item>
<item>
  <title>Kubernetes-yaml详解</title>
  <link>https://liudongdong1.github.io/kubernetes-yaml%E8%AF%A6%E8%A7%A3/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes-yaml%E8%AF%A6%E8%A7%A3/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/08/25/05/01/boat-6572384__340.jpg" referrerpolicy="no-referrer">
      </div>属性名称 介绍 apiVersion API 版本 kind 资源类型 metadata 资源元数据 spec 资源规格 replicas 副本数量 selector 标签选择器 template Pod 模板 metadata Pod 元数据 spec Pod 规格 containers 容器配置 1. 核心技术概念 .1. 复制控制器（R]]></description>
</item>
<item>
  <title>Kubernetes-Pod</title>
  <link>https://liudongdong1.github.io/kubernets-pod/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernets-pod/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/20/06/28/flowers-7144467__340.jpg" referrerpolicy="no-referrer">
      </div>While Kubernetes supports more container runtimes than just Docker, Docker is the most commonly known runtime, and it helps to describe Pods using some terminology from Docker. The shared context of a Pod is a set of Linux namespaces, cgroups, and potentially other facets of isolation - the same things that isolate a Docker container. Within a Pod&rsquo;s context, the individual applications may have further sub-isolations applied. In terms of]]></description>
</item>
<item>
  <title>Kubernetes-etcd使用</title>
  <link>https://liudongdong1.github.io/kubernetes_etcd%E4%BD%BF%E7%94%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes_etcd%E4%BD%BF%E7%94%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>etcd 是一个分布式的、可靠的 key-value 存储系统，它用于存储分布式系统中的关键数据，这个定义非常重要。 一个 etcd 集群，通常会由 3 个或者 5 个节点组成，多个节点之]]></description>
</item>
<item>
  <title>Kubernetes-Cluster Architecture</title>
  <link>https://liudongdong1.github.io/kubernetes-cluster-architecture/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes-cluster-architecture/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/05/01/11/cormorant-7175037__340.jpg" referrerpolicy="no-referrer">
      </div>Kubernetes runs your workload by placing containers into Pods to run on Nodes. A node may be a virtual or physical machine, depending on the cluster. Kubernetes主要由以下几个核心组件组成： etcd保存了整个集群的状态； apise]]></description>
</item>
<item>
  <title>Kubernetes_存储流程详解</title>
  <link>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/</guid>
  <description><![CDATA[1.流程概览 流程如下： 用户创建了一个包含 PVC 的 Pod，该 PVC 要求使用动态存储卷； Scheduler 根据 Pod 配置、节点状态、PV 配置等信息，把 Pod 调度到一个合适的 Worker 节]]></description>
</item>
<item>
  <title>Kubernetes 命令大全</title>
  <link>https://liudongdong1.github.io/kubernets%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernets%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/04/02/29/calligraphy-7173006__340.jpg" referrerpolicy="no-referrer">
      </div>1. 自动补全 $ source &lt;(kubectl completion bash) # setup autocomplete in bash, bash-completion package should be installed first. $ source &lt;(kubectl completion zsh) # setup autocomplete in zsh 2. Kubectl 上下文和配置 $ kubectl config view # 显示合并后的 kubeconfig 配置 # 同时使用多个 kubeconfig 文件并查看合并后的]]></description>
</item>
<item>
  <title>GVM</title>
  <link>https://liudongdong1.github.io/gvm/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gvm/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/11/10/09/apricot-blossoms-7125429__340.jpg" referrerpolicy="no-referrer">
      </div>Go 语言版本管理器（GVM）是管理 Go 语言环境的开源工具。GVM 「pkgsets」 支持安装多个版本的 Go 并管理每个项目的模块。它最初由 Josh Bussdieker 开发，G]]></description>
</item>
<item>
  <title>Go语言</title>
  <link>https://liudongdong1.github.io/go/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/go/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/01/15/18/swan-7167802__340.jpg" referrerpolicy="no-referrer">
      </div>Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。对于高性能分布式系统领域而言，Go 语言无疑比大多数其]]></description>
</item>
<item>
  <title>go库-fmt&amp;strconv</title>
  <link>https://liudongdong1.github.io/go%E5%BA%93-fmtstrconv/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/go%E5%BA%93-fmtstrconv/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/09/17/08/mute-swan-7185076__480.jpg" referrerpolicy="no-referrer">
      </div>package main import &#34;fmt&#34; type Person struct { Name string Age int } func main() { a := 10 s := &#34;hello world&#34; p := Person{Name: &#34;wohu&#34;, Age: 25} c := []int{1, 2, 3, 4} fmt.Printf(&#34;p %%v is %v\n&#34;, p) // p %v is {wohu 25} fmt.Printf(&#34;p %%+v is %+v\n&#34;, p) // p %+v is {Name:wohu Age:25} fmt.Printf(&#34;p %%#v is %#v\n&#34;, p) // p %#v is main.Person{Name:&#34;wohu&#34;, Age:25} fmt.Printf(&#34;p type]]></description>
</item>
<item>
  <title>Go规范</title>
  <link>https://liudongdong1.github.io/go%E8%A7%84%E8%8C%83/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/go%E8%A7%84%E8%8C%83/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/25/09/39/animal-7220153__340.jpg" referrerpolicy="no-referrer">
      </div>包中成员以名称首字母大小写决定访问权限。 Public : 首字母大写，可被包外访问； internal : 首字母小写，仅包内成员可以访问； 该规则适用于全局变量、全局常量、类]]></description>
</item>
<item>
  <title>go标准库-log</title>
  <link>https://liudongdong1.github.io/go%E6%A0%87%E5%87%86%E5%BA%93-log/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/go%E6%A0%87%E5%87%86%E5%BA%93-log/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/23/13/16/bird-7216181__340.jpg" referrerpolicy="no-referrer">
      </div>// 这个示例程序展示如何使用最基本的log包 package main import ( &#34;log&#34; ) func init() { log.SetPrefix(&#34;TRACE: &#34;) log.SetFlags(log.Ldate | log.Lmicroseconds | log.Llongfile) } func main() { // Println写到标准日志记录器 log.Println(&#34;message&#34;) // Fatalln在调用]]></description>
</item>
<item>
  <title>C陷阱和缺陷</title>
  <link>https://liudongdong1.github.io/c%E9%99%B7%E9%98%B1%E5%92%8C%E7%BC%BA%E9%99%B7/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/c%E9%99%B7%E9%98%B1%E5%92%8C%E7%BC%BA%E9%99%B7/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/13/14/53/bird-6935465__340.jpg" referrerpolicy="no-referrer">
      </div>1. 词法陷阱 = &amp;== ：前者进行赋值操作，后者进行 相等判断 &amp;和| ： 与和取反操作 &amp;&amp; 和 || ： and 和 或 条件 a=-1 : 歧义性 a=a-1; a= -1; y=x/(*p); 注意 单引号 和 双引号区别 2. 语]]></description>
</item>
<item>
  <title>C编程规范</title>
  <link>https://liudongdong1.github.io/c%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/c%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/07/25/05/39/daylily-6490922__340.jpg" referrerpolicy="no-referrer">
      </div>开发人员对正确性、健壮性、可靠性、效率、易用性、可读性（可理解性）、可扩展性、 可复用性、兼容性、可移植性等质量属性了如指掌. 1. 文件结构 .1. 版本]]></description>
</item>
<item>
  <title>blobstore&amp;blobfs</title>
  <link>https://liudongdong1.github.io/blobstoreblobfs/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/blobstoreblobfs/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/11/04/21/34/beach-1799006_640.jpg" referrerpolicy="no-referrer">
      </div>Blobstore是位于SPDK bdev之上的Blob管理层，用于与用户态文件系统Blobstore Filesystem （BlobFS）集成，从而代替传统的文]]></description>
</item>
<item>
  <title>weekmodel</title>
  <link>https://liudongdong1.github.io/weekmodel/</link>
  <pubDate>Tue, 30 Jun 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/weekmodel/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501105315.png" referrerpolicy="no-referrer">
      </div>1. KeypointDetection 1.1. CharPointDetection 识别字符中的俩个关键点。 1.2. Facial-keypoints-detection 用于检测人脸的68个关键点示例。 1.3. Hourglass-facekeypoints 使用基于论文Hourglass 的模型实现人体关键点检测。 1.4. Realtime-Action-Recognition containing: - boxes (Tensor[N,]]></description>
</item>
<item>
  <title>PytorchPoint</title>
  <link>https://liudongdong1.github.io/pytorchpoint/</link>
  <pubDate>Mon, 13 Jul 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pytorchpoint/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/sentences-and-symbols-on-wooden-wall.jpg" referrerpolicy="no-referrer">
      </div>1.代码片段 1.1.导入配置 import torch import torch.nn as nn import torchvision print(torch.__version__) print(torch.version.cuda) print(torch.backends.cudnn.version()) print(torch.cuda.get_device_name(0)) 1.2. 显卡设置 # Device configuration device = torch.device(&#39;cuda&#39; if torch.cuda.is_available() else &#39;cpu&#39;) #这只指定多张显卡 import os os.environ[&#39;CUDA_VISIBLE_DEVICES&#39;] = &#39;0,1&#39; #清除显存 torch.cuda.empty_cache() 1.3. Tensor 处理 tensor = torch.randn(3,4,5) print(tensor.type()) #]]></description>
</item>
<item>
  <title>MQTT</title>
  <link>https://liudongdong1.github.io/mqtt/</link>
  <pubDate>Sat, 29 Aug 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mqtt/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>ThingsBoard is an open-source IoT platform that enables rapid development, management and scaling of IoT projects. Our goal is to provide the out-of-the-box IoT cloud or on-premises solution that will enable server-side infrastructure for your IoT applications.
1. ThingsBoard 1.1. ConnectProtocol 2. Features 2.1. Entities&amp;&amp;Relations 【Entities】
Tenants: individual or organization who owns or produce devices and assets; have multiple tenant administrator users and customers. Customers: who purchase or use tenant devices or assets; have multiple users and devices or assets; Users: browse dashboards and manage entities; Devices: basic IoT entities,like sensors, actuators, switches; Assets: abstract IoT entities may be related to other devices and assets,like factory, field, vehicle; Alarms: events Dashboards: visualization of data and user control interface; Rule Chain: logic unit of related Rule Nodes; each entity supports:]]></description>
</item>
<item>
  <title>MediaPipe_Usage</title>
  <link>https://liudongdong1.github.io/mediapipe_usage/</link>
  <pubDate>Mon, 14 Sep 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mediapipe_usage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200715085515063.png" referrerpolicy="no-referrer">
      </div>1. Installation $ git clone https://github.com/google/mediapipe.git # Change directory into MediaPipe root directory $ cd mediapipe #install Bazel #link https://blog.csdn.net/liudongdong19 #install opencv and ffmpeg sudo apt-get install libopencv-core-dev libopencv-highgui-dev \libopencv-calib3d-dev libopencv-features2d-dev \libopencv-imgproc-dev libopencv-video-dev # Requires a GPU with EGL driver support. # Can use mesa GPU libraries for desktop, (or Nvidia/AMD equivalent). sudo apt-get install mesa-common-dev libegl1-mesa-dev libgles2-mesa-dev # To compile with GPU support, replace --define MEDIAPIPE_DISABLE_GPU=1 # with --copt -DMESA_EGL_NO_X11_HEADERS --copt -DEGL_NO_X11 $ export GLOG_logtostderr=1 # if you are running on Linux desktop with CPU only $ bazel run --define MEDIAPIPE_DISABLE_GPU=1 \ mediapipe/examples/desktop/hello_world:hello_world # If you are running on Linux desktop with GPU support enabled (via mesa drivers) $ bazel run --copt -DMESA_EGL_NO_X11_HEADERS --copt -DEGL_NO_X11 \ mediapipe/examples/desktop/hello_world:hello_world 2.]]></description>
</item>
<item>
  <title>DeepLabCut</title>
  <link>https://liudongdong1.github.io/deeplabcut/</link>
  <pubDate>Thu, 17 Sep 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/deeplabcut/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/art-broken-explosion-glass.jpg" referrerpolicy="no-referrer">
      </div>level: nature neuroscience author:Alexander Mathis 1,2, Pranav Mamidanna1 , Kevin M. Cury3 , Taiga Abe3 , Venkatesh N. Murthy 2 , Mackenzie Weygandt Mathis 1,4,8* and Matthias Bethge1,5,6,7,8 date: 2018 keyword: quantifying behavior; pose estimation; Mathis A, Mamidanna P, Cury K M, et al. DeepLabCut: markerless pose estimation of user-defined body parts with deep learning[J]. Nature neuroscience, 2018, 21(9): 1281-1289. cited by 401; Paper: DeepLabCut Summary present an efficient method]]></description>
</item>
<item>
  <title>DeepCutLab_usage</title>
  <link>https://liudongdong1.github.io/dlc_usage/</link>
  <pubDate>Mon, 21 Sep 2020 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dlc_usage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20200921084437.png" referrerpolicy="no-referrer">
      </div>DeepLabCut is a software package for markerless pose estimation of animals performing various tasks. Installation windows: anaconda environment; install anaconda; conda env create -f DLC-GPU.yaml (deeplabcut 项目文件中) ubuntu: docker container; System Overview #main step to use deepcutlab #导入库 import deeplabcut #create new project deeplabcut.create_new_project(&#39;project_name&#39;,&#39;experimenter&#39;,[&#39;path of video1&#39;,&#39;video2&#39;]) #extract frames deeplabcut.extract_frames(config_path) #label frames deeplabcut.label_frames(config_path) #check labels(optional) deeplabcut.check_labels(config_path) #create dataset deeplabcut.create_training_dataset(config_path) #training deepcutlab.train_network(config_path) #evaluate the]]></description>
</item>
<item>
  <title>MediaPipePose</title>
  <link>https://liudongdong1.github.io/mediapipepose/</link>
  <pubDate>Thu, 14 Jan 2021 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mediapipepose/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/ULHEMNJ457.jpg" referrerpolicy="no-referrer">
      </div>Human pose estimation from video plays a critical role in various applications such as quantifying physical exercises, sign language recognition, and full-body gesture control. For example, it can form the basis for yoga, dance, and fitness applications. It can also enable the overlay of digital content and information on top of the physical world in augmented reality. MediaPipe Pose is a ML solution for high-fidelity body pose tracking, inferring 33]]></description>
</item>
<item>
  <title>SQLOptimize</title>
  <link>https://liudongdong1.github.io/sqloptimize/</link>
  <pubDate>Fri, 19 Mar 2021 12:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sqloptimize/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/12/09/18/30/database-schema-1895779__340.png" referrerpolicy="no-referrer">
      </div>From: https://github.com/Snailclimb/JavaGuide 数据库命令规范 所有数据库对象名称必须使用小写字母并用下划线分割 所有数据库对象名称禁止使用 MySQL 保留关键字（如果表名中包含关键字查询时，需要将]]></description>
</item>
<item>
  <title>SQLCommand</title>
  <link>https://liudongdong1.github.io/sqlcommand/</link>
  <pubDate>Wed, 19 May 2021 12:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sqlcommand/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2015/08/19/05/17/large-895567__480.jpg" referrerpolicy="no-referrer">
      </div>From: https://github.com/Snailclimb/JavaGuide 基本操作 /* Windows服务 */ -- 启动MySQL net start mysql -- 创建Windows服务 sc create mysql binPath= mysqld_bin_path(注意：等号与值之间有]]></description>
</item>
<item>
  <title>GDB</title>
  <link>https://liudongdong1.github.io/gdb/</link>
  <pubDate>Thu, 19 Aug 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gdb/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/14/12/10/plane-7013022__340.jpg" referrerpolicy="no-referrer">
      </div>GNU symbolic debugger，简称「GDB 调试器」，是 Linux 平台下最常用的一款程序调试器。GDB 编译器通常以 gdb 命令的形式在终端（Shell）中使用，它有]]></description>
</item>
<item>
  <title>CPrimerPlus</title>
  <link>https://liudongdong1.github.io/cprimerplus/</link>
  <pubDate>Thu, 19 Aug 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cprimerplus/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/79.jpeg" referrerpolicy="no-referrer">
      </div>1. 编译过程 2. C语言关键字 auto extern short while break float signed _Alignas case for sizeof _Alignof char goto static _Atomic const if struct _Bool continue inline switch _Complex default int typedef _Generic do long union _Imaginary double register unsigned _Noreturn else restrict void _Static_assert enum return volatile _Thread_local 运算符 描述 实例 &amp; 按位与操作，]]></description>
</item>
<item>
  <title>GCC</title>
  <link>https://liudongdong1.github.io/gcc/</link>
  <pubDate>Tue, 19 Oct 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/gcc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/23/12/26/tulips-7030616__340.jpg" referrerpolicy="no-referrer">
      </div>操作系统大致分为 2 大阵营，分别是 Windows 阵营和类 Unix 阵营（包括 Unix、Linux、Mac OS、安卓等）。通常情况下，Windows 系统下用户更习惯]]></description>
</item>
<item>
  <title>sqlite_python</title>
  <link>https://liudongdong1.github.io/sqlite_python/</link>
  <pubDate>Fri, 19 Nov 2021 12:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/sqlite_python/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/19/10/42/old-6880626__340.jpg" referrerpolicy="no-referrer">
      </div>SQLite是一个进程内的库，实现了自给自足的、无服务器的、零配置的、事务性的SQL 数据库引擎。 它是一个零配置的数据库。 1. sqlite 封装函数 #!/usr/bin/env python3 # -*-]]></description>
</item>
<item>
  <title>C&#43;&#43;</title>
  <link>https://liudongdong1.github.io/%E4%BC%98%E7%82%B9%E6%9D%82%E8%B0%88/</link>
  <pubDate>Thu, 13 Jan 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E4%BC%98%E7%82%B9%E6%9D%82%E8%B0%88/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/12/17/17/00/butterfly-6876992__340.jpg" referrerpolicy="no-referrer">
      </div>C++具有某些现代语言的特征，同时又有传统语言（比如C）接近的效率，使其对运行效率和开发效率做了很好的折衷，这也是它在超大型项目中长盛不衰的]]></description>
</item>
<item>
  <title>C&#43;&#43;智能指针</title>
  <link>https://liudongdong1.github.io/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</link>
  <pubDate>Thu, 20 Jan 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/12/19/58/cat-7009836__340.jpg" referrerpolicy="no-referrer">
      </div>C++98 中引入 auto_ptr，但是实现有缺陷 (使用 copy 语义转移资源)，现已弃用，在实际项目中不应该使用。本文提到的三种智能指针主要指的得是 std:]]></description>
</item>
<item>
  <title>C&#43;&#43;基础</title>
  <link>https://liudongdong1.github.io/c-%E5%9F%BA%E7%A1%80/</link>
  <pubDate>Sun, 13 Feb 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/c-%E5%9F%BA%E7%A1%80/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/19/07/17/tree-blossoms-7022041__340.jpg" referrerpolicy="no-referrer">
      </div>旧的 C++ 头文件，如 iostream.h、fstream.h 等将会继续被支持，尽管它们不在官方标准中。这些头文件的内容不在命名空间 std 中。 新的 C++ 头]]></description>
</item>
<item>
  <title>数据密集型应用系统设计笔记-分布式系统挑战</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%8C%91%E6%88%98/</link>
  <pubDate>Tue, 15 Mar 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%8C%91%E6%88%98/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/02/21/57/prayer-6764197__340.jpg" referrerpolicy="no-referrer">
      </div>在分布式系统中，可能会出现系统的一部分工作正常，但其他某些部分出现难以预测的故障，我们称之为“部分失效”。问题的难点就在于这种部分失效是不确]]></description>
</item>
<item>
  <title>Makefile</title>
  <link>https://liudongdong1.github.io/makefile/</link>
  <pubDate>Sat, 19 Mar 2022 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/makefile/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/08/15/50/common-poppy-7056018__340.jpg" referrerpolicy="no-referrer">
      </div>多个命令之间要使用分号隔开，Makefile 中的任何命令都要以 tab 键开始。多个命令行之间可以有空行和注释行，在执行规则时空行会被自动忽略。 当在]]></description>
</item>
<item>
  <title>数据密集型应用系统设计笔记-一致性共识</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E4%B8%80%E8%87%B4%E6%80%A7%E5%85%B1%E8%AF%86/</link>
  <pubDate>Sun, 20 Mar 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E4%B8%80%E8%87%B4%E6%80%A7%E5%85%B1%E8%AF%86/</guid>
  <description><![CDATA[不一致的现象是暂时的，最终会达到一致。是一个弱的保证。事务隔离性为了处理并发执行事务各种临界条件，而分布式一致性则主要针对延迟和故障等问题处]]></description>
</item>
<item>
  <title>存储协议</title>
  <link>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E5%8D%8F%E8%AE%AE/</link>
  <pubDate>Wed, 23 Mar 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E5%8D%8F%E8%AE%AE/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/16/15/03/finch-6942278__340.jpg" referrerpolicy="no-referrer">
      </div>SAN（Storage Aera Network）：存储区域网络，一种通过网络方式连接存储设备和应用服务器的存储构架，这个网络专用于主机和存储设备之间]]></description>
</item>
<item>
  <title>STL迭代器失效</title>
  <link>https://liudongdong1.github.io/stl%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88/</link>
  <pubDate>Sun, 10 Apr 2022 12:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/09/14/01/sea-6781567__340.jpg" referrerpolicy="no-referrer">
      </div>当容器调用 erase() 方法后，当前位置到容器末尾元素的所有迭代器全部失效。 当容器调用 insert() 方法后，当前位置到容器末尾元素的所有迭代器全部失效。 如果容器扩容]]></description>
</item>
<item>
  <title>分布式存储技能</title>
  <link>https://liudongdong1.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E6%8A%80%E8%83%BD/</link>
  <pubDate>Sun, 10 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E6%8A%80%E8%83%BD/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/09/05/24/squirrel-7120786__340.jpg" referrerpolicy="no-referrer">
      </div>即这个知识产生的过程，它解决了什么问题，它是怎么样解决的并且它带来了哪些问题 分布式系统解决了什么问题？ 单机性能瓶颈导致的成本问题 用户量和数据]]></description>
</item>
<item>
  <title>STL关联式容器-map</title>
  <link>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-map/</link>
  <pubDate>Mon, 11 Apr 2022 00:10:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-map/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2018/10/01/13/53/droplet-3716288__340.jpg" referrerpolicy="no-referrer">
      </div>会根据元素键值自动被排序，所有元素都是 pair，同时拥有实值 value 和键值 key，其 pair 是 &lt;key,pair&gt;。键值不可改变，正值可以。]]></description>
</item>
<item>
  <title>STL序列容器-list</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-list/</link>
  <pubDate>Mon, 11 Apr 2022 12:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-list/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/03/11/18/nature-7045125__340.jpg" referrerpolicy="no-referrer">
      </div>list底层实现是使用双向链表，内部有个node节点指向链表尾部，实现循环链表，提供快速插入删除操作。 1. 数据结构 template &lt;class T&gt; struct __list_node { typedef void* void_pointer; void_pointer prev; // 类别]]></description>
</item>
<item>
  <title>STL序列容器-vector</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-vector/</link>
  <pubDate>Mon, 11 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-vector/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/25/10/19/calf-7090719__340.jpg" referrerpolicy="no-referrer">
      </div>vector底层实现使用连续数组，提供动态数组功能 1. 数据结构 template &lt;class T, class Alloc = alloc&gt; class vector { protected: iterator start; iterator finish; iterator end_of_storage; }; 2. 构造&amp;添加 .1. construct 操作 // 建构式，指定 vector]]></description>
</item>
<item>
  <title>STL序列容器-deque</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-deque/</link>
  <pubDate>Mon, 11 Apr 2022 22:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-deque/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/31/17/44/birds-7103460__340.jpg" referrerpolicy="no-referrer">
      </div>deque 是一种双向开口的连续线性空间，可以在头部和尾部进行元素的插入和删除操作 对deque进行排序，为了提高效率，先将deque复制到一个vect]]></description>
</item>
<item>
  <title>STL迭代器</title>
  <link>https://liudongdong1.github.io/stl%E8%BF%AD%E4%BB%A3%E5%99%A8/</link>
  <pubDate>Mon, 11 Apr 2022 22:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/07/25/05/39/daylily-6490922__340.jpg" referrerpolicy="no-referrer">
      </div>迭代器是一种抽象的设计概念，iterator 模式定义如下：提供一种方法，使之能够依序访问某个聚合物所含的各个元素，从而无需暴露该聚合物的内部]]></description>
</item>
<item>
  <title>STL序列容器-slist</title>
  <link>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-slist/</link>
  <pubDate>Mon, 11 Apr 2022 23:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%BA%8F%E5%88%97%E5%AE%B9%E5%99%A8-slist/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/11/09/12/lighthouse-6785763__340.jpg" referrerpolicy="no-referrer">
      </div>slist：迭代器属于单向的 Forward Iterator（可读写）。 list ：迭代器属于双向的 Bidirectional Iterator（可以双向读写）。 看起来 slist 的功能应该会不如 l]]></description>
</item>
<item>
  <title>STL关联式容器-RB-tree</title>
  <link>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-rb-tree/</link>
  <pubDate>Mon, 11 Apr 2022 23:10:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-rb-tree/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/20/07/56/polar-bear-6951677__340.jpg" referrerpolicy="no-referrer">
      </div>左旋： 对节点 X 进行左旋，也就说让节点 X 成为左节点。 右旋： 对节点 X 进行右旋，也就说让节点 X 成为右节点。 1. 单旋转&amp;双旋转 2. RB-Tree 3. 节点插入 S]]></description>
</item>
<item>
  <title>STL仿函数</title>
  <link>https://liudongdong1.github.io/stl%E4%BB%BF%E5%87%BD%E6%95%B0/</link>
  <pubDate>Tue, 12 Apr 2022 09:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E4%BB%BF%E5%87%BD%E6%95%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/08/06/36/rock-7118843__340.jpg" referrerpolicy="no-referrer">
      </div>所谓的仿函数 (functor)，是通过重载 () 运算符模拟函数形为的类。因此，这里需要明确两点： 仿函数不是函数，它是个类； 仿函数重载了 () 运算符，]]></description>
</item>
<item>
  <title>STL配接器</title>
  <link>https://liudongdong1.github.io/stl%E9%85%8D%E6%8E%A5%E5%99%A8/</link>
  <pubDate>Tue, 12 Apr 2022 12:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E9%85%8D%E6%8E%A5%E5%99%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/04/14/40/flower-7111468__340.jpg" referrerpolicy="no-referrer">
      </div>配接器（Adapter）在 STL 组件的灵活组合运用功能上，扮演着轴承、转换器的角色，即将一个 class 的接口转换为另一个 class 的接口，使原本因接口不兼容而不]]></description>
</item>
<item>
  <title>string 函数</title>
  <link>https://liudongdong1.github.io/string%E5%87%BD%E6%95%B0/</link>
  <pubDate>Tue, 12 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/string%E5%87%BD%E6%95%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/01/21/15/32/subway-6955069__340.jpg" referrerpolicy="no-referrer">
      </div>字符串分布&amp;内存分配 https://www.jianshu.com/p/6469fad4d5d5 来自 #include &lt;stdio.h&gt; char *g=&#34;Hello&#34;; int main(int argc, char const *argv[]) { char s[]=&#34;Hello&#34;; char *c=&#34;Hello&#34;; printf(&#34;字符指针c的内存地址:%p\n&#34;,&amp;]]></description>
</item>
<item>
  <title>STL关联式容器-set</title>
  <link>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-set/</link>
  <pubDate>Tue, 12 Apr 2022 23:10:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-set/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/07/01/15/07/duckling-6379617__340.jpg" referrerpolicy="no-referrer">
      </div>所有元素根据键值自动排序，键值就是实值,实值就是键值，不允许重复键值。不可通过迭代器改变 set 元素值，是一种 constant iterators 与 list 相同，当客户端对它进行元素新]]></description>
</item>
<item>
  <title>STL关联式容器-hashmap</title>
  <link>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-hashmap/</link>
  <pubDate>Thu, 14 Apr 2022 20:10:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-hashmap/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/11/25/06/21/leaf-4651088__340.jpg" referrerpolicy="no-referrer">
      </div>hash_multimap 与 hash_map 使用起来相同，只是 hash_multimap 中允许键值重复 在源码中，hash_multimap 调用的是 insert_equal ()，而 hash_map 调用的是 insert_unique ()。 1. 数据结构 class hash_map { private: typedef hashtable&lt;pair&lt;const Key, T&gt;, Key,]]></description>
</item>
<item>
  <title>数据密集型应用系统设计笔记-数据复制</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%A4%8D%E5%88%B6/</link>
  <pubDate>Thu, 14 Apr 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%A4%8D%E5%88%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/22/03/22/passiflora-7027917__340.jpg" referrerpolicy="no-referrer">
      </div>数据密集型应用通常也是基于标准模块构建而成，每个模块负责单 的常用功能。例 如，许多应用系统都包含以下模块 数据库：用以存储数据，这样之后应用可以]]></description>
</item>
<item>
  <title>STL关联式容器-hashtable</title>
  <link>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-hashtable/</link>
  <pubDate>Thu, 14 Apr 2022 23:10:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-hashtable/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/02/13/43/music-7107045__340.jpg" referrerpolicy="no-referrer">
      </div>1. 哈希冲突 .1. 线性探测 根据元素的值然后除以数组大小，然后插入指定的位置 .2. 二次探测 F(i)=i*i; 如果新元素起始插入位置为H，但是H已经被占用，则会尝试H+i]]></description>
</item>
<item>
  <title>数据密集型应用系统设计笔记-数据分区</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%88%86%E5%8C%BA/</link>
  <pubDate>Thu, 14 Apr 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%88%86%E5%8C%BA/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/05/08/13/tulip-6994245__340.jpg" referrerpolicy="no-referrer">
      </div>复制技术，即在不同节点上保存相同数据的多个副本。然而，面对一些海量数据集或非常高的查询压力，复制技术还不够，我们还需要将数据拆分成为分区，也]]></description>
</item>
<item>
  <title>SMR研究进展</title>
  <link>https://liudongdong1.github.io/smr%E7%A0%94%E7%A9%B6%E8%BF%9B%E5%B1%95/</link>
  <pubDate>Fri, 15 Apr 2022 22:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/smr%E7%A0%94%E7%A9%B6%E8%BF%9B%E5%B1%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/02/17/16/autumn-blooming-anemone-7107422__340.jpg" referrerpolicy="no-referrer">
      </div>随着数据量的持续增长，ＳＭＲ磁盘将会得到广泛应用，其大容量优势和快速的大数据顺序读写等特点非常适合数据备份、 归档存储，以及云存储等领域。 1. 磁]]></description>
</item>
<item>
  <title>STL关联式容器-hashset</title>
  <link>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-hashset/</link>
  <pubDate>Fri, 15 Apr 2022 23:10:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/stl%E5%85%B3%E8%81%94%E5%BC%8F%E5%AE%B9%E5%99%A8-hashset/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/07/02/56/cottontail-rabbit-7116707__340.jpg" referrerpolicy="no-referrer">
      </div>STL 只规范复杂度与接口，并不规范实现方法，但是STL set多半以RB-tree为底层实现机制，SGI则是STL标准规定之外另又提供了一个所谓的]]></description>
</item>
<item>
  <title>数据密集型应用系统设计笔记-事务</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E4%BA%8B%E5%8A%A1/</link>
  <pubDate>Fri, 15 Apr 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E4%BA%8B%E5%8A%A1/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/13/05/14/squirrel-7129454__340.jpg" referrerpolicy="no-referrer">
      </div>如果事务实际已经执行成功，但返回给客户端的消息在网络传输时发生意外（所以在客户端看来事务是失败)，那么重试就会导致重复执行，此时需要额外的应]]></description>
</item>
<item>
  <title>存储介质</title>
  <link>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E4%BB%8B%E8%B4%A8/</link>
  <pubDate>Mon, 18 Apr 2022 22:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E4%BB%8B%E8%B4%A8/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/08/14/32/flowers-7119602__340.jpg" referrerpolicy="no-referrer">
      </div>1. 存储介质 .1. 电存储 以固态硬盘（Solid State Drive，SSD）为代表，具有比机械存储装置更高的读写速度，并且具有质量轻、体积小、能耗低等优势]]></description>
</item>
<item>
  <title>OpenCAS介绍</title>
  <link>https://liudongdong1.github.io/opencas/</link>
  <pubDate>Fri, 29 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opencas/</guid>
  <description><![CDATA[Open Cache Acceleration Software (Open CAS) is an open source project encompassing block caching software libraries, adapters, tools and more. The main goal of this cache acceleration software is to accelerate a backend block device(s) by utilizing a higher performance device(s). Open CAS Framework CAS是 Intel® 通过I/O分类和在高速介质上缓存]]></description>
</item>
<item>
  <title>NEMe介绍</title>
  <link>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E5%8D%8F%E8%AE%AE-nvme%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Fri, 29 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%AD%98%E5%82%A8%E5%8D%8F%E8%AE%AE-nvme%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/01/09/55/spring-7167212__340.jpg" referrerpolicy="no-referrer">
      </div>支持 SATA 总线标准，采用ACHI或者ATA通信协议，实际最高传输约为 600MB/s。而支持 PCIe 总线，NVMe 协议的 SSD，实际传输速度将超过 100]]></description>
</item>
<item>
  <title>virtio介绍</title>
  <link>https://liudongdong1.github.io/virtio/</link>
  <pubDate>Fri, 29 Apr 2022 19:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/virtio/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/03/18/19/09/blue-throat-7077261__340.jpg" referrerpolicy="no-referrer">
      </div>virtio 是一种 I/O 半虚拟化解决方案，是一套通用 I/O 设备虚拟化的程序，是对半虚拟化 Hypervisor 中的一组通用 I/O 设备的抽象。提供了一套上层应用与各 Hypervisor 虚拟化设备（KVM]]></description>
</item>
<item>
  <title>vhost介绍</title>
  <link>https://liudongdong1.github.io/vhost%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Fri, 29 Apr 2022 19:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/vhost%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/10/05/33/glacier-7122676__340.png" referrerpolicy="no-referrer">
      </div>vhost 是 virtio 的一种后端实现方案, 通常，virtio 主机端的驱动是实现在用户空间的 qemu 中，而 vhost 是实现在内核中，是内核的一个模块 vhost-net.ko]]></description>
</item>
<item>
  <title>SPDK_概念</title>
  <link>https://liudongdong1.github.io/spdk_%E6%A6%82%E5%BF%B5/</link>
  <pubDate>Sat, 30 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/spdk_%E6%A6%82%E5%BF%B5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/08/06/36/rock-7118843__340.jpg" referrerpolicy="no-referrer">
      </div>1. 相关知识 .1. Linux driver UIO A small kernel module to set up the device, map device memory to user-space and register interrupts. In many cases, the standard uio_pci_generic module included in the Linux kernel can provide the uio capability. For some devices which lack support for legacy interrupts, e.g. virtual function (VF) devices, the igb_uio module may be needed in place of uio_pci_generic. 用户驱]]></description>
</item>
<item>
  <title>Performance Tuning</title>
  <link>https://liudongdong1.github.io/performance-tuning/</link>
  <pubDate>Sat, 30 Apr 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/performance-tuning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/27/20/52/gosling-7161308__340.jpg" referrerpolicy="no-referrer">
      </div>性能调优是个大而复杂的系统性问题，涉及 Linux 系统（进程管理，文件系统，磁盘系统，网络 IO 处理等），内核参数调优，常见检测及配置工具的使用等 1. CPU .1. 查]]></description>
</item>
<item>
  <title>QEMU介绍</title>
  <link>https://liudongdong1.github.io/qemu%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Sat, 30 Apr 2022 19:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/qemu%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/05/08/03/49/squirrel-7181214__480.jpg" referrerpolicy="no-referrer">
      </div>QEMU (short for Quick Emulator) is a free and open-source hosted hypervisor that performs hardware virtualization. &ndash;wiki QEMU 是一个主机上的 VMM（virtual machine monitor）, 通过动态二进制转换来模拟 CPU，并提供一系列的硬]]></description>
</item>
<item>
  <title>PMDK介绍</title>
  <link>https://liudongdong1.github.io/pmdk-%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Sat, 30 Apr 2022 19:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pmdk-%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[一、PMDK介绍 pmdk，全称Persistent Memory Development Kit ，它是一套用于使用具有DAX（Direct Access）访问特性存储的开发工具库。如]]></description>
</item>
<item>
  <title>PMDK-paper</title>
  <link>https://liudongdong1.github.io/pmdk-paper/</link>
  <pubDate>Sat, 30 Apr 2022 19:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pmdk-paper/</guid>
  <description><![CDATA[Paper: MOSIQS Summary a persistent memory object storage framework with metadata indexing and querying for scientific computing MOSIQS provides an aggregate memory pool atop an array of persistent memory devices to store and access memory objects. MOSIQS uses a lightweight persistent memory key-value store to manage the metadata of memory objects such as persistent pointer mappings Challenge access, select and share a PMO without additional descriptive metadata.
PMOs are memory allocated objects and can only be accessed and shared via persistent pointers.]]></description>
</item>
<item>
  <title>mysql 索引结构</title>
  <link>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84/</link>
  <pubDate>Tue, 10 May 2022 22:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84/</guid>
  <description><![CDATA[Innodb 架构 Buffer Pool 用于加速读 Change Buffer 用于没有非唯一索引的加速写 Log Buffer 用于加速redo log写 自适应Hash索引主要用于加快查询页。在查询时，Innodb通]]></description>
</item>
<item>
  <title>mysql 索引结构</title>
  <link>https://liudongdong1.github.io/mysql-%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84/</link>
  <pubDate>Tue, 10 May 2022 22:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mysql-%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84/</guid>
  <description><![CDATA[Innodb 架构 Buffer Pool 用于加速读 Change Buffer 用于没有非唯一索引的加速写 Log Buffer 用于加速redo log写 自适应Hash索引主要用于加快查询页。在查询时，Innodb通]]></description>
</item>
<item>
  <title>PMDK-libpmemobj教程</title>
  <link>https://liudongdong1.github.io/pmdk-libpmemobj%E6%95%99%E7%A8%8B/</link>
  <pubDate>Thu, 30 Jun 2022 19:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pmdk-libpmemobj%E6%95%99%E7%A8%8B/</guid>
  <description><![CDATA[Write &amp;Read PMEMobjpool pmemobj_create() // 创建持久化内存池 PMEMobjpool pmemobj_open() // 打开已创建的持久化内存池 PMEMoid pmemobj_root() // 得到持久化内存池的根节点 pmemobj_direct() // 得到根节点的指针 pmemobj_persist() // 将单变量进行持久化存储 pmemobj_memcpy_persist() // 将数]]></description>
</item>
<item>
  <title>PMDK-libpmemlog教程</title>
  <link>https://liudongdong1.github.io/pmdk-libpmemlog%E6%A1%88%E4%BE%8B/</link>
  <pubDate>Thu, 30 Jun 2022 19:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pmdk-libpmemlog%E6%A1%88%E4%BE%8B/</guid>
  <description><![CDATA[pmemlog_create() // 创建持久化的log内存 pmemlog_open() // 打开已创建的log内存 pmemlog_nbyte() // 获得某log内存内可以添加多少位的数据，而非多少条记录 pmemlog_append() // 向log内存中append]]></description>
</item>
<item>
  <title>存储结构--LSM树</title>
  <link>https://liudongdong1.github.io/%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84--lsm%E6%A0%91/</link>
  <pubDate>Wed, 13 Jul 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84--lsm%E6%A0%91/</guid>
  <description><![CDATA[LSM树并不像B+树、红黑树一样是一颗严格的树状数据结构，它其实是一种存储结构，目前HBase,LevelDB,RocksDB这些NoSQL]]></description>
</item>
<item>
  <title>Kubernetes-_存储-ceph</title>
  <link>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8-ceph/</link>
  <pubDate>Sun, 24 Jul 2022 22:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kubernetes_%E5%AD%98%E5%82%A8-ceph/</guid>
  <description><![CDATA[一个 Ceph 存储集群至少需要一个 Ceph Monitor（监视器）、Ceph Manager（管理） 和 Ceph OSD（对象存储守护进程）。 Monitors：Cep]]></description>
</item>
<item>
  <title>SPDK存储引擎-Blobstore&amp;BlobFs</title>
  <link>https://liudongdong1.github.io/spdk%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E-blobstoreblobfs/</link>
  <pubDate>Sat, 30 Jul 2022 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/spdk%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E-blobstoreblobfs/</guid>
  <description><![CDATA[Blobstore是位于SPDK bdev之上的Blob管理层，用于与用户态文件系统Blobstore Filesystem （BlobFS）集成，从而代替传统的文]]></description>
</item>
<item>
  <title>红外_paper</title>
  <link>https://liudongdong1.github.io/%E7%BA%A2%E5%A4%96_paper/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%BA%A2%E5%A4%96_paper/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/flowers-garden_5ZAZEO70PJ.jpg" referrerpolicy="no-referrer">
      </div>Chen, Tuochao, et al. &ldquo;NeckFace: Continuously Tracking Full Facial Expressions on Neck-mounted Wearables.&rdquo; Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies 5.2 (2021): 1-31. Paper: NeckFace Summary AdminLTE：github上的一个开源项目，基于Boostrap3的后台管理]]></description>
</item>
<item>
  <title>vpn</title>
  <link>https://liudongdong1.github.io/vpn/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/vpn/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133712.png" referrerpolicy="no-referrer">
      </div>VPN技术通过密钥交换、封装、认证、加密手段在公共网络上建立起私密的隧道，保障传输数据的完整性、私密性和有效性。OpenVPN是近年来新出现]]></description>
</item>
<item>
  <title>rpm</title>
  <link>https://liudongdong1.github.io/rpm/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rpm/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133712.png" referrerpolicy="no-referrer">
      </div>根据.so 查询属于哪个包 rpm -qf path/.so ldconfig 刷新动态链接库 -v 显示可用链接库 ldd 查看链接库或者可执行文件依赖的链接库 rpm -q 查看安装的软件对应的rpm包 rpm -qR 查看]]></description>
</item>
<item>
  <title>RFIDPaperLoc</title>
  <link>https://liudongdong1.github.io/rfidpaperloc/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rfidpaperloc/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110958.png" referrerpolicy="no-referrer">
      </div>智能冰箱，智能货架，智能衣柜（有个想法：衣服有RFID记录相关信息，衣柜有reader可以读取相关信息，可以根据天气，加上智能镜子等进行相关]]></description>
</item>
<item>
  <title>RFIDAttackSurvey</title>
  <link>https://liudongdong1.github.io/rfidattacksurvey/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rfidattacksurvey/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/30.jpeg" referrerpolicy="no-referrer">
      </div>RFID系统本身的安全问题可归纳为隐私和认证两个方面：在隐私方面主要是可追踪性问题，即如何防止攻击者对RFID标签进行任何形式的跟踪; 在认证]]></description>
</item>
<item>
  <title>RFID Privacy Relative</title>
  <link>https://liudongdong1.github.io/rfidprivacyrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rfidprivacyrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200428195606397.png" referrerpolicy="no-referrer">
      </div>level: CCF_A Mobicom author: Jinsong Han(ZJU); Lei Yang(Hongkong); Fei Wang, Feng Lin(ZJU) date: 2020 keyword: wireless sensing, privacy, RFBP Liu, Jianwei, et al. &ldquo;A Framework for Behavior Privacy Preserving in Radio Frequency Signal.&rdquo; arXiv preprint arXiv:2004.04909 (2020). Paper: Behavior Privacy Summary first notice that users&rsquo; behavior privacy may be filched（偷窃） in RF signal-based applications, and then propose the concept of]]></description>
</item>
<item>
  <title>NetworkBasic</title>
  <link>https://liudongdong1.github.io/networkbasic/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/networkbasic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/WQZ5EWBO3M.jpg" referrerpolicy="no-referrer">
      </div>1. OSI与TCP/IP 1 应用层 应用层(application-layer）的任务是通过应用进程间的交互来完成特定网络应用。应用层协议定义的是]]></description>
</item>
<item>
  <title>MagneticPapers</title>
  <link>https://liudongdong1.github.io/magneticpapaers/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/magneticpapaers/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111256.png" referrerpolicy="no-referrer">
      </div>Hua Huang and Shan Lin. 2020. MET: a magneto-inductive sensing based electric toothbrushing monitoring system. Proceedings of the 26th Annual International Conference on Mobile Computing and Networking. Association for Computing Machinery, New York, NY, USA, Article 19, 1–14. DOI:https://doi.org/10.1145/3372224.3380896 Paper: MET Summary present a noval electric toothbrushing monitoring system called MET that tracks brushing coverage for all the 15 surfaces of teeth and detects different types]]></description>
</item>
<item>
  <title>KinetRelativeProject</title>
  <link>https://liudongdong1.github.io/kinectrelativeproject/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kinectrelativeproject/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111446.png" referrerpolicy="no-referrer">
      </div>1. Azure-Kinect-Sensor-SDK Azure Kinect SDK is a cross platform (Linux and Windows) user mode SDK to read data from your Azure Kinect device. Depth camera access RGB camera access and control (e.g. exposure and white balance) Motion sensor (gyroscope and accelerometer) access Synchronized Depth-RGB camera streaming with configurable delay between cameras External device synchronization control with configurable delay offset between devices Camera frame meta-data access for image resolution, timestamp and]]></description>
</item>
<item>
  <title>kinect2Relative</title>
  <link>https://liudongdong1.github.io/kinect2relative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kinect2relative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2016/02/19/10/00/laptop-1209008__340.jpg" referrerpolicy="no-referrer">
      </div>红外图像，像素值由反射回相机的红外光量确定。 深度图像也叫距离影像，是指将从图像采集器到场景中各点的距离（深度）值作为像素值的图像。获取方法有]]></description>
</item>
<item>
  <title>kinect2project</title>
  <link>https://liudongdong1.github.io/kinect2project/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/kinect2project/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/DTL0R2W7UJ.jpg" referrerpolicy="no-referrer">
      </div>In the depth image, the value of a pixels relates to the distance from the camera as measured by time-of-flight. For the active infrared image, the value of a pixel is determined by the amount of infrared light reflected back to the camera. The Kinect uses the reflected IR to calculate time of flight but then also makes it available as an IR image. 1. OpenDepthSensor kine]]></description>
</item>
<item>
  <title>KeywordSpotting</title>
  <link>https://liudongdong1.github.io/keywordspoting/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/keywordspoting/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/illuminated-bridge-and-city-at-night.jpg" referrerpolicy="no-referrer">
      </div>Alvarez, Raziel, and Hyun-Jin Park. &ldquo;End-to-end streaming keyword spotting.&rdquo; ICASSP 2019-2019 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP). IEEE, 2019.
keywords: keyword Paper: keywrod spotting Summary an efficient memorized neural network topology that aims at making better use of the parameters and associated computations in the DNN by holding a memory of previous activations distributed over the depth of DNN. a method to train the DNN, to produce the keyword spotting score.]]></description>
</item>
<item>
  <title>infraredsensor</title>
  <link>https://liudongdong1.github.io/infraredsensor/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/infraredsensor/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111355.png" referrerpolicy="no-referrer">
      </div>红外传感器又叫位移传感器，红外距离传感器一般都在手机听筒的两侧或者是在手机听筒凹槽中，这样便于它的工作。当用户在接听或拨打电话时，将手机靠近]]></description>
</item>
<item>
  <title>CryptologyRelative</title>
  <link>https://liudongdong1.github.io/cryptologyrelative/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cryptologyrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/champagner-toasting-new-years-eve-drink-crystal.jpg" referrerpolicy="no-referrer">
      </div>密码学包括：密码编码学和密码分析学。 密码编码学：主要研究密码方案的设计，即寻找对信息编码的方法从而实现隐藏信息的一门学问。 密码分析学：主要是]]></description>
</item>
<item>
  <title>Android-热修复</title>
  <link>https://liudongdong1.github.io/android-%E7%83%AD%E4%BF%AE%E5%A4%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android-%E7%83%AD%E4%BF%AE%E5%A4%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/2UNU086C0B.jpg" referrerpolicy="no-referrer">
      </div>目前，热修复的原理主要有两种技术,一是不需要启动APP就能实现修复，在Native层实现的。一种时需要启动APP，在JAVA层实现的。App]]></description>
</item>
<item>
  <title>Android_原型设计工具</title>
  <link>https://liudongdong1.github.io/android_%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/fall-leaf_0VGPCQAIKP.jpg" referrerpolicy="no-referrer">
      </div>1. Axure RP Axure RP是一款专业设计师不容错过的免费原型设计工具，设计师可以用它快速创建应用软件或Web线框图、流程图、原型和规格说明文档。作为一款专]]></description>
</item>
<item>
  <title>Android_音视频应用开发</title>
  <link>https://liudongdong1.github.io/android_%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BC%80%E5%8F%91/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BC%80%E5%8F%91/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/fall-leaf_0VGPCQAIKP.jpg" referrerpolicy="no-referrer">
      </div>1. 音视频播放 .1. MediaPayler 播放音频 setOnCompletionListener(MediaPlayer.OnCompletionListener listener):为 MediaPlayer的播放完成事件绑定事件监听器。 setOnErrorListener(MediaPlayer.OnErrorListener listener):为 MediaPlayer 的播放错误事件]]></description>
</item>
<item>
  <title>Android_GPS&amp;WiFi使用</title>
  <link>https://liudongdong1.github.io/android_gpswifi%E5%AE%9A%E4%BD%8D/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_gpswifi%E5%AE%9A%E4%BD%8D/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/WEG1K8H4IG.jpg" referrerpolicy="no-referrer">
      </div>1. GPS 使用 public class MainActivity extends Activity { // 定义LocationManager对象 private LocationManager locManager; // 定义程序界面中的TextView组件 private TextView show; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); // 获取程序界面]]></description>
</item>
<item>
  <title>Android_fragment</title>
  <link>https://liudongdong1.github.io/android_fragment/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_fragment/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/WEG1K8H4IG.jpg" referrerpolicy="no-referrer">
      </div>使用Fragment 我们可以把页面结构划分成几块，每块使用一个Fragment来管理。这样我们可以更加方便的在运行过程中动态地更新Activ]]></description>
</item>
<item>
  <title>Android_Event</title>
  <link>https://liudongdong1.github.io/android_event/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_event/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/CPZJJ7K3YJ.jpg" referrerpolicy="no-referrer">
      </div>基于监听的事件处理就是在android的组件上绑定特定的监听器，而基于回调的事件处理就是重写UI组件或者Activity的回调方法。 基于回调]]></description>
</item>
<item>
  <title>Android_Async</title>
  <link>https://liudongdong1.github.io/android_async/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_async/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/IMJ8QIYW3K.jpg" referrerpolicy="no-referrer">
      </div>只能在 UI 线程操作 UI 视图，不能在子线程中操作，否则报错：Only the original thread that created a view hierarchy can touch its views 不能在 UI 线程中进行耗时操作，否则会阻塞 UI 线程，引起 AN]]></description>
</item>
<item>
  <title>Android_activity</title>
  <link>https://liudongdong1.github.io/android_activity/</link>
  <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_activity/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/LJEIEQEKGU.jpg" referrerpolicy="no-referrer">
      </div>Activity: 负责用户界面的展示和用户交互,学习Activity就要学习Fragment，虽然它不是四大组件之一，但是它在我们的开发工作中也是频频被使用]]></description>
</item>
<item>
  <title>VirtualKeys</title>
  <link>https://liudongdong1.github.io/virtualkeys/</link>
  <pubDate>Sat, 18 Jan 2020 11:19:34 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/virtualkeys/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20210119174241375.png" referrerpolicy="no-referrer">
      </div>基于OpenCV，结合图像摄像头、980nm一字红外激光、980nm红外滤光片以及键盘投影激光组成，使用加装了980nm红外滤光片的图像摄像]]></description>
</item>
<item>
  <title>9_Axis Sensor Introduce</title>
  <link>https://liudongdong1.github.io/9-axis-sensor-introduce/</link>
  <pubDate>Tue, 28 Jan 2020 12:00:44 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/9-axis-sensor-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/sensor.jpg" referrerpolicy="no-referrer">
      </div>0. 前言 3轴传感器指的是3轴的加速度，根据这个加速度我们解算出X Y两轴的角度；6轴传感器指的是3轴的加速度和3轴角速度，根据这两个数据我们解算]]></description>
</item>
<item>
  <title>ROSRelative</title>
  <link>https://liudongdong1.github.io/rosrelative/</link>
  <pubDate>Thu, 30 Jan 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rosrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110853.png" referrerpolicy="no-referrer">
      </div>http://wiki.ros.org/ROS/Tutorials Section one Every ROS release will be supported on exactly one Ubuntu LTS. LTS releases will not share a common Ubuntu release with any previous releases. ROS releases will not add support for new Ubuntu distributions after their release date. FileSystem rospack find [package_name] #get information about package roscd [locationname[/subdir]] #equal to cd echo $ROS_PACKAGE_PATH roscd log # take you to the folder where the log file locate rosls]]></description>
</item>
<item>
  <title>UWB Introduce</title>
  <link>https://liudongdong1.github.io/uwb-introduce/</link>
  <pubDate>Thu, 13 Feb 2020 16:19:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/uwb-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/UWB.png" referrerpolicy="no-referrer">
      </div>UWB超宽带定位技术属于无线定位技术的一种。无线定位技术是指用来判定移动用户位置的测量方法和计算方法，即定位算法。目前最常用的定位技术主要有]]></description>
</item>
<item>
  <title>网络bond模式</title>
  <link>https://liudongdong1.github.io/%E7%BD%91%E7%BB%9Cbond%E6%A8%A1%E5%BC%8F/</link>
  <pubDate>Sun, 16 Feb 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%BD%91%E7%BB%9Cbond%E6%A8%A1%E5%BC%8F/</guid>
  <description><![CDATA[双网卡绑定单个IP 双网卡绑定单个IP 地址 为了提供网络的高可用性，我们可能需要将多块网卡绑定成一块虚拟网卡对外提供服务，这样即使其中的一块物理]]></description>
</item>
<item>
  <title>排查--服务日志</title>
  <link>https://liudongdong1.github.io/%E6%8E%92%E6%9F%A5--%E6%9C%8D%E5%8A%A1%E6%97%A5%E5%BF%97/</link>
  <pubDate>Sun, 16 Feb 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E6%8E%92%E6%9F%A5--%E6%9C%8D%E5%8A%A1%E6%97%A5%E5%BF%97/</guid>
  <description><![CDATA[journalctl使用案例 尝试启动 apache2 服务： # systemctl start apache2 Job for apache2.service failed. See &#39;systemctl status apache2&#39; and &#39;journalctl -xn&#39; for details. 我们来看看该服务的状态如何： # systemctl status apache2 apache2.service - The Apache Webserver Loaded: loaded (/usr/lib/systemd/system/apache2.service; disabled) Active: failed (Result: exit-code)]]></description>
</item>
<item>
  <title>网络问题排查命令</title>
  <link>https://liudongdong1.github.io/%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/building-historical-columns.jpg" referrerpolicy="no-referrer">
      </div>1. 网络连接 #查看网卡信息 sudo lshw -class network # error Networking disabled sudo service network-manager stop sudo rm /var/lib/NetworkManager/NetworkManager.state sudo service network-manager start # 方式二： 是否启用该网卡 sudo ifconfig ens33 up #ens33 为网卡的logic name; ifconfig 查看 sudo dhclient ens33 # 动态获取i]]></description>
</item>
<item>
  <title>内存问题排查命令</title>
  <link>https://liudongdong1.github.io/%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</guid>
  <description><![CDATA[1. top命令 Linux的top命令提供Linux资源使用情况的实时更新信息。不仅可以查看Linux内存，也可以查看CPU以及各个进程之间的对]]></description>
</item>
<item>
  <title>Vim</title>
  <link>https://liudongdong1.github.io/vim/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/vim/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/77.jpeg" referrerpolicy="no-referrer">
      </div>:set ff=unix 或 :set fileformat=unix 设置shell 文件编码 :set nu # 显示行号 1.移动光标 j：向下 20j： 向下移动 20 行 k：向上 h：向左 l：向右 0：到行首 ^：到行首第一个字符]]></description>
</item>
<item>
  <title>NetworkRelative</title>
  <link>https://liudongdong1.github.io/networkrelative/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/networkrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/building-historical-columns.jpg" referrerpolicy="no-referrer">
      </div>1. 网络连接 #查看网卡信息 sudo lshw -class network # error Networking disabled sudo service network-manager stop sudo rm /var/lib/NetworkManager/NetworkManager.state sudo service network-manager start # 方式二： 是否启用该网卡 sudo ifconfig ens33 up #ens33 为网卡的logic name; ifconfig 查看 sudo dhclient ens33 # 动态获取i]]></description>
</item>
<item>
  <title>Linux 文件系统</title>
  <link>https://liudongdong1.github.io/linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/</guid>
  <description><![CDATA[From: https://segmentfault.com/a/1190000023615225 文件系统的基本组成 文件系统是操作系统中负责管理持久数据的子系统，说简单点，就是负责把用户的文件存到磁盘硬件中，因为即使计算机断电了，磁盘]]></description>
</item>
<item>
  <title>Linux 文件系统</title>
  <link>https://liudongdong1.github.io/linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9Fposix/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9Fposix/</guid>
  <description><![CDATA[POSIX表示可移植操作系统接口（Portable Operating System Interface of UNIX，缩写为 POSIX ），POSIX标准定义了操作系统应该为应用程序提供的接口标准，是]]></description>
</item>
<item>
  <title>Linux Operation</title>
  <link>https://liudongdong1.github.io/linux-operation/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/linux-operation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/petal-5044428.png" referrerpolicy="no-referrer">
      </div>Linux 命令 链接 ln sudo ln -sf /usr/bin/g++-8 /usr/bin/g++ ln - make links between files SYNOPSIS ln [OPTION]... [-T] TARGET LINK_NAME (1st form) ln [OPTION]... TARGET (2nd form) ln [OPTION]... TARGET... DIRECTORY (3rd form) ln [OPTION]... -t DIRECTORY TARGET... (4th form) update-alternatives #ls -l filename 可以查看文件的软链接文件 # #--install &lt;链接&gt]]></description>
</item>
<item>
  <title>CudaKernelDownload</title>
  <link>https://liudongdong1.github.io/cudakerneldowload/</link>
  <pubDate>Mon, 16 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cudakerneldowload/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/73.jpeg" referrerpolicy="no-referrer">
      </div>1. NVIDIA显卡驱动 cuda .1. apt 方式安装 #驱动安装 sudo ubuntu-drivers devices 查看系统支持的显卡设备并下载 #**系统设置** &gt; **细节**窗口，你会发现Ubuntu正]]></description>
</item>
<item>
  <title>CPU问题排查命令</title>
  <link>https://liudongdong1.github.io/cpu%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Tue, 17 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/cpu%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[方法一 top命令，然后按shift+p按照CPU排序 ，找到占用CPU过高的进程 ps -mp pid -o THREAD,tid,time | sort -rn ，获取线程信息，并找到占用CPU高的线程 echo 'o]]></description>
</item>
<item>
  <title>Environment</title>
  <link>https://liudongdong1.github.io/environment/</link>
  <pubDate>Wed, 18 Mar 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/environment/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201107135403594.png" referrerpolicy="no-referrer">
      </div>1. Linux 环境变量 一、按照生命周期来分，Linux环境变量可以分为两类： 1、永久的：需要用户修改相关的配置文件，变量永久生效。 2、临时的：用户利用]]></description>
</item>
<item>
  <title>鸟哥私房菜-基础学习篇</title>
  <link>https://liudongdong1.github.io/%E9%B8%9F%E5%93%A5%E7%A7%81%E6%88%BF%E8%8F%9C-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AF%87/</link>
  <pubDate>Thu, 16 Apr 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/%E9%B8%9F%E5%93%A5%E7%A7%81%E6%88%BF%E8%8F%9C-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AF%87/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/01/09/08/particles-7104407__340.jpg" referrerpolicy="no-referrer">
      </div>1. 主机规划与磁盘分区 .1. 各设备在linux中的文件名 .2. MSDOS（MBR） 早期的 Linux 系统为了相容于 Windows 的磁盘，因此使用的是支持 Windows 的 MBR（Mast]]></description>
</item>
<item>
  <title>NBIOT 调研</title>
  <link>https://liudongdong1.github.io/nbiot-%E8%B0%83%E7%A0%94/</link>
  <pubDate>Sun, 26 Apr 2020 14:36:12 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/nbiot-%E8%B0%83%E7%A0%94/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/NBIOT.jpg" referrerpolicy="no-referrer">
      </div>1. background Low power wide area network (LPWAN) has become an exciting new trend in the development of the wireless communication system since it was first proposed as a class of wireless technology used for machine-to-machine (M2M) or Internet of Things (IoT) communications in 2013。（ such as LTE-M, weightless, SigFox, LoRa, and Narrowband Internet of Things (NB-IoT)）]]></description>
</item>
<item>
  <title>LoraProjectSurvey</title>
  <link>https://liudongdong1.github.io/loraprojectsurvey/</link>
  <pubDate>Sun, 26 Apr 2020 14:36:12 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/loraprojectsurvey/</guid>
  <description><![CDATA[1. Project 1. Chirpstack 2. aws-iot-core-lorawan 3. OpenMQTTGateway 2. Paper .1. Network Correlation between weather and signal strength in LoRaWAN networks: An extensive dataset. Comput. Networks 202CCF B DaRe: Data Recovery Through Application Layer Coding for LoRaWAN. IEEE Trans. Mob. Comput. 21(3)CCF A Attack-aware Synchronization-free Data Timestamping in LoRaWAN. ACM Trans. Sens. Networks 18(1)CCF B Impact of Energy Consumption Attacks on LoRaWAN-Enabled Devices in Industrial Context. CCS 2020CCF A Leveraging fairness in LoRaWAN: A novel scheduling scheme for collision avoidance.]]></description>
</item>
<item>
  <title>RFID Location Based Service</title>
  <link>https://liudongdong1.github.io/rfid-location-based-service/</link>
  <pubDate>Tue, 28 Apr 2020 19:38:25 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rfid-location-based-service/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20200428195606397.png" referrerpolicy="no-referrer">
      </div>一、系统简介 RFID是一种通信技术，可通过无线电信号识别特定目标并读写相关数据，而无需识别系统与 特定目标之间建立机械或光学接触。因此，RFI]]></description>
</item>
<item>
  <title>RadarRelativeWork</title>
  <link>https://liudongdong1.github.io/radarrelativework/</link>
  <pubDate>Wed, 29 Apr 2020 15:57:50 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/radarrelativework/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2017/11/27/21/31/computer-2982270__340.jpg" referrerpolicy="no-referrer">
      </div>1. Super-resolution Wang, Jiaming, et al. &ldquo;Unsupervised Remote Sensing Super-Resolution via Migration Image Prior.&rdquo; arXiv preprint arXiv:2105.03579 (2021).论文链接 项目链接 文章提出一个全新的无监督学习框架：MIP&quot;，可以在没有低/高分辨率]]></description>
</item>
<item>
  <title>RadarLesson</title>
  <link>https://liudongdong1.github.io/radarlesson/</link>
  <pubDate>Wed, 29 Apr 2020 15:57:50 &#43;0000</pubDate>
  <author>LiuDongdong</author>
  <guid>https://liudongdong1.github.io/radarlesson/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/mac-laptop_QUQXLZK1WL.jpg" referrerpolicy="no-referrer">
      </div>Transmitter: The radar transmitter produces the short duration high-power rf pulses of energy that are into space by the antenna. Duplexer: The duplexer alternately switches the antenna between the transmitter and receiver so that only one antenna need be used. This switching is necessary because the high-power pulses of the transmitter would destroy the receiver if energy were allowed to enter the receiver. Receiver:The receivers amplify and demodulate the received]]></description>
</item>
<item>
  <title>VirusCheck</title>
  <link>https://liudongdong1.github.io/irrscheck/</link>
  <pubDate>Wed, 13 May 2020 09:38:06 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/irrscheck/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133801.png" referrerpolicy="no-referrer">
      </div>对于主机的入侵痕迹排查，主要从网络连接、进程信息、后门账号、计划任务、登录日志、自启动项、文件等方面进行排查。 1. 显示隐藏文件 2. 查看网络情况 主]]></description>
</item>
<item>
  <title>Voice Recognition</title>
  <link>https://liudongdong1.github.io/voice-recognition/</link>
  <pubDate>Sat, 16 May 2020 09:45:45 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/voice-recognition/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/voice-recognition-speech-detect-deep-260nw-694633963.webp" referrerpolicy="no-referrer">
      </div>语音识别技术就是让智能设备听懂人类的语音。它是一门涉及数字信号处理、人工智能、语言学、数理统计学、声学、情感学及心理学等多学科交叉的科学。这]]></description>
</item>
<item>
  <title>Barcode</title>
  <link>https://liudongdong1.github.io/barcode/</link>
  <pubDate>Tue, 19 May 2020 15:51:51 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/barcode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/tulip-bouquet_DTRVONKKJR.jpg" referrerpolicy="no-referrer">
      </div>由于不同颜色的物体，其反射的可见光的波长不同，白色物体能反射各种波长的可见光，黑色物体则吸收各种波长的可见光，所以当条形码扫描器光源发出的光]]></description>
</item>
<item>
  <title>BlueTooth WorkMode Introduce</title>
  <link>https://liudongdong1.github.io/bluetooth-workmode-introduce/</link>
  <pubDate>Thu, 21 May 2020 17:06:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bluetooth-workmode-introduce/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/headphones-3789634__340.webp" referrerpolicy="no-referrer">
      </div>经典蓝牙模块（BT）：泛指支持蓝牙协议在4.0以下的模块，一般用于数据量比较大的传输，如：语音、音乐等较高数据量传输。经典蓝牙模块可再细分为]]></description>
</item>
<item>
  <title>EnvInstall</title>
  <link>https://liudongdong1.github.io/envinstall/</link>
  <pubDate>Thu, 21 May 2020 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/envinstall/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/display-3123146__340.jpg" referrerpolicy="no-referrer">
      </div>首先必须安装Java JDK （Java JDK下载、安装和环境变量配置，传送阵：点击开始传送） 去Android Studio的中文社区（官网）下载最新]]></description>
</item>
<item>
  <title>BLEProject</title>
  <link>https://liudongdong1.github.io/bleproject/</link>
  <pubDate>Sat, 23 May 2020 17:06:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bleproject/</guid>
  <description><![CDATA[https://github.com/neXenio/BLE-Indoor-Positioning android 蓝牙音频数据传输实例demo： https://github.com/androidthings/sample-bluetooth-audio]]></description>
</item>
<item>
  <title>Unmanned Intelligent Retail</title>
  <link>https://liudongdong1.github.io/unmanned-intelligent-retail/</link>
  <pubDate>Tue, 26 May 2020 09:03:55 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/unmanned-intelligent-retail/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/fashion-1031469__340.webp" referrerpolicy="no-referrer">
      </div>现代零售业历经四次商业模式变革，每一次都催生新的零售业态(包括百货店、连锁模式、超级市场和网络购物等)，其背后的本质是对零售三要素(人、货、]]></description>
</item>
<item>
  <title>BlueTooth Paper</title>
  <link>https://liudongdong1.github.io/bluepaperrecord/</link>
  <pubDate>Sun, 21 Jun 2020 17:16:19 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/bluepaperrecord/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/abstract-flower_NXMSAM0UIR.jpg" referrerpolicy="no-referrer">
      </div>Billah, Md Fazlay Rabbi Masum, et al. &ldquo;BLE Can See: A Reinforcement Learning Approach for RF-based Indoor Occupancy Detection.&rdquo; Proceedings of the 20th International Conference on Information Processing in Sensor Networks (co-located with CPS-IoT Week 2021). 2021. CCF_B Paper: BLE Can See Summary propose BLECS, a Bluetooth-dependent indoor occupancy detection system which can adapt itself in th edynamic environment. The system uses a reinforcement learning approach to predict the occupancy]]></description>
</item>
<item>
  <title>WIFI_Relative</title>
  <link>https://liudongdong1.github.io/wifi_relative/</link>
  <pubDate>Wed, 15 Jul 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wifi_relative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/16.jpeg" referrerpolicy="no-referrer">
      </div>level: author: Daqing Zhang Peking University date: &lsquo;2017-09-05&rsquo; keyword: WiFi activity sensing,Fresnel zone model Paper: CSI Fresnel Zone Summary 这篇文章介绍了CSI，Fresnel现象，以及如何通过Fresnel模型 来感知用户微小的动作。 Research Objective Application Area:CSI]]></description>
</item>
<item>
  <title>voiceLearning</title>
  <link>https://liudongdong1.github.io/voicelearning/</link>
  <pubDate>Wed, 19 Aug 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/voicelearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/firework-new-year-s-eve-december-31-fireworks.jpg" referrerpolicy="no-referrer">
      </div>声音以波的形式传播，即声波（Sound Wave）。当我们以波的视角来理解声音时，却又大繁若简起来：仅凭频率（Frequency）、幅度（Ma]]></description>
</item>
<item>
  <title>Z_WaveRelative</title>
  <link>https://liudongdong1.github.io/z_waverelative/</link>
  <pubDate>Sun, 13 Sep 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/z_waverelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/bee-insect-nature.jpg" referrerpolicy="no-referrer">
      </div>1. Introduce a wireless home automation protocol; an alliance of companies; all z-ware hardware uses sigma chips; z-wave has been a closed protocol; devices and protocol managed by sigma and z-wave alliance; certified devices undergo a certification scheme to ensure compatibility; open source projects needed to rely on reverse engineering the protocol; approx 600 companies and 2200 certified devices; introduce in 2015 and backward compatible with the original standard; improved devices with lower battery comsumption, coupled with improved protocol functionality; data rate 100kb/s; lower power consumption for better battery life; 2.]]></description>
</item>
<item>
  <title>PackageInstall</title>
  <link>https://liudongdong1.github.io/packageinstall/</link>
  <pubDate>Sun, 18 Oct 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/packageinstall/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/city-traffic-vehicles-people.jpg" referrerpolicy="no-referrer">
      </div>1. apt install apt-get，是一条linux命令，适用于deb包管理式的操作系统，主要用于自动从互联网的软件仓库中搜索、安装、升级、卸载软件或操作]]></description>
</item>
<item>
  <title>OpencvLinux</title>
  <link>https://liudongdong1.github.io/opencvlinux/</link>
  <pubDate>Sun, 18 Oct 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/opencvlinux/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/city-behind-window-with-raindrops.jpg" referrerpolicy="no-referrer">
      </div>在源代码编译mediapipe的时候，在编译安装opencv3.4.12时，遇到一些问题，记录下来。 1. opencv3.4.12 Install # To have a full installation: # $ cd &lt;mediapipe root dir&gt; # $ sh ./setup_opencv.sh #]]></description>
</item>
<item>
  <title>MakeBuildRelative</title>
  <link>https://liudongdong1.github.io/makebuildrelative/</link>
  <pubDate>Tue, 20 Oct 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/makebuildrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/black-and-white-image-of-laptop-camera-and-coffee-cup-on-wooden-table.jpg" referrerpolicy="no-referrer">
      </div>**预处理：**g++ -E main.cpp -o main.ii，-E表示只进行预处理。预处理主要是处理各种宏展开；添加行号和文件标识符，为编译器产生调试信息提供]]></description>
</item>
<item>
  <title>AndroidFramework</title>
  <link>https://liudongdong1.github.io/androidframework/</link>
  <pubDate>Wed, 21 Oct 2020 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/androidframework/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/2UNU086C0B.jpg" referrerpolicy="no-referrer">
      </div>Android底层内核空间以Linux Kernel作为基石，上层用户空间由Native系统库、虚拟机运行环境、框架层组成，通过系统调用(Sy]]></description>
</item>
<item>
  <title>AndroidAIDL</title>
  <link>https://liudongdong1.github.io/androidaidl/</link>
  <pubDate>Wed, 21 Oct 2020 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/androidaidl/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/2UNU086C0B.jpg" referrerpolicy="no-referrer">
      </div>AIDL（Android Interface Definition Language）是一种 IDL 语言，用于生成可以在 Android 设备上两个进程之间进行进程间通信（IPC）的代码。 通过 AIDL，]]></description>
</item>
<item>
  <title>Android_文件目录</title>
  <link>https://liudongdong1.github.io/android_%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95/</link>
  <pubDate>Wed, 21 Oct 2020 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/green-leaf_DVKEGHCYKE.jpg" referrerpolicy="no-referrer">
      </div>1. 文件结构 .1. 资源文件结构 //java 文字 txtName.setText(getResources().getText(R.string.name)); // 图片 imgIcon.setBackgroundDrawableResource(R.drawable.icon); // 颜色 txtName.setTextColor(getResouces().getColor(R.color.red)); // 布局 setContentView(R.layout.main); // 控件 txtName = (TextView)findViewById(R.id.txt_name); XML 文件中获取方式 &lt;TextView android:text=&#34;@string/hello_world&#34; android:layout_width=&#34;wrap_content&#34; android:layout_height=&#34;wrap_content&#34; android:background = &#34;@drawable/img_back&#34;/&gt; .2. 编译系统（Gradle） gradlew相]]></description>
</item>
<item>
  <title>Android_layout</title>
  <link>https://liudongdong1.github.io/android_layout/</link>
  <pubDate>Wed, 21 Oct 2020 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_layout/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/17/14/46/crosswalk-6803755__340.jpg" referrerpolicy="no-referrer">
      </div>wrap_content 指示您的视图将其大小调整为内容所需的尺寸。 match_parent 指示您的视图尽可能采用其父视图组所允许的最大尺寸。 1. 不同布局 .1. 约束布局 Constraint Layout ConstraintLayout 使用约束的方式来指]]></description>
</item>
<item>
  <title>PackageDependence</title>
  <link>https://liudongdong1.github.io/packagedependence/</link>
  <pubDate>Sat, 24 Oct 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/packagedependence/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201107182138462.png" referrerpolicy="no-referrer">
      </div>pkg-config是一个linux下的命令，用于获得某一个库/模块的所有编译相关的信息。如果你写了一个库，不管是静态的还是动态的，要提供给]]></description>
</item>
<item>
  <title>linuxfont</title>
  <link>https://liudongdong1.github.io/linuxfont/</link>
  <pubDate>Sat, 24 Oct 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/linuxfont/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201107182138462.png" referrerpolicy="no-referrer">
      </div>1. 查看&amp;安装&amp;显示字体 cat /proc/version fc-list :lang=zh-cn #显示中文字体 sudo apt install -y --force-yes --no-install-recommends fonts-wqy-microhei #下载安装字体 sudo apt install -y --force-yes --no-install-recommends ttf-wqy-zenhei 2. 词云绘制 # coding:utf-8 import jieba # 分词 import matplotlib.pyplot as plt # 数据]]></description>
</item>
<item>
  <title>Android_Service</title>
  <link>https://liudongdong1.github.io/android_service/</link>
  <pubDate>Wed, 11 Nov 2020 20:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_service/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/PVNZAD7EQT.jpg" referrerpolicy="no-referrer">
      </div>Thread是线程，程序执行的最小单元，分配CPU的基本单位！ 而Service则是Android提供一个允许长时间留驻后台的一个组件，最常见]]></description>
</item>
<item>
  <title>Android_BroadcastReceiver</title>
  <link>https://liudongdong1.github.io/android_broadcastreceiver/</link>
  <pubDate>Thu, 12 Nov 2020 20:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_broadcastreceiver/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/JLEKLMFTIC.jpg" referrerpolicy="no-referrer">
      </div>分为两个角色：广播发送者、广播接收者,使用了设计模式中的观察者模式：基于消息的发布 / 订阅事件模型 标准广播：发出广播后，该广播事件的接收者，几]]></description>
</item>
<item>
  <title>Android_资源文件&amp;使用</title>
  <link>https://liudongdong1.github.io/android_%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
  <pubDate>Thu, 12 Nov 2020 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
  <description><![CDATA[目录 资源类型 anim/ 定义动画属性的XML文件。它们被保存在res/anim/文件夹下，通过R.anim类访问 color/ 定义颜色状态列表的XML文件。它们被]]></description>
</item>
<item>
  <title>Android_tools</title>
  <link>https://liudongdong1.github.io/android_tools/</link>
  <pubDate>Thu, 12 Nov 2020 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_tools/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/WFENDCQ66L.jpg" referrerpolicy="no-referrer">
      </div>1. 图表绘制类 .1. MPAndroidChart implementation &#39;com.github.PhilJay:MPAndroidChart:v3.1.0&#39; allprojects { repositories { google() jcenter() maven { url &#34;https://jitpack.io&#34; } } } 绘制多个线条demo xml布局， lineChart 部件 &lt;com.github.mikephil.charting.charts.LineChart android:id=&#34;@+id/chart1&#34; android:layout_width=&#34;match_parent&#34; android:layout_height=&#34;match_parent&#34; tools:ignore=&#34;MissingClass&#34; /&gt; /** * @function: 初始化chart相关设置和监听函数 * */]]></description>
</item>
<item>
  <title>Android_ContentProvider</title>
  <link>https://liudongdong1.github.io/android_contentprovider/</link>
  <pubDate>Thu, 12 Nov 2020 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_contentprovider/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/8KB3JCCFDX.jpg" referrerpolicy="no-referrer">
      </div>ContentProvider属于 Android的四大组件之一，基于 Android中的Binder机制实现。主要应用于进程间数据传输。Con]]></description>
</item>
<item>
  <title>Android_RxAndroidOp</title>
  <link>https://liudongdong1.github.io/android_rxandroidop/</link>
  <pubDate>Sat, 14 Nov 2020 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_rxandroidop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/fireworks-celebration_LTYITHITMX.jpg" referrerpolicy="no-referrer">
      </div>1. RxBLE Scanner private void scanBleDevices() { scanDisposable = rxBleClient.scanBleDevices( new ScanSettings.Builder() .setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY) .setCallbackType(ScanSettings.CALLBACK_TYPE_ALL_MATCHES) .build(), new ScanFilter.Builder() // .setDeviceAddress(&#34;B4:99:4C:34:DC:8B&#34;) // add custom filters if needed .build() ) .observeOn(AndroidSchedulers.mainThread()) .doFinally(this::dispose) .subscribe(resultsAdapter::addScanResult, this::onScanFailure); } Connection bleDevice = SampleApplication.getRxBleClient(this).getBleDevice(macAddress); //获取设备 // How to listen for connection state changes // Note: it is meant for UI updates only — one should not observeConnectionStateChanges() with BLE connection logic stateDisposable =]]></description>
</item>
<item>
  <title>pythoAudioOp</title>
  <link>https://liudongdong1.github.io/pythonaudioop/</link>
  <pubDate>Thu, 19 Nov 2020 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/pythonaudioop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/illuminated-bridge-and-city-at-night.jpg" referrerpolicy="no-referrer">
      </div>语音信号有三个重要的参数：声道数、取样频率和量化位数。 声道数：可以是单声道或者是双声道 采样频率：一秒内对声音信号的采集次数，44100Hz采]]></description>
</item>
<item>
  <title>Tools_ButterKnife</title>
  <link>https://liudongdong1.github.io/tools_butterknite/</link>
  <pubDate>Thu, 19 Nov 2020 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/tools_butterknite/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>Android视图的字段和方法绑定，使用注释处理生成样板代码。 在字段上使用@BindView消除findViewById调用。 将列表或数组中]]></description>
</item>
<item>
  <title>NetworkLearning</title>
  <link>https://liudongdong1.github.io/networklearning/</link>
  <pubDate>Mon, 30 Nov 2020 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/networklearning/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20201208182429066.png" referrerpolicy="no-referrer">
      </div>1. Concept open system; closed system; computer network; osi stands; protocals: host name; ip address; mac address(ipconfig/all); port; socket(combined with ip and port); DNS; ARP; RARP; internet and web programming: Goals: Performance – It is measured in terms of transit time and response time. The number of users Type of transmission medium Capability of connected network Efficiency of software Reliability – It is measured in terms of Frequency of failure]]></description>
</item>
<item>
  <title>userOperation</title>
  <link>https://liudongdong1.github.io/useroperation/</link>
  <pubDate>Fri, 18 Dec 2020 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/useroperation/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210515184224.png" referrerpolicy="no-referrer">
      </div>1 用户和用户组分类 Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须要拥有一个账号进入系统。账号实质上就是一个用户]]></description>
</item>
<item>
  <title>RFIDSetting</title>
  <link>https://liudongdong1.github.io/rfidsetting/</link>
  <pubDate>Wed, 06 Jan 2021 19:38:25 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/rfidsetting/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20210121160903612.png" referrerpolicy="no-referrer">
      </div>The Octane SDK includes the core library by acting as a wrapper for extraction, modifying, and the application of a Reader&rsquo;s Low Level Reader Protocol (LLRP) settings, as well as high-level control over Reader settings, tag query, and tag-write operation. 1. Environment 1.1. Device down Octanesdk.zip, contains the libraries, technical reference. 1.2. Theory 1.2.1. Backscatter Power the power is affected by the antenna design, impedance matching, and the changes in]]></description>
</item>
<item>
  <title>FileEncode</title>
  <link>https://liudongdong1.github.io/fileencode/</link>
  <pubDate>Fri, 15 Jan 2021 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/fileencode/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501133815.png" referrerpolicy="no-referrer">
      </div>Unicode只是对信源编码，对字符集数字化，解决了字符到数字化的映射。 UTF-32、UTF-16、UTF-8是信道编码，为更好的存储和传输]]></description>
</item>
<item>
  <title>CodeReading</title>
  <link>https://liudongdong1.github.io/codereading/</link>
  <pubDate>Mon, 18 Jan 2021 19:38:25 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/codereading/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/image-20210121160903612.png" referrerpolicy="no-referrer">
      </div>1. Connect public void connect(String address, int port, boolean useTLS) throws OctaneSdkException { LLRPIoHandlerAdapterImpl llrpio = new LLRPIoHandlerAdapterImpl(); llrpio.setKeepAliveAck(false); llrpio.setKeepAliveForward(true); if (this.readerConnection == null) { this.readerConnection = new LLRPConnector(this, address, llrpio); } llrpio.setConnection(this.readerConnection); ((LLRPConnector)this.readerConnection).setPort(port); try { ((LLRPConnector)this.readerConnection).connect((long)this.connectTimeout, useTLS); } catch (LLRPConnectionAttemptFailedException var6) { this.readerConnection = null; throw new OctaneSdkException(&#34;Error connecting to the reader (&#34; + address + &#34;) : &#34; + var6.getMessage()); } catch (RuntimeIoException var7) { this.readerConnection = null;]]></description>
</item>
<item>
  <title>PaperRelative</title>
  <link>https://liudongdong1.github.io/paperrelative/</link>
  <pubDate>Tue, 19 Jan 2021 11:19:34 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/paperrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111418.png" referrerpolicy="no-referrer">
      </div>Ahsan, H., Prabhu, A., Deeksha, S. D., Domanal, S. G., Ashwin, T. S., &amp; Reddy, G. R. M. (2014, August). Vision based laser controlled keyboard system for the disabled. In Proceedings of the 7th International Symposium on Visual Information Communication and Interaction (pp. 200-203).
Paper: Keyboard Summary design one such unistroke keyboard system with optimized character placement based on frequenctly used digraphs and trigraphs. Module Calibration: purpose: the angle and position of the keyboard can change every time it&rsquo;s set up, so its necessary to know how the exact position and size of the captured keyboard; Methods: Input: a captured frame; set of points representing the corners of the keyboard; convert captured frame to hsv; define the range for blue color detection; get the contours that lie within the range; filter the contours based on area; store the center of each of these contours; calibrate the keyboard angle; Calibrate keyboard angle: input: set of points representing the corners of the keyboard; output: the calibrated keyboard; sort all the points according to x distance; divide sorted points into 3 parts as: left(0-6), mid(7-14), right(15-21) each part: sort based on y distance; sort consecutive pairs of points based x distance; Tracker the laser: using the average of a fixed number of frames to represent the position; CamK: Camera-based Keystroke Detection and Localization for Small Mobile Devices.]]></description>
</item>
<item>
  <title>SerialOp</title>
  <link>https://liudongdong1.github.io/serialop/</link>
  <pubDate>Mon, 25 Jan 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/serialop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210409091525.png" referrerpolicy="no-referrer">
      </div>1. Serial Type 1.1. 物理接口形式 UART接口：通用异步收发器（Universal Asynchronous Receiver/Transmitter)，UART是串口收发的逻辑电]]></description>
</item>
<item>
  <title>FlacToPic</title>
  <link>https://liudongdong1.github.io/flactopic/</link>
  <pubDate>Thu, 28 Jan 2021 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/flactopic/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501112857.png" referrerpolicy="no-referrer">
      </div>1. flactoPic import soundfile as sf import matplotlib.pyplot as plt import numpy as np from librosa import display as ld def drawSpecgramFlac(filename,savefilename): &#39;&#39;&#39; 绘制语谱图，使用plt.specgram 功能 &#39;&#39;&#39; data, samplerate = sf.read(filename) times = np.linspace(0,len(data),len(data))/samplerate plt.clf() plt.plot(times,data) Pxx, freqs, bins, im = plt.specgram(data, Fs=samplerate) plt.xlim(44,46) plt.ylim(2000,6000) plt.axis(&#39;off&#39;) plt.savefig(&#39;{}.png&#39;.format(savefilename),dpi=1080) def drawSpecgramFlacV1(filename,savefilename): &#39;&#39;&#39; 绘]]></description>
</item>
<item>
  <title>FilePackage</title>
  <link>https://liudongdong1.github.io/filepackage/</link>
  <pubDate>Mon, 15 Feb 2021 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/filepackage/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/06/07/14/05/grey-heron-6318054__340.jpg" referrerpolicy="no-referrer">
      </div>文件打包和压缩 Linux 上的压缩包文件格式，除了 Windows 最常见的＊.zip、＊.rar、.7z 后缀的压缩文件，还有 .gz、.xz、.bz2、.tar、.t]]></description>
</item>
<item>
  <title>ProductRelative</title>
  <link>https://liudongdong1.github.io/productrelative/</link>
  <pubDate>Mon, 19 Apr 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/productrelative/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501110925.png" referrerpolicy="no-referrer">
      </div>0. 高频低频 影响因素 读写器发射功率越大，读写距离相应的也会增大。 天线增益越大，波束宽度越小，则读写距离越远，范围越窄，读取的范围控制越好。 标签]]></description>
</item>
<item>
  <title>boneConductor</title>
  <link>https://liudongdong1.github.io/boneconductor/</link>
  <pubDate>Fri, 30 Apr 2021 16:00:04 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/boneconductor/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://gitee.com/github-25970295/blogImage/raw/master/img/20210501111620.png" referrerpolicy="no-referrer">
      </div>骨传导扬声器也称为振动扬声器，其通过产生与声音信号相同频率与相应幅度的机械振动，推动人体组织与骨骼，从而刺激耳蜗中的听觉神经，使人听到声音，]]></description>
</item>
<item>
  <title>Ai拟声</title>
  <link>https://liudongdong1.github.io/ai%E6%8B%9F%E5%A3%B0/</link>
  <pubDate>Sat, 28 Aug 2021 21:59:57 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/ai%E6%8B%9F%E5%A3%B0/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/8LT22UWAUZ.jpg" referrerpolicy="no-referrer">
      </div>1. MockingBird AI拟声: 5秒内克隆您的声音并生成任意语音内容 Clone a voice in 5 seconds to generate arbitrary speech in real-time]]></description>
</item>
<item>
  <title>WiFiTag</title>
  <link>https://liudongdong1.github.io/wifitag/</link>
  <pubDate>Mon, 06 Sep 2021 19:38:25 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/wifitag/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/fall-leaf_DYRNHWZGAN.jpg" referrerpolicy="no-referrer">
      </div>Gao, C., Li, Y., &amp; Zhang, X. (2018). LiveTag: Sensing human-object interaction through passive chipless WiFi tags. In 15th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 18) (pp. 533-546). level: CCF_A; NSDI Paper: LiveTag Summary touched by fingers, it distuibs ambient WiFi channel in a deterministic way, multiple metallic structures can be printed on the same tag to create unique touch points. LiveTag incorporates customized multi-antenna beamforming algorithms]]></description>
</item>
<item>
  <title>Android_RxAndroid</title>
  <link>https://liudongdong1.github.io/android_rxandroid/</link>
  <pubDate>Sun, 19 Sep 2021 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_rxandroid/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/QXJWWP6OZW.jpg" referrerpolicy="no-referrer">
      </div>1. RxJava 角色 作用 被观察者（Observable） 产生事件 观察者（Observer） 接收事件，并给出响应动作 订阅（Subscribe） 连接 被观察者]]></description>
</item>
<item>
  <title>Android_BlueTooth</title>
  <link>https://liudongdong1.github.io/android_bluetooth/</link>
  <pubDate>Thu, 11 Nov 2021 10:00:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_bluetooth/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/FFW0QNLXLK.jpg" referrerpolicy="no-referrer">
      </div>Ble开发中,存在着两个角色：中心设备角色和外围设备角色。 外围设备：一般指非常小或者低功耗设备,更强大的中心设备可以连接外围设备为中心设备提]]></description>
</item>
<item>
  <title>AndroidStandardDevelop</title>
  <link>https://liudongdong1.github.io/androidstandarddevelop/</link>
  <pubDate>Fri, 12 Nov 2021 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/androidstandarddevelop/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/08/25/08/17/modern-4428919__340.jpg" referrerpolicy="no-referrer">
      </div>原文地址：Android 开发规范（完结版） 2 AS 规范 工欲善其事，必先利其器。 尽量使用最新的稳定版的 IDE 进行开发； 编码格式统一为 UTF-8； 编辑完]]></description>
</item>
<item>
  <title>Android_Sensor</title>
  <link>https://liudongdong1.github.io/android_sensor/</link>
  <pubDate>Fri, 12 Nov 2021 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_sensor/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/PCRMIXBGOE.jpg" referrerpolicy="no-referrer">
      </div>传感器的定义：一种物理设备或者生物器官，能够探测、感受外界的信号，物理条件(如光，热， 适度)或化学组成（如烟雾），并将探知的信息传递给其他的]]></description>
</item>
<item>
  <title>AndroidStudio_工具</title>
  <link>https://liudongdong1.github.io/androidstudio_%E5%B7%A5%E5%85%B7/</link>
  <pubDate>Mon, 15 Nov 2021 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/androidstudio_%E5%B7%A5%E5%85%B7/</guid>
  <description><![CDATA[1. SDK 工具 apkanalyzer：用于在构建过程完成后深入分析我们的 APK 组成。 avdmanager：可让我们从命令行创建和管理 Android 虚拟设备 (AVD]]></description>
</item>
<item>
  <title>Android_activity_setResult</title>
  <link>https://liudongdong1.github.io/android_activity_setresult/</link>
  <pubDate>Tue, 30 Nov 2021 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_activity_setresult/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/08/23/08/25/leaves-6567141__340.jpg" referrerpolicy="no-referrer">
      </div>在一个主界面(主Activity)通过意图跳转至多个不同子Activity上去，当子模块的代码执行完毕后再次返回主页面，将子activity]]></description>
</item>
<item>
  <title>VoiceResearch</title>
  <link>https://liudongdong1.github.io/voiceresearch/</link>
  <pubDate>Wed, 19 Jan 2022 07:56:09 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/voiceresearch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2019/03/27/15/24/animal-4085255__340.jpg" referrerpolicy="no-referrer">
      </div>1. 语音激活检测 （VAD) 近场识别场景: 比如使用语音输入法时，用户可以用手按着语音按键说话，结束之后松开，由于近场情况下信噪比（signal to]]></description>
</item>
<item>
  <title>Unix环境高级编程-进程</title>
  <link>https://liudongdong1.github.io/unix%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B-%E8%BF%9B%E7%A8%8B/</link>
  <pubDate>Thu, 10 Mar 2022 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/unix%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B-%E8%BF%9B%E7%A8%8B/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/04/10/19/07/flower-7124081__340.jpg" referrerpolicy="no-referrer">
      </div>1. c程序启动&amp;终止 2. 环境表 int main(int argc, char *argv[], char *envp[]); 通过size命令可以进行查看]]></description>
</item>
<item>
  <title>FileOp</title>
  <link>https://liudongdong1.github.io/unix%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B-%E6%96%87%E4%BB%B6/</link>
  <pubDate>Sun, 10 Apr 2022 22:21:29 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/unix%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B-%E6%96%87%E4%BB%B6/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2022/02/21/21/18/animal-7027635__480.jpg" referrerpolicy="no-referrer">
      </div>1. 文件共享 .1. 内核文件数据结构 .2. 多进程打开同一文件 每一个进程有自己的对该文件的当前偏移量 lseek 定位到文件当前尾端，则文件表项的当前文件偏移量被设置]]></description>
</item>
<item>
  <title>Android-组件开发</title>
  <link>https://liudongdong1.github.io/android-%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
  <pubDate>Fri, 21 Oct 2022 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android-%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/2UNU086C0B.jpg" referrerpolicy="no-referrer">
      </div>组件调试，生命周期 ARouter 使用： https://github.com/xiangjiana/Android-MS/blob/master/android/router.md https://www.jianshu.com/p/394cff2c3504 https://developer.android.com/guide/components/aidl?hl=zh-cn 官网文档AIDL 基本使用 序列化 googleProtobuf 使用 Resource https://www.jianshu.com/p/59368ce8b670 android 组件化开发系列教程 要有组件化架构设计的整体思想（各个组件之间的依赖]]></description>
</item>
<item>
  <title>Android_NDK开发教程</title>
  <link>https://liudongdong1.github.io/android_ndk%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</link>
  <pubDate>Fri, 21 Oct 2022 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android_ndk%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</guid>
  <description><![CDATA[0. NDK 环境安装 https://blog.csdn.net/hello_1995/article/details/108858909 Tools-&gt;SDK Manager-&gt;Android SDK-&gt;SDK Tools，勾选 NDK 和 CMake 选中 Show Package Details 复选框，选中 NDK (Side by side) 复选框及其下方与您要安装的 NDK 版本对应的复选框。Android Studio 会将所]]></description>
</item>
<item>
  <title>OkHttp</title>
  <link>https://liudongdong1.github.io/network-okhttp/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/network-okhttp/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>OkHttp是一个优秀的网络请求框架,可能一说到网络请求框架,可能很多人都会想到volley,volley是一个Google提供的网络请求框]]></description>
</item>
<item>
  <title>observer/observable</title>
  <link>https://liudongdong1.github.io/jdk-observer-observable/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdk-observer-observable/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>1. JDK-Observable 可观察对象类 public class Observable { private boolean changed = false; private Vector&lt;Observer&gt; obs; /** Construct an Observable with zero Observers. */ public Observable() { obs = new Vector&lt;&gt;(); } /** * Adds an observer to the set of observers for this object, provided * that it is not the same as some observer already in the set. * The order in which notifications]]></description>
</item>
<item>
  <title>network-retrofit</title>
  <link>https://liudongdong1.github.io/network-retrofit/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/network-retrofit/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>Retrofit是Square公司开发的一款针对Android和java的网络请求框架，遵循Restful设计风格，底层基于OkHttp。 支]]></description>
</item>
<item>
  <title>EventBus</title>
  <link>https://liudongdong1.github.io/eventbus/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/eventbus/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>Event： 事件，可以是任意类型的对象 Subscriber： 事件订阅者，在 EventBus 3.0 之前我们必须定义以onEvent开头的那几个方法，分别是 onEvent 、o]]></description>
</item>
<item>
  <title>picture_Glide</title>
  <link>https://liudongdong1.github.io/picture_glide/</link>
  <pubDate>Wed, 23 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/picture_glide/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>glide是google官方推荐的图片加载框架，github地址为bumptech/glide 。glide的强大在于它的生命周期管理(gli]]></description>
</item>
<item>
  <title>database-greeDaos</title>
  <link>https://liudongdong1.github.io/database-greedaos/</link>
  <pubDate>Tue, 13 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/database-greedaos/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>for new apps we recommend ObjectBox, a new object-oriented database that is much faster than SQLite and easier to use. For existing apps based on greenDAO we offer DaoCompat for an easy switch (see also the announcement). 1. GreeDAO 一个将对象映射到SQLite数据库中的轻量且快速的ORM（ob]]></description>
</item>
<item>
  <title>Dagger2依赖注入</title>
  <link>https://liudongdong1.github.io/dagger%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</link>
  <pubDate>Tue, 13 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dagger%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>依赖注入可以实现解耦，达到高内聚低耦合的目的，保证代码的健壮性、灵活性和可维护性。 1. 依赖注入方式 1、构造注入：通过构造函数传参给依赖的成员变]]></description>
</item>
<item>
  <title>database-objectbox</title>
  <link>https://liudongdong1.github.io/database-objectbox/</link>
  <pubDate>Wed, 14 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/database-objectbox/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>ObjectBox数据库是用于对象的超快速轻量级数据库，由greenrobot团队开发，与GreenDao，EventBus等师出同门。 1. 使]]></description>
</item>
<item>
  <title>Android_性能优化汇总</title>
  <link>https://liudongdong1.github.io/android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
  <pubDate>Sat, 24 Dec 2022 23:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/16/15/35/technology-6801334__340.jpg" referrerpolicy="no-referrer">
      </div>性能问题排查： 1.数据埋点上报 2.使用控制台的NetWork、Performance等工具 3.webpack-bundle-analyzer]]></description>
</item>
<item>
  <title>database-objectbox</title>
  <link>https://liudongdong1.github.io/database-objectbox/</link>
  <pubDate>Wed, 14 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/database-objectbox/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>ObjectBox数据库是用于对象的超快速轻量级数据库，由greenrobot团队开发，与GreenDao，EventBus等师出同门。 1. 使]]></description>
</item>
<item>
  <title>Dagger2依赖注入</title>
  <link>https://liudongdong1.github.io/dagger%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</link>
  <pubDate>Tue, 13 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/dagger%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>依赖注入可以实现解耦，达到高内聚低耦合的目的，保证代码的健壮性、灵活性和可维护性。 1. 依赖注入方式 1、构造注入：通过构造函数传参给依赖的成员变]]></description>
</item>
<item>
  <title>database-greeDaos</title>
  <link>https://liudongdong1.github.io/database-greedaos/</link>
  <pubDate>Tue, 13 Dec 2022 21:31:56 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/database-greedaos/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/09/15/06/29/pot-marigold-6625895__340.jpg" referrerpolicy="no-referrer">
      </div>for new apps we recommend ObjectBox, a new object-oriented database that is much faster than SQLite and easier to use. For existing apps based on greenDAO we offer DaoCompat for an easy switch (see also the announcement). 1. GreeDAO 一个将对象映射到SQLite数据库中的轻量且快速的ORM（ob]]></description>
</item>
<item>
  <title>picture_Glide</title>
  <link>https://liudongdong1.github.io/picture_glide/</link>
  <pubDate>Wed, 23 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/picture_glide/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>glide是google官方推荐的图片加载框架，github地址为bumptech/glide 。glide的强大在于它的生命周期管理(gli]]></description>
</item>
<item>
  <title>Mvp-arch</title>
  <link>https://liudongdong1.github.io/mvp-arch/</link>
  <pubDate>Mon, 21 Nov 2022 22:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/mvp-arch/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.pixabay.com/photo/2021/11/24/02/48/christmas-6820100__340.jpg" referrerpolicy="no-referrer">
      </div>Architecture Blueprint Project Structure data: It contains all the data accessing and manipulating components. di: Dependency providing classes using Dagger2. ui: View classes along with their corresponding Presenters. service: Services for the application. utils: Utility classes. 数据层面 通过AppDataManager 提供数据库，网络数据，本地P]]></description>
</item>
<item>
  <title>EventBus</title>
  <link>https://liudongdong1.github.io/eventbus/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/eventbus/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>Event： 事件，可以是任意类型的对象 Subscriber： 事件订阅者，在 EventBus 3.0 之前我们必须定义以onEvent开头的那几个方法，分别是 onEvent 、o]]></description>
</item>
<item>
  <title>network-retrofit</title>
  <link>https://liudongdong1.github.io/network-retrofit/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/network-retrofit/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>Retrofit是Square公司开发的一款针对Android和java的网络请求框架，遵循Restful设计风格，底层基于OkHttp。 支]]></description>
</item>
<item>
  <title>observer/observable</title>
  <link>https://liudongdong1.github.io/jdk-observer-observable/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/jdk-observer-observable/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>1. JDK-Observable 可观察对象类 public class Observable { private boolean changed = false; private Vector&lt;Observer&gt; obs; /** Construct an Observable with zero Observers. */ public Observable() { obs = new Vector&lt;&gt;(); } /** * Adds an observer to the set of observers for this object, provided * that it is not the same as some observer already in the set. * The order in which notifications]]></description>
</item>
<item>
  <title>OkHttp</title>
  <link>https://liudongdong1.github.io/network-okhttp/</link>
  <pubDate>Sat, 19 Nov 2022 23:02:27 &#43;0000</pubDate>
  <author>liudongdong1</author>
  <guid>https://liudongdong1.github.io/network-okhttp/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="https://cdn.stocksnap.io/img-thumbs/280h/pigeon-bird_8TT2RKSMSE.jpg" referrerpolicy="no-referrer">
      </div>OkHttp是一个优秀的网络请求框架,可能一说到网络请求框架,可能很多人都会想到volley,volley是一个Google提供的网络请求框]]></description>
</item>
</channel>
</rss>
